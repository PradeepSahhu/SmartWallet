{"id":"ad604b06c3c253844dd438e66a62284b","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"../../interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Not enough balance for performing a CREATE2 deploy.\n     */\n    error Create2InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error Create2FailedDeployment();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Create2InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        if (addr == address(0)) {\n            revert Create2FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"account-abstraction/contracts/core/BaseAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-empty-blocks */\n\nimport \"../interfaces/IAccount.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./UserOperationLib.sol\";\n\n/**\n * Basic account implementation.\n * This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n * Specific account implementation should inherit it and provide the account-specific logic.\n */\nabstract contract BaseAccount is IAccount {\n    using UserOperationLib for PackedUserOperation;\n\n    /**\n     * Return the account nonce.\n     * This method returns the next sequential nonce.\n     * For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\n     */\n    function getNonce() public view virtual returns (uint256) {\n        return entryPoint().getNonce(address(this), 0);\n    }\n\n    /**\n     * Return the entryPoint used by this account.\n     * Subclass should return the current entryPoint used by this account.\n     */\n    function entryPoint() public view virtual returns (IEntryPoint);\n\n    /// @inheritdoc IAccount\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external virtual override returns (uint256 validationData) {\n        _requireFromEntryPoint();\n        validationData = _validateSignature(userOp, userOpHash);\n        _validateNonce(userOp.nonce);\n        _payPrefund(missingAccountFunds);\n    }\n\n    /**\n     * Ensure the request comes from the known entrypoint.\n     */\n    function _requireFromEntryPoint() internal view virtual {\n        require(\n            msg.sender == address(entryPoint()),\n            \"account: not from EntryPoint\"\n        );\n    }\n\n    /**\n     * Validate the signature is valid for this message.\n     * @param userOp          - Validate the userOp.signature field.\n     * @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n     *                          (also hashes the entrypoint and chain id)\n     * @return validationData - Signature and time-range of this operation.\n     *                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n     *                                    otherwise, an address of an aggregator contract.\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          If the account doesn't use time-range, it is enough to return\n     *                          SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function _validateSignature(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual returns (uint256 validationData);\n\n    /**\n     * Validate the nonce of the UserOperation.\n     * This method may validate the nonce requirement of this account.\n     * e.g.\n     * To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n     *      `require(nonce < type(uint64).max)`\n     * For a hypothetical account that *requires* the nonce to be out-of-order:\n     *      `require(nonce & type(uint64).max == 0)`\n     *\n     * The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n     * action is needed by the account itself.\n     *\n     * @param nonce to validate\n     *\n     * solhint-disable-next-line no-empty-blocks\n     */\n    function _validateNonce(uint256 nonce) internal view virtual {\n    }\n\n    /**\n     * Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n     * SubClass MAY override this method for better funds management\n     * (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n     * it will not be required to send again).\n     * @param missingAccountFunds - The minimum value this method should send the entrypoint.\n     *                              This value MAY be zero, in case there is enough deposit,\n     *                              or the userOp has a paymaster.\n     */\n    function _payPrefund(uint256 missingAccountFunds) internal virtual {\n        if (missingAccountFunds != 0) {\n            (bool success, ) = payable(msg.sender).call{\n                value: missingAccountFunds,\n                gas: type(uint256).max\n            }(\"\");\n            (success);\n            //ignore failure (its EntryPoint's job to verify, not account.)\n        }\n    }\n}\n"},"account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable no-inline-assembly */\n\n\n /*\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n  * must return this value in case of signature failure, instead of revert.\n  */\nuint256 constant SIG_VALIDATION_FAILED = 1;\n\n\n/*\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n * return this value on success.\n */\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\n\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validaUntil - This UserOp is valid only up to this timestamp.\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n * @param validAfter - First timestamp this UserOperation is valid.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ? 1 : 0) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n"},"account-abstraction/contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n    /**\n     * Get sender from user operation data.\n     * @param userOp - The user operation data.\n     */\n    function getSender(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {\n            data := calldataload(userOp)\n        }\n        return address(uint160(data));\n    }\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     */\n    function encode(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (uint128(bytes16(packed)), uint128(uint256(packed)));\n    }\n\n    //unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     */\n    function hash(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp));\n    }\n}\n"},"account-abstraction/contracts/interfaces/IAccount.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\ninterface IAccount {\n    /**\n     * Validate user's signature and nonce\n     * the entryPoint will make the call to the recipient only if this validation call returns successfully.\n     * signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n     * This allows making a \"simulation call\" without a valid signature\n     * Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n     *\n     * @dev Must validate caller is the entryPoint.\n     *      Must validate the signature and nonce\n     * @param userOp              - The operation that is about to be executed.\n     * @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n     * @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n     *                              This is the minimum amount to transfer to the sender(entryPoint) to be\n     *                              able to make the call. The excess is left as a deposit in the entrypoint\n     *                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n     *                              In case there is a paymaster in the request (or the current deposit is high\n     *                              enough), this value will be zero.\n     * @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n     *                              `_unpackValidationData` to encode and decode.\n     *                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *                                 otherwise, an address of an \"authorizer\" contract.\n     *                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\n     *                              <6-byte> validAfter - First timestamp this operation is valid\n     *                                                    If an account doesn't use time-range, it is enough to\n     *                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n     *                              Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validateUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 missingAccountFunds\n    ) external returns (uint256 validationData);\n}\n"},"account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate aggregated signature.\n     * Revert if the aggregated signature does not match the given list of operations.\n     * @param userOps   - Array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * Validate signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation.\n     * @param userOps              - Array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps, to identify the offending op.\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Returned aggregated signature info:\n     * The aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n}\n"},"account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.5;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor/\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"contracts/SmartContractWallet.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\";\n// import \"@account-abstraction/=lib/account-abstraction/develop/contracts/core/BaseAccount.sol\";\nimport \"../account-abstraction/contracts/core/BaseAccount.sol\";\nimport \"../account-abstraction/contracts/core/Helpers.sol\";\n\n// import \"https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/core/BaseAccount.sol\";\n// import \"https://github.com/eth-infinitism/account-abstraction/blob/develop/contracts/core/Helpers.sol\";\n\n/**\n * minimal account.\n *  this is sample minimal account.\n *  has execute, eth handling methods\n *  has a single signer that can send requests through the entryPoint.\n */\ncontract SmartContractWallet is BaseAccount, UUPSUpgradeable, Initializable {\n    address public owner;\n\n    IEntryPoint private immutable _entryPoint;\n    bytes32 private immutable password;\n\n    event SmartSample(IEntryPoint indexed entryPoint, address indexed owner);\n\n    modifier onlyOwner() {\n        _onlyOwner();\n        _;\n    }\n\n    /// @inheritdoc BaseAccount\n    function entryPoint() public view virtual override returns (IEntryPoint) {\n        return _entryPoint;\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    receive() external payable {}\n\n    constructor(IEntryPoint anEntryPoint) {\n        _entryPoint = anEntryPoint;\n        _disableInitializers();\n    }\n\n    function _onlyOwner() internal view {\n        //directly from EOA owner, or through the account itself (which gets redirected through execute())\n        require(\n            msg.sender == owner || msg.sender == address(this),\n            \"only owner\"\n        );\n    }\n\n    function login(string memory _data) public view {\n        bytes32 message = keccak256(abi.encode(_data));\n        require(message == password, \"You are not the owner\");\n    }\n\n    function checkBalance() public view returns (address) {\n        return address(this);\n    }\n\n    /**\n     * execute a transaction (called directly from owner, or by entryPoint)\n     * @param dest destination address to call\n     * @param value the value to pass in this call\n     * @param func the calldata to pass in this call\n     */\n    // function execute(address dest, uint256 value, bytes calldata func) external {\n    //     _requireFromEntryPointOrOwner();\n    //     _call(dest, value, func);\n    // }\n\n    /**\n     * execute a sequence of transactions\n     * @dev to reduce gas consumption for trivial case (no value), use a zero-length array to mean zero value\n     * @param dest an array of destination addresses\n     * @param value an array of values to pass to each call. can be zero-length for no-value calls\n     * @param func an array of calldata to pass to each call\n     */\n    // function executeBatch(address[] calldata dest, uint256[] calldata value, bytes[] calldata func) external {\n    //     _requireFromEntryPointOrOwner();\n    //     require(dest.length == func.length && (value.length == 0 || value.length == func.length), \"wrong array lengths\");\n    //     if (value.length == 0) {\n    //         for (uint256 i = 0; i < dest.length; i++) {\n    //             _call(dest[i], 0, func[i]);\n    //         }\n    //     } else {\n    //         for (uint256 i = 0; i < dest.length; i++) {\n    //             _call(dest[i], value[i], func[i]);\n    //         }\n    //     }\n    // }\n\n    /**\n     * @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n     * a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n     * the implementation by calling `upgradeTo()`\n     * @param anOwner the owner (signer) of this account\n     */\n    function initialize(address anOwner) public virtual initializer {\n        _initialize(anOwner);\n    }\n\n    function _initialize(address anOwner) internal virtual {\n        owner = anOwner;\n        emit SmartSample(_entryPoint, owner);\n    }\n\n    // Require the function call went through EntryPoint or owner\n    function _requireFromEntryPointOrOwner() internal view {\n        require(\n            msg.sender == address(entryPoint()) || msg.sender == owner,\n            \"account: not Owner or EntryPoint\"\n        );\n    }\n\n    /// implement template method of BaseAccount\n    function _validateSignature(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash\n    ) internal virtual override returns (uint256 validationData) {\n        bytes32 hash = MessageHashUtils.toEthSignedMessageHash(userOpHash);\n        if (owner != ECDSA.recover(hash, userOp.signature))\n            return SIG_VALIDATION_FAILED;\n        return SIG_VALIDATION_SUCCESS;\n    }\n\n    function _call(address target, uint256 value, bytes memory data) internal {\n        (bool success, bytes memory result) = target.call{value: value}(data);\n        if (!success) {\n            assembly {\n                revert(add(result, 32), mload(result))\n            }\n        }\n    }\n\n    // /**\n    //  * check current account deposit in the entryPoint\n    //  */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint().balanceOf(address(this));\n    }\n\n    /**\n     * deposit more funds for this account in the entryPoint\n     */\n    function addDeposit() public payable {\n        entryPoint().depositTo{value: msg.value}(address(this));\n    }\n\n    // /**\n    //  * withdraw value from the account's deposit\n    //  * @param withdrawAddress target to send to\n    //  * @param amount to withdraw\n    //  */\n    // function withdrawDepositTo(address payable withdrawAddress, uint256 amount) public onlyOwner {\n    //     entryPoint().withdrawTo(withdrawAddress, amount);\n    // }\n\n    function _authorizeUpgrade(\n        address newImplementation\n    ) internal view override {\n        (newImplementation);\n        _onlyOwner();\n    }\n}\n// 0x0576a174D229E3cFA37253523E645A78A0C91B57 --sepolia entrypoint address.\n\n//0xE7bDf59815d5d7Dd614DDEd60d320Ff40976a6F8\n//0x7f5FEC2de75BE334138acD655Cf0aF44951813d8 - contract Address.\n"},"contracts/SmartWalletFactory.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\n\nimport \"./SmartContractWallet.sol\";\n\n/**\n * A sample factory contract for SmartContractWallet\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n * The factory's createAccount returns the target account address even if it is already installed.\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\n */\ncontract SmartContractWalletFactory {\n    SmartContractWallet public immutable accountImplementation;\n\n    address[] public allDeployedAddress;\n    mapping(address => address[]) public getAccountAddress;\n\n    constructor(IEntryPoint _entryPoint) {\n        accountImplementation = new SmartContractWallet(_entryPoint);\n    }\n\n    /**\n     * create an account, and return its address.\n     * returns the address even if the account is already deployed.\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\n     */\n    function createAccount(\n        address owner,\n        uint256 salt\n    ) public returns (SmartContractWallet ret) {\n        address addr = getAddress(owner, salt);\n        uint256 codeSize = addr.code.length;\n\n        // If the account is already created and deployed\n        if (codeSize > 0) {\n            return SmartContractWallet(payable(addr));\n        }\n        ret = SmartContractWallet(\n            payable(\n                new ERC1967Proxy{salt: bytes32(salt)}(\n                    address(accountImplementation),\n                    abi.encodeCall(SmartContractWallet.initialize, (owner))\n                )\n            )\n        );\n        getAccountAddress[owner].push(address(ret));\n        allDeployedAddress.push(address(ret));\n    }\n\n    function getAllAccountWithOwner(\n        address ownerAddress\n    ) public view returns (address[] memory) {\n        return getAccountAddress[ownerAddress];\n    }\n\n    /**\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\n     */\n    function getAddress(\n        address owner,\n        uint256 salt\n    ) public view returns (address) {\n        return\n            Create2.computeAddress(\n                bytes32(salt),\n                keccak256(\n                    abi.encodePacked(\n                        type(ERC1967Proxy).creationCode,\n                        abi.encode(\n                            address(accountImplementation),\n                            abi.encodeCall(\n                                SmartContractWallet.initialize,\n                                (owner)\n                            )\n                        )\n                    )\n                )\n            );\n    }\n}\n// 0x0576a174D229E3cFA37253523E645A78A0C91B57 --sepolia entrypoint address.\n\n//0x161aBA4657174De9a36C3Ee71bC8163118d88d43 - metamask account.\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[9]},"id":10,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"139:203:0","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":9,"linearizedBaseContracts":[9],"name":"IERC1822Proxiable","nameLocation":"353:17:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"377:438:0","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:0","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"842:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8,"src":"868:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:0"},"scope":9,"src":"820:57:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10,"src":"343:536:0","usedErrors":[],"usedEvents":[]}],"src":"113:767:0"},"id":0},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"ERC1967Proxy":[47],"ERC1967Utils":[350],"Proxy":[386]},"id":48,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:1"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":13,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":48,"sourceUnit":387,"src":"140:35:1","symbolAliases":[{"foreign":{"id":12,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"148:5:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"./ERC1967Utils.sol","id":15,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":48,"sourceUnit":351,"src":"176:48:1","symbolAliases":[{"foreign":{"id":14,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"184:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":17,"name":"Proxy","nameLocations":["624:5:1"],"nodeType":"IdentifierPath","referencedDeclaration":386,"src":"624:5:1"},"id":18,"nodeType":"InheritanceSpecifier","src":"624:5:1"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"226:372:1","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":47,"linearizedBaseContracts":[47,386],"name":"ERC1967Proxy","nameLocation":"608:12:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":33,"nodeType":"Block","src":"1144:69:1","statements":[{"expression":{"arguments":[{"id":29,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"1184:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":30,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"1200:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":26,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"1154:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1167:16:1","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":169,"src":"1154:29:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":31,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1154:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":32,"nodeType":"ExpressionStatement","src":"1154:52:1"}]},"documentation":{"id":19,"nodeType":"StructuredDocumentation","src":"636:439:1","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":34,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"implementation","nameLocation":"1100:14:1","nodeType":"VariableDeclaration","scope":34,"src":"1092:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":20,"name":"address","nodeType":"ElementaryTypeName","src":"1092:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"_data","nameLocation":"1129:5:1","nodeType":"VariableDeclaration","scope":34,"src":"1116:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":22,"name":"bytes","nodeType":"ElementaryTypeName","src":"1116:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1091:44:1"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1144:0:1"},"scope":47,"src":"1080:133:1","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[367],"body":{"id":45,"nodeType":"Block","src":"1657:56:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":41,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"1674:12:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1687:17:1","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":108,"src":"1674:30:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":43,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1674:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40,"id":44,"nodeType":"Return","src":"1667:39:1"}]},"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1219:357:1","text":" @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":46,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1590:15:1","nodeType":"FunctionDefinition","overrides":{"id":37,"nodeType":"OverrideSpecifier","overrides":[],"src":"1630:8:1"},"parameters":{"id":36,"nodeType":"ParameterList","parameters":[],"src":"1605:2:1"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"1648:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1647:9:1"},"scope":47,"src":"1581:132:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":48,"src":"599:1116:1","usedErrors":[82,95,829,832],"usedEvents":[61]}],"src":"114:1602:1"},"id":1},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1069],"ERC1967Utils":[350],"IBeacon":[396],"StorageSlot":[1282]},"id":351,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":49,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:2"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":351,"sourceUnit":397,"src":"140:46:2","symbolAliases":[{"foreign":{"id":50,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"148:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":53,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":351,"sourceUnit":1070,"src":"187:48:2","symbolAliases":[{"foreign":{"id":52,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"195:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":55,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":351,"sourceUnit":1283,"src":"236:56:2","symbolAliases":[{"foreign":{"id":54,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"244:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":56,"nodeType":"StructuredDocumentation","src":"294:154:2","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":350,"linearizedBaseContracts":[350],"name":"ERC1967Utils","nameLocation":"457:12:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":57,"nodeType":"StructuredDocumentation","src":"660:68:2","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":61,"name":"Upgraded","nameLocation":"739:8:2","nodeType":"EventDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:2","nodeType":"VariableDeclaration","scope":61,"src":"748:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:2"},"src":"733:47:2"},{"anonymous":false,"documentation":{"id":62,"nodeType":"StructuredDocumentation","src":"786:67:2","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":68,"name":"AdminChanged","nameLocation":"864:12:2","nodeType":"EventDefinition","parameters":{"id":67,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:2","nodeType":"VariableDeclaration","scope":68,"src":"877:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:2","nodeType":"VariableDeclaration","scope":68,"src":"900:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:2"},"src":"858:60:2"},{"anonymous":false,"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"924:59:2","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":73,"name":"BeaconUpgraded","nameLocation":"994:14:2","nodeType":"EventDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:2","nodeType":"VariableDeclaration","scope":73,"src":"1009:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:2"},"src":"988:45:2"},{"constant":true,"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"1039:170:2","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":77,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:2","nodeType":"VariableDeclaration","scope":350,"src":"1279:114:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":75,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:2","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"1400:69:2","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":82,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:2","nodeType":"ErrorDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:2","nodeType":"VariableDeclaration","scope":82,"src":"1509:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:2"},"src":"1474:59:2"},{"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"1539:60:2","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":87,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:2","nodeType":"ErrorDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"admin","nameLocation":"1638:5:2","nodeType":"VariableDeclaration","scope":87,"src":"1630:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:2"},"src":"1604:41:2"},{"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"1651:61:2","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":92,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:2","nodeType":"ErrorDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:2","nodeType":"VariableDeclaration","scope":92,"src":"1744:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:2"},"src":"1717:43:2"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"1766:82:2","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":95,"name":"ERC1967NonPayable","nameLocation":"1859:17:2","nodeType":"ErrorDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[],"src":"1876:2:2"},"src":"1853:26:2"},{"body":{"id":107,"nodeType":"Block","src":"2018:77:2","statements":[{"expression":{"expression":{"arguments":[{"id":103,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2062:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":101,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2035:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"2035:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":105,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"2035:53:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":100,"id":106,"nodeType":"Return","src":"2028:60:2"}]},"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"1885:67:2","text":" @dev Returns the current implementation address."},"id":108,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:2","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[],"src":"1983:2:2"},"returnParameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":108,"src":"2009:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:2"},"scope":350,"src":"1957:138:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"2249:218:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":114,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2263:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:2","memberName":"code","nodeType":"MemberAccess","src":"2263:22:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:2","memberName":"length","nodeType":"MemberAccess","src":"2263:29:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":124,"nodeType":"IfStatement","src":"2259:119:2","trueBody":{"id":123,"nodeType":"Block","src":"2299:79:2","statements":[{"errorCall":{"arguments":[{"id":120,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2349:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":119,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2320:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":122,"nodeType":"RevertStatement","src":"2313:54:2"}]}},{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":128,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"2414:19:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":125,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"2387:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"2387:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"2387:53:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":131,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2443:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":133,"nodeType":"ExpressionStatement","src":"2387:73:2"}]},"documentation":{"id":109,"nodeType":"StructuredDocumentation","src":"2101:80:2","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:2","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:2","nodeType":"VariableDeclaration","scope":135,"src":"2214:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":110,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:2"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"2249:0:2"},"scope":350,"src":"2186:281:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":168,"nodeType":"Block","src":"2860:254:2","statements":[{"expression":{"arguments":[{"id":144,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2889:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":143,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2870:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"2870:37:2"},{"eventCall":{"arguments":[{"id":148,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"2931:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":147,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":61,"src":"2922:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":150,"nodeType":"EmitStatement","src":"2917:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":151,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"2964:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:2","memberName":"length","nodeType":"MemberAccess","src":"2964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":166,"nodeType":"Block","src":"3065:43:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":163,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"3079:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":165,"nodeType":"ExpressionStatement","src":"3079:18:2"}]},"id":167,"nodeType":"IfStatement","src":"2960:148:2","trueBody":{"id":162,"nodeType":"Block","src":"2981:78:2","statements":[{"expression":{"arguments":[{"id":158,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3024:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":159,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3043:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":155,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2995:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1069_$","typeString":"type(library Address)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":988,"src":"2995:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":161,"nodeType":"ExpressionStatement","src":"2995:53:2"}]}}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"2473:301:2","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":169,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:2","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:2","nodeType":"VariableDeclaration","scope":169,"src":"2805:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"data","nameLocation":"2845:4:2","nodeType":"VariableDeclaration","scope":169,"src":"2832:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":139,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:2"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[],"src":"2860:0:2"},"scope":350,"src":"2779:335:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"3120:145:2","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":173,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:2","nodeType":"VariableDeclaration","scope":350,"src":"3335:105:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":171,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:2","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":185,"nodeType":"Block","src":"3844:68:2","statements":[{"expression":{"expression":{"arguments":[{"id":181,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"3888:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":179,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"3861:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"3861:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"3861:44:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":178,"id":184,"nodeType":"Return","src":"3854:51:2"}]},"documentation":{"id":174,"nodeType":"StructuredDocumentation","src":"3447:340:2","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":186,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:2","nodeType":"FunctionDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[],"src":"3809:2:2"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"3835:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:2"},"scope":350,"src":"3792:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":216,"nodeType":"Block","src":"4039:172:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":192,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"4053:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:2","typeDescriptions":{}}},"id":196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":206,"nodeType":"IfStatement","src":"4049:91:2","trueBody":{"id":205,"nodeType":"Block","src":"4077:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:2","typeDescriptions":{}}},"id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":198,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"4098:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"RevertStatement","src":"4091:38:2"}]}},{"expression":{"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":210,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"4176:10:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":207,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4149:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"4149:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":212,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"4149:44:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":213,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"4196:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":215,"nodeType":"ExpressionStatement","src":"4149:55:2"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"3918:71:2","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":217,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:2","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:2","nodeType":"VariableDeclaration","scope":217,"src":"4013:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:2"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[],"src":"4039:0:2"},"scope":350,"src":"3994:217:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":233,"nodeType":"Block","src":"4379:85:2","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":224,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4407:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":226,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"4419:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":223,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"4394:12:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":228,"nodeType":"EmitStatement","src":"4389:39:2"},{"expression":{"arguments":[{"id":230,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"4448:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":229,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"4438:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":232,"nodeType":"ExpressionStatement","src":"4438:19:2"}]},"documentation":{"id":218,"nodeType":"StructuredDocumentation","src":"4217:109:2","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":234,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:2","nodeType":"FunctionDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:2","nodeType":"VariableDeclaration","scope":234,"src":"4352:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:2"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[],"src":"4379:0:2"},"scope":350,"src":"4331:133:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"4470:201:2","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":238,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:2","nodeType":"VariableDeclaration","scope":350,"src":"4741:106:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:2","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"4963:69:2","statements":[{"expression":{"expression":{"arguments":[{"id":246,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5007:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":244,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"4980:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"4980:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"4980:45:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":243,"id":249,"nodeType":"Return","src":"4973:52:2"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4854:51:2","text":" @dev Returns the current beacon."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:2","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"4928:2:2"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":251,"src":"4954:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:2"},"scope":350,"src":"4910:122:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":296,"nodeType":"Block","src":"5161:390:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":257,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5175:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:2","memberName":"code","nodeType":"MemberAccess","src":"5175:14:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:2","memberName":"length","nodeType":"MemberAccess","src":"5175:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":267,"nodeType":"IfStatement","src":"5171:95:2","trueBody":{"id":266,"nodeType":"Block","src":"5203:63:2","statements":[{"errorCall":{"arguments":[{"id":263,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5245:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":262,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":92,"src":"5224:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":265,"nodeType":"RevertStatement","src":"5217:38:2"}]}},{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":271,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"5303:11:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":268,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"5276:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$1282_$","typeString":"type(library StorageSlot)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:2","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":1204,"src":"5276:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1178_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:2","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"5276:45:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":274,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5324:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":276,"nodeType":"ExpressionStatement","src":"5276:57:2"},{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:2","nodeType":"VariableDeclaration","scope":296,"src":"5344:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":284,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":280,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5383:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":279,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"5375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$396_$","typeString":"type(contract IBeacon)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$396","typeString":"contract IBeacon"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":395,"src":"5375:33:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":285,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5424:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:2","memberName":"code","nodeType":"MemberAccess","src":"5424:25:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:2","memberName":"length","nodeType":"MemberAccess","src":"5424:32:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":295,"nodeType":"IfStatement","src":"5420:125:2","trueBody":{"id":294,"nodeType":"Block","src":"5463:82:2","statements":[{"errorCall":{"arguments":[{"id":291,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5513:20:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":290,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"5484:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":293,"nodeType":"RevertStatement","src":"5477:57:2"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"5038:71:2","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":297,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:2","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:2","nodeType":"VariableDeclaration","scope":297,"src":"5134:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:2"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"5161:0:2"},"scope":350,"src":"5114:437:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":334,"nodeType":"Block","src":"6155:254:2","statements":[{"expression":{"arguments":[{"id":306,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6176:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":305,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"6165:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":308,"nodeType":"ExpressionStatement","src":"6165:21:2"},{"eventCall":{"arguments":[{"id":310,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6216:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":309,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":73,"src":"6201:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"EmitStatement","src":"6196:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6241:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:2","memberName":"length","nodeType":"MemberAccess","src":"6241:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":332,"nodeType":"Block","src":"6360:43:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":329,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"6374:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"6374:18:2"}]},"id":333,"nodeType":"IfStatement","src":"6237:166:2","trueBody":{"id":328,"nodeType":"Block","src":"6258:96:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":321,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6309:9:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":320,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"6301:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$396_$","typeString":"type(contract IBeacon)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$396","typeString":"contract IBeacon"}},"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:2","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":395,"src":"6301:33:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":325,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6338:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":317,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"6272:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1069_$","typeString":"type(library Address)"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:2","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":988,"src":"6272:28:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":327,"nodeType":"ExpressionStatement","src":"6272:71:2"}]}}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"5557:514:2","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":335,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:2","nodeType":"FunctionDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:2","nodeType":"VariableDeclaration","scope":335,"src":"6108:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"data","nameLocation":"6140:4:2","nodeType":"VariableDeclaration","scope":335,"src":"6127:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":301,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:2"},"returnParameters":{"id":304,"nodeType":"ParameterList","parameters":[],"src":"6155:0:2"},"scope":350,"src":"6076:333:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6634:86:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":339,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:2","memberName":"value","nodeType":"MemberAccess","src":"6648:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":347,"nodeType":"IfStatement","src":"6644:70:2","trueBody":{"id":346,"nodeType":"Block","src":"6663:51:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":343,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"6684:17:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":345,"nodeType":"RevertStatement","src":"6677:26:2"}]}}]},"documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"6415:178:2","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":349,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:2","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[],"src":"6623:2:2"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"6634:0:2"},"scope":350,"src":"6598:122:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":351,"src":"449:6273:2","usedErrors":[82,87,92,95],"usedEvents":[61,68,73]}],"src":"114:6609:2"},"id":2},"@openzeppelin/contracts/proxy/Proxy.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[386]},"id":387,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":352,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"125:598:3","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":386,"linearizedBaseContracts":[386],"name":"Proxy","nameLocation":"742:5:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":360,"nodeType":"Block","src":"1009:835:3","statements":[{"AST":{"nativeSrc":"1028:810:3","nodeType":"YulBlock","src":"1028:810:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:3","nodeType":"YulLiteral","src":"1281:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:3","nodeType":"YulLiteral","src":"1284:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:3","nodeType":"YulIdentifier","src":"1287:12:3"},"nativeSrc":"1287:14:3","nodeType":"YulFunctionCall","src":"1287:14:3"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:3","nodeType":"YulIdentifier","src":"1268:12:3"},"nativeSrc":"1268:34:3","nodeType":"YulFunctionCall","src":"1268:34:3"},"nativeSrc":"1268:34:3","nodeType":"YulExpressionStatement","src":"1268:34:3"},{"nativeSrc":"1429:74:3","nodeType":"YulVariableDeclaration","src":"1429:74:3","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:3","nodeType":"YulIdentifier","src":"1456:3:3"},"nativeSrc":"1456:5:3","nodeType":"YulFunctionCall","src":"1456:5:3"},{"name":"implementation","nativeSrc":"1463:14:3","nodeType":"YulIdentifier","src":"1463:14:3"},{"kind":"number","nativeSrc":"1479:1:3","nodeType":"YulLiteral","src":"1479:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:3","nodeType":"YulIdentifier","src":"1482:12:3"},"nativeSrc":"1482:14:3","nodeType":"YulFunctionCall","src":"1482:14:3"},{"kind":"number","nativeSrc":"1498:1:3","nodeType":"YulLiteral","src":"1498:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:3","nodeType":"YulLiteral","src":"1501:1:3","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:3","nodeType":"YulIdentifier","src":"1443:12:3"},"nativeSrc":"1443:60:3","nodeType":"YulFunctionCall","src":"1443:60:3"},"variables":[{"name":"result","nativeSrc":"1433:6:3","nodeType":"YulTypedName","src":"1433:6:3","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:3","nodeType":"YulLiteral","src":"1571:1:3","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:3","nodeType":"YulLiteral","src":"1574:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:3","nodeType":"YulIdentifier","src":"1577:14:3"},"nativeSrc":"1577:16:3","nodeType":"YulFunctionCall","src":"1577:16:3"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:3","nodeType":"YulIdentifier","src":"1556:14:3"},"nativeSrc":"1556:38:3","nodeType":"YulFunctionCall","src":"1556:38:3"},"nativeSrc":"1556:38:3","nodeType":"YulExpressionStatement","src":"1556:38:3"},{"cases":[{"body":{"nativeSrc":"1689:59:3","nodeType":"YulBlock","src":"1689:59:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:3","nodeType":"YulLiteral","src":"1714:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:3","nodeType":"YulIdentifier","src":"1717:14:3"},"nativeSrc":"1717:16:3","nodeType":"YulFunctionCall","src":"1717:16:3"}],"functionName":{"name":"revert","nativeSrc":"1707:6:3","nodeType":"YulIdentifier","src":"1707:6:3"},"nativeSrc":"1707:27:3","nodeType":"YulFunctionCall","src":"1707:27:3"},"nativeSrc":"1707:27:3","nodeType":"YulExpressionStatement","src":"1707:27:3"}]},"nativeSrc":"1682:66:3","nodeType":"YulCase","src":"1682:66:3","value":{"kind":"number","nativeSrc":"1687:1:3","nodeType":"YulLiteral","src":"1687:1:3","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:3","nodeType":"YulBlock","src":"1769:59:3","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:3","nodeType":"YulLiteral","src":"1794:1:3","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:3","nodeType":"YulIdentifier","src":"1797:14:3"},"nativeSrc":"1797:16:3","nodeType":"YulFunctionCall","src":"1797:16:3"}],"functionName":{"name":"return","nativeSrc":"1787:6:3","nodeType":"YulIdentifier","src":"1787:6:3"},"nativeSrc":"1787:27:3","nodeType":"YulFunctionCall","src":"1787:27:3"},"nativeSrc":"1787:27:3","nodeType":"YulExpressionStatement","src":"1787:27:3"}]},"nativeSrc":"1761:67:3","nodeType":"YulCase","src":"1761:67:3","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:3","nodeType":"YulIdentifier","src":"1615:6:3"},"nativeSrc":"1608:220:3","nodeType":"YulSwitch","src":"1608:220:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":356,"isOffset":false,"isSlot":false,"src":"1463:14:3","valueSize":1}],"id":359,"nodeType":"InlineAssembly","src":"1019:819:3"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"754:190:3","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":361,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:3","nodeType":"FunctionDefinition","parameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"implementation","nameLocation":"976:14:3","nodeType":"VariableDeclaration","scope":361,"src":"968:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:3"},"returnParameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"1009:0:3"},"scope":386,"src":"949:895:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"1850:173:3","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":367,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[],"src":"2052:2:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":367,"src":"2086:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:3"},"scope":386,"src":"2028:67:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":376,"nodeType":"Block","src":"2361:45:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":372,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"2381:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":371,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"2371:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"2371:28:3"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"2101:217:3","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":377,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:3","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2341:2:3"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2361:0:3"},"scope":386,"src":"2323:83:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":384,"nodeType":"Block","src":"2639:28:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":381,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"2649:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"2649:11:3"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"2412:186:3","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":385,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[],"src":"2611:2:3"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"2639:0:3"},"scope":386,"src":"2603:64:3","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":387,"src":"724:1945:3","usedErrors":[],"usedEvents":[]}],"src":"99:2571:3"},"id":3},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[396]},"id":397,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":388,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"134:79:4","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":396,"linearizedBaseContracts":[396],"name":"IBeacon","nameLocation":"224:7:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"238:168:4","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":395,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:4","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"434:2:4"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"460:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:4"},"scope":396,"src":"411:58:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":397,"src":"214:257:4","usedErrors":[],"usedEvents":[]}],"src":"108:364:4"},"id":4},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[650]},"id":651,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":398,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":399,"nodeType":"StructuredDocumentation","src":"139:2209:5","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":650,"linearizedBaseContracts":[650],"name":"Initializable","nameLocation":"2367:13:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":400,"nodeType":"StructuredDocumentation","src":"2387:293:5","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":407,"members":[{"constant":false,"id":403,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:5","nodeType":"VariableDeclaration","scope":407,"src":"2813:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":402,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:5","nodeType":"VariableDeclaration","scope":407,"src":"2950:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":405,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:5","nodeType":"StructDefinition","scope":650,"src":"2685:290:5","visibility":"public"},{"constant":true,"id":410,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:5","nodeType":"VariableDeclaration","scope":650,"src":"3098:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:5","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"3220:60:5","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":413,"name":"InvalidInitialization","nameLocation":"3291:21:5","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"3312:2:5"},"src":"3285:30:5"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"3321:57:5","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":416,"name":"NotInitializing","nameLocation":"3389:15:5","nodeType":"ErrorDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[],"src":"3404:2:5"},"src":"3383:24:5"},{"anonymous":false,"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"3413:90:5","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":421,"name":"Initialized","nameLocation":"3514:11:5","nodeType":"EventDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:5","nodeType":"VariableDeclaration","scope":421,"src":"3526:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":418,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:5"},"src":"3508:34:5"},{"body":{"id":503,"nodeType":"Block","src":"4092:1081:5","statements":[{"assignments":[426],"declarations":[{"constant":false,"id":426,"mutability":"mutable","name":"$","nameLocation":"4187:1:5","nodeType":"VariableDeclaration","scope":503,"src":"4158:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":425,"nodeType":"UserDefinedTypeName","pathNode":{"id":424,"name":"InitializableStorage","nameLocations":["4158:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"4158:20:5"},"referencedDeclaration":407,"src":"4158:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":429,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":427,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"4191:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$407_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:5"},{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:5","nodeType":"VariableDeclaration","scope":503,"src":"4279:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":435,"initialValue":{"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:5","subExpression":{"expression":{"id":432,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4302:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"4302:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:5"},{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:5","nodeType":"VariableDeclaration","scope":503,"src":"4327:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":436,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":440,"initialValue":{"expression":{"id":438,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4348:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"4348:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:5"},{"assignments":[442],"declarations":[{"constant":false,"id":442,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:5","nodeType":"VariableDeclaration","scope":503,"src":"4706:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":441,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":448,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":443,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4726:11:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":446,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4746:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:5"},{"assignments":[450],"declarations":[{"constant":false,"id":450,"mutability":"mutable","name":"construction","nameLocation":"4775:12:5","nodeType":"VariableDeclaration","scope":503,"src":"4770:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":449,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":463,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":451,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4790:11:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":456,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$650","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$650","typeString":"contract Initializable"}],"id":455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:5","typeDescriptions":{}}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:5","memberName":"code","nodeType":"MemberAccess","src":"4810:18:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:5","memberName":"length","nodeType":"MemberAccess","src":"4810:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:5","subExpression":{"id":464,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"4856:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:5","subExpression":{"id":466,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"4873:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"nodeType":"IfStatement","src":"4851:91:5","trueBody":{"id":472,"nodeType":"Block","src":"4887:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":469,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"4908:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"RevertStatement","src":"4901:30:5"}]}},{"expression":{"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":474,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"4951:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"4951:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":479,"nodeType":"ExpressionStatement","src":"4951:18:5"},{"condition":{"id":480,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4983:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":488,"nodeType":"IfStatement","src":"4979:67:5","trueBody":{"id":487,"nodeType":"Block","src":"4999:47:5","statements":[{"expression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":481,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5013:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"5013:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":486,"nodeType":"ExpressionStatement","src":"5013:22:5"}]}},{"id":489,"nodeType":"PlaceholderStatement","src":"5055:1:5"},{"condition":{"id":490,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"5070:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":502,"nodeType":"IfStatement","src":"5066:101:5","trueBody":{"id":501,"nodeType":"Block","src":"5086:81:5","statements":[{"expression":{"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":491,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"5100:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"5100:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":496,"nodeType":"ExpressionStatement","src":"5100:23:5"},{"eventCall":{"arguments":[{"hexValue":"31","id":498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":497,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"5142:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"EmitStatement","src":"5137:19:5"}]}}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"3548:516:5","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":504,"name":"initializer","nameLocation":"4078:11:5","nodeType":"ModifierDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[],"src":"4089:2:5"},"src":"4069:1104:5","virtual":false,"visibility":"internal"},{"body":{"id":550,"nodeType":"Block","src":"6291:392:5","statements":[{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"$","nameLocation":"6386:1:5","nodeType":"VariableDeclaration","scope":550,"src":"6357:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":510,"nodeType":"UserDefinedTypeName","pathNode":{"id":509,"name":"InitializableStorage","nameLocations":["6357:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"6357:20:5"},"referencedDeclaration":407,"src":"6357:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":514,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":512,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6390:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$407_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":515,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6431:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"6431:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":517,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6450:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"6450:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":519,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"6468:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"6427:105:5","trueBody":{"id":525,"nodeType":"Block","src":"6477:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"6498:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"RevertStatement","src":"6491:30:5"}]}},{"expression":{"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":527,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6541:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"6541:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":530,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"6558:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":532,"nodeType":"ExpressionStatement","src":"6541:24:5"},{"expression":{"id":537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":533,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6575:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"6575:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":538,"nodeType":"ExpressionStatement","src":"6575:22:5"},{"id":539,"nodeType":"PlaceholderStatement","src":"6607:1:5"},{"expression":{"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":540,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"6618:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"6618:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":545,"nodeType":"ExpressionStatement","src":"6618:23:5"},{"eventCall":{"arguments":[{"id":547,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"6668:7:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":546,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6656:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"EmitStatement","src":"6651:25:5"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"5179:1068:5","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":551,"name":"reinitializer","nameLocation":"6261:13:5","nodeType":"ModifierDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"version","nameLocation":"6282:7:5","nodeType":"VariableDeclaration","scope":551,"src":"6275:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":506,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:5"},"src":"6252:431:5","virtual":false,"visibility":"internal"},{"body":{"id":558,"nodeType":"Block","src":"6921:48:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"6931:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"6931:20:5"},{"id":557,"nodeType":"PlaceholderStatement","src":"6961:1:5"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"6689:199:5","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":559,"name":"onlyInitializing","nameLocation":"6902:16:5","nodeType":"ModifierDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"6918:2:5"},"src":"6893:76:5","virtual":false,"visibility":"internal"},{"body":{"id":571,"nodeType":"Block","src":"7136:89:5","statements":[{"condition":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":563,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"7151:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":570,"nodeType":"IfStatement","src":"7146:73:5","trueBody":{"id":569,"nodeType":"Block","src":"7170:49:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":566,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"7191:15:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"RevertStatement","src":"7184:24:5"}]}}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"6975:104:5","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:5","nodeType":"FunctionDefinition","parameters":{"id":561,"nodeType":"ParameterList","parameters":[],"src":"7111:2:5"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[],"src":"7136:0:5"},"scope":650,"src":"7084:141:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":617,"nodeType":"Block","src":"7760:373:5","statements":[{"assignments":[578],"declarations":[{"constant":false,"id":578,"mutability":"mutable","name":"$","nameLocation":"7855:1:5","nodeType":"VariableDeclaration","scope":617,"src":"7826:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":577,"nodeType":"UserDefinedTypeName","pathNode":{"id":576,"name":"InitializableStorage","nameLocations":["7826:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"7826:20:5"},"referencedDeclaration":407,"src":"7826:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":581,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":579,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"7859:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$407_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:5"},{"condition":{"expression":{"id":582,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"7900:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"7900:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":588,"nodeType":"IfStatement","src":"7896:76:5","trueBody":{"id":587,"nodeType":"Block","src":"7917:55:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":584,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"7938:21:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"RevertStatement","src":"7931:30:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":589,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"7985:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"7985:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":592,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":591,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:5","memberName":"max","nodeType":"MemberAccess","src":"8003:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":616,"nodeType":"IfStatement","src":"7981:146:5","trueBody":{"id":615,"nodeType":"Block","src":"8021:106:5","statements":[{"expression":{"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":597,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"8035:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"8035:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":601,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:5","memberName":"max","nodeType":"MemberAccess","src":"8052:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":606,"nodeType":"ExpressionStatement","src":"8035:33:5"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":609,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:5","memberName":"max","nodeType":"MemberAccess","src":"8099:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":607,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"8087:11:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"EmitStatement","src":"8082:34:5"}]}}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"7231:475:5","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":618,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:5","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"7740:2:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"7760:0:5"},"scope":650,"src":"7711:422:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"8308:63:5","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":624,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"8325:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$407_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:5","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":403,"src":"8325:39:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":623,"id":627,"nodeType":"Return","src":"8318:46:5"}]},"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"8139:99:5","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:5","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"8274:2:5"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":629,"src":"8300:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":621,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:5"},"scope":650,"src":"8243:128:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":639,"nodeType":"Block","src":"8543:64:5","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":635,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"8560:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$407_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:5","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":406,"src":"8560:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":634,"id":638,"nodeType":"Return","src":"8553:47:5"}]},"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"8377:105:5","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":640,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:5","nodeType":"FunctionDefinition","parameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"8511:2:5"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":640,"src":"8537:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":632,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:5"},"scope":650,"src":"8487:120:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"8827:80:5","statements":[{"AST":{"nativeSrc":"8846:55:5","nodeType":"YulBlock","src":"8846:55:5","statements":[{"nativeSrc":"8860:31:5","nodeType":"YulAssignment","src":"8860:31:5","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:5","nodeType":"YulIdentifier","src":"8870:21:5"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:5","nodeType":"YulIdentifier","src":"8860:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":645,"isOffset":false,"isSlot":true,"src":"8860:6:5","suffix":"slot","valueSize":1},{"declaration":410,"isOffset":false,"isSlot":false,"src":"8870:21:5","valueSize":1}],"id":647,"nodeType":"InlineAssembly","src":"8837:64:5"}]},"documentation":{"id":641,"nodeType":"StructuredDocumentation","src":"8613:67:5","text":" @dev Returns a pointer to the storage namespace."},"id":649,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:5","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"8770:2:5"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"$","nameLocation":"8824:1:5","nodeType":"VariableDeclaration","scope":649,"src":"8795:30:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":644,"nodeType":"UserDefinedTypeName","pathNode":{"id":643,"name":"InitializableStorage","nameLocations":["8795:20:5"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"8795:20:5"},"referencedDeclaration":407,"src":"8795:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$407_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:5"},"scope":650,"src":"8737:170:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":651,"src":"2349:6560:5","usedErrors":[413,416],"usedEvents":[421]}],"src":"113:8797:5"},"id":5},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[350],"IERC1822Proxiable":[9],"UUPSUpgradeable":[816]},"id":817,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":652,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:6"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"../../interfaces/draft-IERC1822.sol","id":654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":817,"sourceUnit":10,"src":"141:70:6","symbolAliases":[{"foreign":{"id":653,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"149:17:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"../ERC1967/ERC1967Utils.sol","id":656,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":817,"sourceUnit":351,"src":"212:57:6","symbolAliases":[{"foreign":{"id":655,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"220:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":658,"name":"IERC1822Proxiable","nameLocations":["927:17:6"],"nodeType":"IdentifierPath","referencedDeclaration":9,"src":"927:17:6"},"id":659,"nodeType":"InheritanceSpecifier","src":"927:17:6"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"271:618:6","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":816,"linearizedBaseContracts":[816,9],"name":"UUPSUpgradeable","nameLocation":"908:15:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"951:61:6","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":666,"mutability":"immutable","name":"__self","nameLocation":"1043:6:6","nodeType":"VariableDeclaration","scope":816,"src":"1017:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"1017:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":664,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1060:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}],"id":663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1052:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1052:7:6","typeDescriptions":{}}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1052:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"1072:631:6","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":670,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1731:25:6","nodeType":"VariableDeclaration","scope":816,"src":"1708:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":668,"name":"string","nodeType":"ElementaryTypeName","src":"1708:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1759:7:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"1773:65:6","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":673,"name":"UUPSUnauthorizedCallContext","nameLocation":"1849:27:6","nodeType":"ErrorDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1843:36:6"},{"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"1885:68:6","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":678,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"1964:28:6","nodeType":"ErrorDefinition","parameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"slot","nameLocation":"2001:4:6","nodeType":"VariableDeclaration","scope":678,"src":"1993:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":675,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1993:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1992:14:6"},"src":"1958:49:6"},{"body":{"id":685,"nodeType":"Block","src":"2532:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":681,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"2542:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":683,"nodeType":"ExpressionStatement","src":"2542:13:6"},{"id":684,"nodeType":"PlaceholderStatement","src":"2565:1:6"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"2013:493:6","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":686,"name":"onlyProxy","nameLocation":"2520:9:6","nodeType":"ModifierDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"2529:2:6"},"src":"2511:62:6","virtual":false,"visibility":"internal"},{"body":{"id":693,"nodeType":"Block","src":"2803:48:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":689,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"2813:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"2813:20:6"},{"id":692,"nodeType":"PlaceholderStatement","src":"2843:1:6"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"2579:195:6","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":694,"name":"notDelegated","nameLocation":"2788:12:6","nodeType":"ModifierDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[],"src":"2800:2:6"},"src":"2779:72:6","virtual":false,"visibility":"internal"},{"baseFunctions":[8],"body":{"id":705,"nodeType":"Block","src":"3517:56:6","statements":[{"expression":{"expression":{"id":702,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"3534:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3547:19:6","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":77,"src":"3534:32:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":701,"id":704,"nodeType":"Return","src":"3527:39:6"}]},"documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"2857:577:6","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":706,"implemented":true,"kind":"function","modifiers":[{"id":698,"kind":"modifierInvocation","modifierName":{"id":697,"name":"notDelegated","nameLocations":["3486:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":694,"src":"3486:12:6"},"nodeType":"ModifierInvocation","src":"3486:12:6"}],"name":"proxiableUUID","nameLocation":"3448:13:6","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[],"src":"3461:2:6"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":706,"src":"3508:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3508:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3507:9:6"},"scope":816,"src":"3439:134:6","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":725,"nodeType":"Block","src":"3997:109:6","statements":[{"expression":{"arguments":[{"id":717,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4025:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":716,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"4007:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"4007:36:6"},{"expression":{"arguments":[{"id":721,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4075:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":722,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"4094:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":720,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"4053:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4053:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"4053:46:6"}]},"documentation":{"id":707,"nodeType":"StructuredDocumentation","src":"3579:308:6","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":726,"implemented":true,"kind":"function","modifiers":[{"id":714,"kind":"modifierInvocation","modifierName":{"id":713,"name":"onlyProxy","nameLocations":["3987:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"3987:9:6"},"nodeType":"ModifierInvocation","src":"3987:9:6"}],"name":"upgradeToAndCall","nameLocation":"3901:16:6","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"newImplementation","nameLocation":"3926:17:6","nodeType":"VariableDeclaration","scope":726,"src":"3918:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"3918:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":711,"mutability":"mutable","name":"data","nameLocation":"3958:4:6","nodeType":"VariableDeclaration","scope":726,"src":"3945:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":710,"name":"bytes","nodeType":"ElementaryTypeName","src":"3945:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3917:46:6"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[],"src":"3997:0:6"},"scope":816,"src":"3892:214:6","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":747,"nodeType":"Block","src":"4378:267:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":732,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4413:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}],"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4405:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":730,"name":"address","nodeType":"ElementaryTypeName","src":"4405:7:6","typeDescriptions":{}}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4405:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":734,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4422:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4405:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":736,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4483:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4496:17:6","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":108,"src":"4483:30:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4483:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":739,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4519:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4483:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4405:120:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"4388:251:6","trueBody":{"id":745,"nodeType":"Block","src":"4578:61:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":742,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"4599:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4599:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"RevertStatement","src":"4592:36:6"}]}}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"4112:216:6","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4342:11:6","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"4353:2:6"},"returnParameters":{"id":729,"nodeType":"ParameterList","parameters":[],"src":"4378:0:6"},"scope":816,"src":"4333:312:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"4814:161:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":754,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4836:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$816","typeString":"contract UUPSUpgradeable"}],"id":753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4828:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"4828:7:6","typeDescriptions":{}}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4828:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":756,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"4845:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4828:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":762,"nodeType":"IfStatement","src":"4824:145:6","trueBody":{"id":761,"nodeType":"Block","src":"4853:116:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":758,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"4929:27:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4929:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"RevertStatement","src":"4922:36:6"}]}}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"4651:106:6","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"4771:18:6","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"4789:2:6"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"4814:0:6"},"scope":816,"src":"4762:213:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"4981:372:6","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":770,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5367:17:6","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"newImplementation","nameLocation":"5393:17:6","nodeType":"VariableDeclaration","scope":770,"src":"5385:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"5385:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5384:27:6"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"5428:0:6"},"scope":816,"src":"5358:71:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":814,"nodeType":"Block","src":"5871:453:6","statements":[{"clauses":[{"block":{"id":803,"nodeType":"Block","src":"5961:212:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5979:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":787,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"5987:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6000:19:6","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":77,"src":"5987:32:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5979:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"5975:120:6","trueBody":{"id":794,"nodeType":"Block","src":"6021:74:6","statements":[{"errorCall":{"arguments":[{"id":791,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"6075:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":790,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6046:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"RevertStatement","src":"6039:41:6"}]}},{"expression":{"arguments":[{"id":799,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6138:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":800,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"6157:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":796,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"6108:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6121:16:6","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":169,"src":"6108:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6108:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"6108:54:6"}]},"errorName":"","id":804,"nodeType":"TryCatchClause","parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":784,"mutability":"mutable","name":"slot","nameLocation":"5955:4:6","nodeType":"VariableDeclaration","scope":804,"src":"5947:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5947:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5946:14:6"},"src":"5938:235:6"},{"block":{"id":811,"nodeType":"Block","src":"6180:138:6","statements":[{"errorCall":{"arguments":[{"id":808,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"6289:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":805,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"6247:12:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$350_$","typeString":"type(library ERC1967Utils)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6260:28:6","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":82,"src":"6247:41:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"RevertStatement","src":"6240:67:6"}]},"errorName":"","id":812,"nodeType":"TryCatchClause","src":"6174:144:6"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":779,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"5903:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9,"src":"5885:17:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$9_$","typeString":"type(contract IERC1822Proxiable)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$9","typeString":"contract IERC1822Proxiable"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5922:13:6","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":8,"src":"5885:50:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5885:52:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":813,"nodeType":"TryStatement","src":"5881:437:6"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"5435:346:6","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"5795:21:6","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"newImplementation","nameLocation":"5825:17:6","nodeType":"VariableDeclaration","scope":815,"src":"5817:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"5817:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"data","nameLocation":"5857:4:6","nodeType":"VariableDeclaration","scope":815,"src":"5844:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":774,"name":"bytes","nodeType":"ElementaryTypeName","src":"5844:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5816:46:6"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[],"src":"5871:0:6"},"scope":816,"src":"5786:538:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":817,"src":"890:5436:6","usedErrors":[82,95,673,678,829,832],"usedEvents":[61]}],"src":"115:6212:6"},"id":6},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1069]},"id":1070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":818,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"127:67:7","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1069,"linearizedBaseContracts":[1069],"name":"Address","nameLocation":"203:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"217:94:7","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":824,"name":"AddressInsufficientBalance","nameLocation":"322:26:7","nodeType":"ErrorDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"account","nameLocation":"357:7:7","nodeType":"VariableDeclaration","scope":824,"src":"349:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:7"},"src":"316:50:7"},{"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"372:75:7","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":829,"name":"AddressEmptyCode","nameLocation":"458:16:7","nodeType":"ErrorDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"target","nameLocation":"483:6:7","nodeType":"VariableDeclaration","scope":829,"src":"475:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:7"},"src":"452:39:7"},{"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"497:89:7","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":832,"name":"FailedInnerCall","nameLocation":"597:15:7","nodeType":"ErrorDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"612:2:7"},"src":"591:24:7"},{"body":{"id":872,"nodeType":"Block","src":"1602:260:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":842,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:7","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:7","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":845,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1640:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":855,"nodeType":"IfStatement","src":"1612:109:7","trueBody":{"id":854,"nodeType":"Block","src":"1648:73:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":850,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:7","typeDescriptions":{}}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":847,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"1669:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"RevertStatement","src":"1662:48:7"}]}},{"assignments":[857,null],"declarations":[{"constant":false,"id":857,"mutability":"mutable","name":"success","nameLocation":"1737:7:7","nodeType":"VariableDeclaration","scope":872,"src":"1732:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":856,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":864,"initialValue":{"arguments":[{"hexValue":"","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":858,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"1750:9:7","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:7","memberName":"call","nodeType":"MemberAccess","src":"1750:14:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"1772:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:7"},{"condition":{"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:7","subExpression":{"id":865,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"1798:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":871,"nodeType":"IfStatement","src":"1793:63:7","trueBody":{"id":870,"nodeType":"Block","src":"1807:49:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":867,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"1828:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"RevertStatement","src":"1821:24:7"}]}}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"621:905:7","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":873,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:7","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:7","nodeType":"VariableDeclaration","scope":873,"src":"1550:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"amount","nameLocation":"1585:6:7","nodeType":"VariableDeclaration","scope":873,"src":"1577:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:7"},"returnParameters":{"id":839,"nodeType":"ParameterList","parameters":[],"src":"1602:0:7"},"scope":1069,"src":"1531:331:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":889,"nodeType":"Block","src":"2794:62:7","statements":[{"expression":{"arguments":[{"id":884,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"2833:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"2841:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"2811:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":882,"id":888,"nodeType":"Return","src":"2804:45:7"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"1868:832:7","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":890,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:7","nodeType":"FunctionDefinition","parameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"target","nameLocation":"2735:6:7","nodeType":"VariableDeclaration","scope":890,"src":"2727:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"data","nameLocation":"2756:4:7","nodeType":"VariableDeclaration","scope":890,"src":"2743:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":877,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:7"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"2780:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":880,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:7"},"scope":1069,"src":"2705:151:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":935,"nodeType":"Block","src":"3293:279:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":904,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":902,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:7","typeDescriptions":{}}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:7","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3331:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":917,"nodeType":"IfStatement","src":"3303:108:7","trueBody":{"id":916,"nodeType":"Block","src":"3338:73:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":912,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1069","typeString":"library Address"}],"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":910,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:7","typeDescriptions":{}}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"3359:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":915,"nodeType":"RevertStatement","src":"3352:48:7"}]}},{"assignments":[919,921],"declarations":[{"constant":false,"id":919,"mutability":"mutable","name":"success","nameLocation":"3426:7:7","nodeType":"VariableDeclaration","scope":935,"src":"3421:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":918,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:7","nodeType":"VariableDeclaration","scope":935,"src":"3435:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":920,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":928,"initialValue":{"arguments":[{"id":926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"3488:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":922,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"3462:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:7","memberName":"call","nodeType":"MemberAccess","src":"3462:11:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"3481:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:7","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:7"},{"expression":{"arguments":[{"id":930,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"3537:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"3545:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":932,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":921,"src":"3554:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":929,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3510:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":901,"id":934,"nodeType":"Return","src":"3503:62:7"}]},"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"2862:313:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":936,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:7","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"target","nameLocation":"3219:6:7","nodeType":"VariableDeclaration","scope":936,"src":"3211:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"mutability":"mutable","name":"data","nameLocation":"3240:4:7","nodeType":"VariableDeclaration","scope":936,"src":"3227:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":894,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"value","nameLocation":"3254:5:7","nodeType":"VariableDeclaration","scope":936,"src":"3246:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:7"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":936,"src":"3279:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:7"},"scope":1069,"src":"3180:392:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3811:154:7","statements":[{"assignments":[947,949],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"success","nameLocation":"3827:7:7","nodeType":"VariableDeclaration","scope":961,"src":"3822:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:7","nodeType":"VariableDeclaration","scope":961,"src":"3836:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":954,"initialValue":{"arguments":[{"id":952,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"3881:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3863:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:7"},{"expression":{"arguments":[{"id":956,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3930:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3938:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":958,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3947:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":955,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"3903:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":945,"id":960,"nodeType":"Return","src":"3896:62:7"}]},"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"3578:128:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:7","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"target","nameLocation":"3747:6:7","nodeType":"VariableDeclaration","scope":962,"src":"3739:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"data","nameLocation":"3768:4:7","nodeType":"VariableDeclaration","scope":962,"src":"3755:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":940,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:7"},"returnParameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3797:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:7"},"scope":1069,"src":"3711:254:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"4203:156:7","statements":[{"assignments":[973,975],"declarations":[{"constant":false,"id":973,"mutability":"mutable","name":"success","nameLocation":"4219:7:7","nodeType":"VariableDeclaration","scope":987,"src":"4214:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":972,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":975,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:7","nodeType":"VariableDeclaration","scope":987,"src":"4228:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":974,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":980,"initialValue":{"arguments":[{"id":978,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"4275:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":976,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4255:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:7","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:7","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:7"},{"expression":{"arguments":[{"id":982,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4324:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"4332:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":975,"src":"4341:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":981,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"4297:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":971,"id":986,"nodeType":"Return","src":"4290:62:7"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3971:130:7","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:7","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"target","nameLocation":"4144:6:7","nodeType":"VariableDeclaration","scope":988,"src":"4136:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"data","nameLocation":"4165:4:7","nodeType":"VariableDeclaration","scope":988,"src":"4152:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":966,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:7"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"4189:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":969,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:7"},"scope":1069,"src":"4106:253:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1027,"nodeType":"Block","src":"4783:424:7","statements":[{"condition":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:7","subExpression":{"id":1000,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4798:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1025,"nodeType":"Block","src":"4857:344:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1007,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5045:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:7","memberName":"length","nodeType":"MemberAccess","src":"5045:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1011,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5071:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:7","memberName":"code","nodeType":"MemberAccess","src":"5071:11:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:7","memberName":"length","nodeType":"MemberAccess","src":"5071:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"5041:119:7","trueBody":{"id":1021,"nodeType":"Block","src":"5096:64:7","statements":[{"errorCall":{"arguments":[{"id":1018,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"5138:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1017,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5121:16:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"RevertStatement","src":"5114:31:7"}]}},{"expression":{"id":1023,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"5180:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":999,"id":1024,"nodeType":"Return","src":"5173:17:7"}]},"id":1026,"nodeType":"IfStatement","src":"4793:408:7","trueBody":{"id":1006,"nodeType":"Block","src":"4807:44:7","statements":[{"expression":{"arguments":[{"id":1003,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"4829:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"4821:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"4821:19:7"}]}}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"4365:255:7","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1028,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:7","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"target","nameLocation":"4678:6:7","nodeType":"VariableDeclaration","scope":1028,"src":"4670:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"success","nameLocation":"4699:7:7","nodeType":"VariableDeclaration","scope":1028,"src":"4694:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":992,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:7","nodeType":"VariableDeclaration","scope":1028,"src":"4716:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:7"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1028,"src":"4769:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":997,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:7"},"scope":1069,"src":"4625:582:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"5509:122:7","statements":[{"condition":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:7","subExpression":{"id":1038,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"5524:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1047,"nodeType":"Block","src":"5583:42:7","statements":[{"expression":{"id":1045,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5604:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1037,"id":1046,"nodeType":"Return","src":"5597:17:7"}]},"id":1048,"nodeType":"IfStatement","src":"5519:106:7","trueBody":{"id":1044,"nodeType":"Block","src":"5533:44:7","statements":[{"expression":{"arguments":[{"id":1041,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"5555:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1040,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"5547:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1043,"nodeType":"ExpressionStatement","src":"5547:19:7"}]}}]},"documentation":{"id":1029,"nodeType":"StructuredDocumentation","src":"5213:189:7","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:7","nodeType":"FunctionDefinition","parameters":{"id":1034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1031,"mutability":"mutable","name":"success","nameLocation":"5438:7:7","nodeType":"VariableDeclaration","scope":1050,"src":"5433:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1030,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:7","nodeType":"VariableDeclaration","scope":1050,"src":"5447:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1032,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:7"},"returnParameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1050,"src":"5495:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1035,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:7"},"scope":1069,"src":"5407:224:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1067,"nodeType":"Block","src":"5798:461:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1056,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"5874:10:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:7","memberName":"length","nodeType":"MemberAccess","src":"5874:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1065,"nodeType":"Block","src":"6204:49:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1062,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"6225:15:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"RevertStatement","src":"6218:24:7"}]},"id":1066,"nodeType":"IfStatement","src":"5870:383:7","trueBody":{"id":1061,"nodeType":"Block","src":"5897:301:7","statements":[{"AST":{"nativeSrc":"6055:133:7","nodeType":"YulBlock","src":"6055:133:7","statements":[{"nativeSrc":"6073:40:7","nodeType":"YulVariableDeclaration","src":"6073:40:7","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:7","nodeType":"YulIdentifier","src":"6102:10:7"}],"functionName":{"name":"mload","nativeSrc":"6096:5:7","nodeType":"YulIdentifier","src":"6096:5:7"},"nativeSrc":"6096:17:7","nodeType":"YulFunctionCall","src":"6096:17:7"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:7","nodeType":"YulTypedName","src":"6077:15:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:7","nodeType":"YulLiteral","src":"6141:2:7","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:7","nodeType":"YulIdentifier","src":"6145:10:7"}],"functionName":{"name":"add","nativeSrc":"6137:3:7","nodeType":"YulIdentifier","src":"6137:3:7"},"nativeSrc":"6137:19:7","nodeType":"YulFunctionCall","src":"6137:19:7"},{"name":"returndata_size","nativeSrc":"6158:15:7","nodeType":"YulIdentifier","src":"6158:15:7"}],"functionName":{"name":"revert","nativeSrc":"6130:6:7","nodeType":"YulIdentifier","src":"6130:6:7"},"nativeSrc":"6130:44:7","nodeType":"YulFunctionCall","src":"6130:44:7"},"nativeSrc":"6130:44:7","nodeType":"YulExpressionStatement","src":"6130:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1053,"isOffset":false,"isSlot":false,"src":"6102:10:7","valueSize":1},{"declaration":1053,"isOffset":false,"isSlot":false,"src":"6145:10:7","valueSize":1}],"id":1060,"nodeType":"InlineAssembly","src":"6046:142:7"}]}}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"5637:101:7","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":1068,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:7","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:7","nodeType":"VariableDeclaration","scope":1068,"src":"5760:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:7"},"returnParameters":{"id":1055,"nodeType":"ParameterList","parameters":[],"src":"5798:0:7"},"scope":1069,"src":"5743:516:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1070,"src":"195:6066:7","usedErrors":[824,829,832],"usedEvents":[]}],"src":"101:6161:7"},"id":7},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[1172]},"id":1173,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1071,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"127:367:8","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":1172,"linearizedBaseContracts":[1172],"name":"Create2","nameLocation":"503:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"517:75:8","text":" @dev Not enough balance for performing a CREATE2 deploy."},"errorSelector":"e4bbecac","id":1079,"name":"Create2InsufficientBalance","nameLocation":"603:26:8","nodeType":"ErrorDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"balance","nameLocation":"638:7:8","nodeType":"VariableDeclaration","scope":1079,"src":"630:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"needed","nameLocation":"655:6:8","nodeType":"VariableDeclaration","scope":1079,"src":"647:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"629:33:8"},"src":"597:66:8"},{"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"669:50:8","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":1082,"name":"Create2EmptyBytecode","nameLocation":"730:20:8","nodeType":"ErrorDefinition","parameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"750:2:8"},"src":"724:29:8"},{"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"759:46:8","text":" @dev The deployment failed."},"errorSelector":"741752c2","id":1085,"name":"Create2FailedDeployment","nameLocation":"816:23:8","nodeType":"ErrorDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[],"src":"839:2:8"},"src":"810:32:8"},{"body":{"id":1136,"nodeType":"Block","src":"1514:472:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1099,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:8","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1542:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1528:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1552:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1528:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1114,"nodeType":"IfStatement","src":"1524:125:8","trueBody":{"id":1113,"nodeType":"Block","src":"1560:89:8","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1107,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}],"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1608:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"1608:7:8","typeDescriptions":{}}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1622:7:8","memberName":"balance","nodeType":"MemberAccess","src":"1608:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1631:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1104,"name":"Create2InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"1581:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1581:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"RevertStatement","src":"1574:64:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"1662:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1671:6:8","memberName":"length","nodeType":"MemberAccess","src":"1662:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1662:20:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"1658:80:8","trueBody":{"id":1122,"nodeType":"Block","src":"1684:54:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"1705:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"1698:29:8"}]}},{"AST":{"nativeSrc":"1799:91:8","nodeType":"YulBlock","src":"1799:91:8","statements":[{"nativeSrc":"1813:67:8","nodeType":"YulAssignment","src":"1813:67:8","value":{"arguments":[{"name":"amount","nativeSrc":"1829:6:8","nodeType":"YulIdentifier","src":"1829:6:8"},{"arguments":[{"name":"bytecode","nativeSrc":"1841:8:8","nodeType":"YulIdentifier","src":"1841:8:8"},{"kind":"number","nativeSrc":"1851:4:8","nodeType":"YulLiteral","src":"1851:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1837:3:8","nodeType":"YulIdentifier","src":"1837:3:8"},"nativeSrc":"1837:19:8","nodeType":"YulFunctionCall","src":"1837:19:8"},{"arguments":[{"name":"bytecode","nativeSrc":"1864:8:8","nodeType":"YulIdentifier","src":"1864:8:8"}],"functionName":{"name":"mload","nativeSrc":"1858:5:8","nodeType":"YulIdentifier","src":"1858:5:8"},"nativeSrc":"1858:15:8","nodeType":"YulFunctionCall","src":"1858:15:8"},{"name":"salt","nativeSrc":"1875:4:8","nodeType":"YulIdentifier","src":"1875:4:8"}],"functionName":{"name":"create2","nativeSrc":"1821:7:8","nodeType":"YulIdentifier","src":"1821:7:8"},"nativeSrc":"1821:59:8","nodeType":"YulFunctionCall","src":"1821:59:8"},"variableNames":[{"name":"addr","nativeSrc":"1813:4:8","nodeType":"YulIdentifier","src":"1813:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1095,"isOffset":false,"isSlot":false,"src":"1813:4:8","valueSize":1},{"declaration":1088,"isOffset":false,"isSlot":false,"src":"1829:6:8","valueSize":1},{"declaration":1092,"isOffset":false,"isSlot":false,"src":"1841:8:8","valueSize":1},{"declaration":1092,"isOffset":false,"isSlot":false,"src":"1864:8:8","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"1875:4:8","valueSize":1}],"id":1124,"nodeType":"InlineAssembly","src":"1790:100:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1125,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"1903:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1919:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1911:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"1911:7:8","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1903:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1135,"nodeType":"IfStatement","src":"1899:81:8","trueBody":{"id":1134,"nodeType":"Block","src":"1923:57:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1131,"name":"Create2FailedDeployment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"1944:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1944:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1133,"nodeType":"RevertStatement","src":"1937:32:8"}]}}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"848:560:8","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1422:6:8","nodeType":"FunctionDefinition","parameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"amount","nameLocation":"1437:6:8","nodeType":"VariableDeclaration","scope":1137,"src":"1429:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"salt","nameLocation":"1453:4:8","nodeType":"VariableDeclaration","scope":1137,"src":"1445:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1089,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1445:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"bytecode","nameLocation":"1472:8:8","nodeType":"VariableDeclaration","scope":1137,"src":"1459:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"1459:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1428:53:8"},"returnParameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"addr","nameLocation":"1508:4:8","nodeType":"VariableDeclaration","scope":1137,"src":"1500:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"1500:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1499:14:8"},"scope":1172,"src":"1413:573:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1156,"nodeType":"Block","src":"2282:73:8","statements":[{"expression":{"arguments":[{"id":1148,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2314:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1149,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2320:12:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1152,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2342:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$1172","typeString":"library Create2"}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2334:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:8","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1147,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[1157,1171],"referencedDeclaration":1171,"src":"2299:14:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1146,"id":1155,"nodeType":"Return","src":"2292:56:8"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"1992:193:8","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":1157,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2199:14:8","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"salt","nameLocation":"2222:4:8","nodeType":"VariableDeclaration","scope":1157,"src":"2214:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2214:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2236:12:8","nodeType":"VariableDeclaration","scope":1157,"src":"2228:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2228:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2213:36:8"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1157,"src":"2273:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"2273:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2272:9:8"},"scope":1172,"src":"2190:165:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1170,"nodeType":"Block","src":"2713:1657:8","statements":[{"AST":{"nativeSrc":"2775:1589:8","nodeType":"YulBlock","src":"2775:1589:8","statements":[{"nativeSrc":"2789:22:8","nodeType":"YulVariableDeclaration","src":"2789:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"2806:4:8","nodeType":"YulLiteral","src":"2806:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2800:5:8","nodeType":"YulIdentifier","src":"2800:5:8"},"nativeSrc":"2800:11:8","nodeType":"YulFunctionCall","src":"2800:11:8"},"variables":[{"name":"ptr","nativeSrc":"2793:3:8","nodeType":"YulTypedName","src":"2793:3:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4013:3:8","nodeType":"YulIdentifier","src":"4013:3:8"},{"kind":"number","nativeSrc":"4018:4:8","nodeType":"YulLiteral","src":"4018:4:8","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4009:3:8","nodeType":"YulIdentifier","src":"4009:3:8"},"nativeSrc":"4009:14:8","nodeType":"YulFunctionCall","src":"4009:14:8"},{"name":"bytecodeHash","nativeSrc":"4025:12:8","nodeType":"YulIdentifier","src":"4025:12:8"}],"functionName":{"name":"mstore","nativeSrc":"4002:6:8","nodeType":"YulIdentifier","src":"4002:6:8"},"nativeSrc":"4002:36:8","nodeType":"YulFunctionCall","src":"4002:36:8"},"nativeSrc":"4002:36:8","nodeType":"YulExpressionStatement","src":"4002:36:8"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4062:3:8","nodeType":"YulIdentifier","src":"4062:3:8"},{"kind":"number","nativeSrc":"4067:4:8","nodeType":"YulLiteral","src":"4067:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4058:3:8","nodeType":"YulIdentifier","src":"4058:3:8"},"nativeSrc":"4058:14:8","nodeType":"YulFunctionCall","src":"4058:14:8"},{"name":"salt","nativeSrc":"4074:4:8","nodeType":"YulIdentifier","src":"4074:4:8"}],"functionName":{"name":"mstore","nativeSrc":"4051:6:8","nodeType":"YulIdentifier","src":"4051:6:8"},"nativeSrc":"4051:28:8","nodeType":"YulFunctionCall","src":"4051:28:8"},"nativeSrc":"4051:28:8","nodeType":"YulExpressionStatement","src":"4051:28:8"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4099:3:8","nodeType":"YulIdentifier","src":"4099:3:8"},{"name":"deployer","nativeSrc":"4104:8:8","nodeType":"YulIdentifier","src":"4104:8:8"}],"functionName":{"name":"mstore","nativeSrc":"4092:6:8","nodeType":"YulIdentifier","src":"4092:6:8"},"nativeSrc":"4092:21:8","nodeType":"YulFunctionCall","src":"4092:21:8"},"nativeSrc":"4092:21:8","nodeType":"YulExpressionStatement","src":"4092:21:8"},{"nativeSrc":"4175:27:8","nodeType":"YulVariableDeclaration","src":"4175:27:8","value":{"arguments":[{"name":"ptr","nativeSrc":"4192:3:8","nodeType":"YulIdentifier","src":"4192:3:8"},{"kind":"number","nativeSrc":"4197:4:8","nodeType":"YulLiteral","src":"4197:4:8","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4188:3:8","nodeType":"YulIdentifier","src":"4188:3:8"},"nativeSrc":"4188:14:8","nodeType":"YulFunctionCall","src":"4188:14:8"},"variables":[{"name":"start","nativeSrc":"4179:5:8","nodeType":"YulTypedName","src":"4179:5:8","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4301:5:8","nodeType":"YulIdentifier","src":"4301:5:8"},{"kind":"number","nativeSrc":"4308:4:8","nodeType":"YulLiteral","src":"4308:4:8","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4293:7:8","nodeType":"YulIdentifier","src":"4293:7:8"},"nativeSrc":"4293:20:8","nodeType":"YulFunctionCall","src":"4293:20:8"},"nativeSrc":"4293:20:8","nodeType":"YulExpressionStatement","src":"4293:20:8"},{"nativeSrc":"4326:28:8","nodeType":"YulAssignment","src":"4326:28:8","value":{"arguments":[{"name":"start","nativeSrc":"4344:5:8","nodeType":"YulIdentifier","src":"4344:5:8"},{"kind":"number","nativeSrc":"4351:2:8","nodeType":"YulLiteral","src":"4351:2:8","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4334:9:8","nodeType":"YulIdentifier","src":"4334:9:8"},"nativeSrc":"4334:20:8","nodeType":"YulFunctionCall","src":"4334:20:8"},"variableNames":[{"name":"addr","nativeSrc":"4326:4:8","nodeType":"YulIdentifier","src":"4326:4:8"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1167,"isOffset":false,"isSlot":false,"src":"4326:4:8","valueSize":1},{"declaration":1162,"isOffset":false,"isSlot":false,"src":"4025:12:8","valueSize":1},{"declaration":1164,"isOffset":false,"isSlot":false,"src":"4104:8:8","valueSize":1},{"declaration":1160,"isOffset":false,"isSlot":false,"src":"4074:4:8","valueSize":1}],"id":1169,"nodeType":"InlineAssembly","src":"2766:1598:8"}]},"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"2361:232:8","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2607:14:8","nodeType":"FunctionDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"salt","nameLocation":"2630:4:8","nodeType":"VariableDeclaration","scope":1171,"src":"2622:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2622:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2644:12:8","nodeType":"VariableDeclaration","scope":1171,"src":"2636:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1161,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2636:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"deployer","nameLocation":"2666:8:8","nodeType":"VariableDeclaration","scope":1171,"src":"2658:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1163,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2621:54:8"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"addr","nameLocation":"2707:4:8","nodeType":"VariableDeclaration","scope":1171,"src":"2699:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2698:14:8"},"scope":1172,"src":"2598:1772:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1173,"src":"495:3877:8","usedErrors":[1079,1082,1085],"usedEvents":[]}],"src":"101:4272:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[1282]},"id":1283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1174,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"219:1025:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":1282,"linearizedBaseContracts":[1282],"name":"StorageSlot","nameLocation":"1253:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":1178,"members":[{"constant":false,"id":1177,"mutability":"mutable","name":"value","nameLocation":"1308:5:9","nodeType":"VariableDeclaration","scope":1178,"src":"1300:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:9","nodeType":"StructDefinition","scope":1282,"src":"1271:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":1181,"members":[{"constant":false,"id":1180,"mutability":"mutable","name":"value","nameLocation":"1360:5:9","nodeType":"VariableDeclaration","scope":1181,"src":"1355:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1179,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:9","nodeType":"StructDefinition","scope":1282,"src":"1326:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":1184,"members":[{"constant":false,"id":1183,"mutability":"mutable","name":"value","nameLocation":"1415:5:9","nodeType":"VariableDeclaration","scope":1184,"src":"1407:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1182,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:9","nodeType":"StructDefinition","scope":1282,"src":"1378:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":1187,"members":[{"constant":false,"id":1186,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":1187,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":1282,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":1190,"members":[{"constant":false,"id":1189,"mutability":"mutable","name":"value","nameLocation":"1523:5:9","nodeType":"VariableDeclaration","scope":1190,"src":"1516:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:9","nodeType":"StructDefinition","scope":1282,"src":"1488:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":1193,"members":[{"constant":false,"id":1192,"mutability":"mutable","name":"value","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1193,"src":"1568:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1191,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:9","nodeType":"StructDefinition","scope":1282,"src":"1541:45:9","visibility":"public"},{"body":{"id":1203,"nodeType":"Block","src":"1768:106:9","statements":[{"AST":{"nativeSrc":"1830:38:9","nodeType":"YulBlock","src":"1830:38:9","statements":[{"nativeSrc":"1844:14:9","nodeType":"YulAssignment","src":"1844:14:9","value":{"name":"slot","nativeSrc":"1854:4:9","nodeType":"YulIdentifier","src":"1854:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:9","nodeType":"YulIdentifier","src":"1844:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1200,"isOffset":false,"isSlot":true,"src":"1844:6:9","suffix":"slot","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"1854:4:9","valueSize":1}],"id":1202,"nodeType":"InlineAssembly","src":"1821:47:9"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"1592:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:9","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"slot","nameLocation":"1716:4:9","nodeType":"VariableDeclaration","scope":1204,"src":"1708:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:9"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"r","nameLocation":"1765:1:9","nodeType":"VariableDeclaration","scope":1204,"src":"1745:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":1199,"nodeType":"UserDefinedTypeName","pathNode":{"id":1198,"name":"AddressSlot","nameLocations":["1745:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1178,"src":"1745:11:9"},"referencedDeclaration":1178,"src":"1745:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$1178_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:9"},"scope":1282,"src":"1684:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1214,"nodeType":"Block","src":"2056:106:9","statements":[{"AST":{"nativeSrc":"2118:38:9","nodeType":"YulBlock","src":"2118:38:9","statements":[{"nativeSrc":"2132:14:9","nodeType":"YulAssignment","src":"2132:14:9","value":{"name":"slot","nativeSrc":"2142:4:9","nodeType":"YulIdentifier","src":"2142:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:9","nodeType":"YulIdentifier","src":"2132:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1211,"isOffset":false,"isSlot":true,"src":"2132:6:9","suffix":"slot","valueSize":1},{"declaration":1207,"isOffset":false,"isSlot":false,"src":"2142:4:9","valueSize":1}],"id":1213,"nodeType":"InlineAssembly","src":"2109:47:9"}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"1880:87:9","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:9","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"slot","nameLocation":"2004:4:9","nodeType":"VariableDeclaration","scope":1215,"src":"1996:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:9"},"returnParameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"mutability":"mutable","name":"r","nameLocation":"2053:1:9","nodeType":"VariableDeclaration","scope":1215,"src":"2033:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1181_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":1210,"nodeType":"UserDefinedTypeName","pathNode":{"id":1209,"name":"BooleanSlot","nameLocations":["2033:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1181,"src":"2033:11:9"},"referencedDeclaration":1181,"src":"2033:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$1181_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:9"},"scope":1282,"src":"1972:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"2344:106:9","statements":[{"AST":{"nativeSrc":"2406:38:9","nodeType":"YulBlock","src":"2406:38:9","statements":[{"nativeSrc":"2420:14:9","nodeType":"YulAssignment","src":"2420:14:9","value":{"name":"slot","nativeSrc":"2430:4:9","nodeType":"YulIdentifier","src":"2430:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:9","nodeType":"YulIdentifier","src":"2420:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1222,"isOffset":false,"isSlot":true,"src":"2420:6:9","suffix":"slot","valueSize":1},{"declaration":1218,"isOffset":false,"isSlot":false,"src":"2430:4:9","valueSize":1}],"id":1224,"nodeType":"InlineAssembly","src":"2397:47:9"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"2168:87:9","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:9","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"slot","nameLocation":"2292:4:9","nodeType":"VariableDeclaration","scope":1226,"src":"2284:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1217,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:9"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"r","nameLocation":"2341:1:9","nodeType":"VariableDeclaration","scope":1226,"src":"2321:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1184_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":1221,"nodeType":"UserDefinedTypeName","pathNode":{"id":1220,"name":"Bytes32Slot","nameLocations":["2321:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"2321:11:9"},"referencedDeclaration":1184,"src":"2321:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$1184_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:9"},"scope":1282,"src":"2260:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"2632:106:9","statements":[{"AST":{"nativeSrc":"2694:38:9","nodeType":"YulBlock","src":"2694:38:9","statements":[{"nativeSrc":"2708:14:9","nodeType":"YulAssignment","src":"2708:14:9","value":{"name":"slot","nativeSrc":"2718:4:9","nodeType":"YulIdentifier","src":"2718:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:9","nodeType":"YulIdentifier","src":"2708:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1233,"isOffset":false,"isSlot":true,"src":"2708:6:9","suffix":"slot","valueSize":1},{"declaration":1229,"isOffset":false,"isSlot":false,"src":"2718:4:9","valueSize":1}],"id":1235,"nodeType":"InlineAssembly","src":"2685:47:9"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"2456:87:9","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"slot","nameLocation":"2580:4:9","nodeType":"VariableDeclaration","scope":1237,"src":"2572:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:9"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"r","nameLocation":"2629:1:9","nodeType":"VariableDeclaration","scope":1237,"src":"2609:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1187_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":1232,"nodeType":"UserDefinedTypeName","pathNode":{"id":1231,"name":"Uint256Slot","nameLocations":["2609:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1187,"src":"2609:11:9"},"referencedDeclaration":1187,"src":"2609:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$1187_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:9"},"scope":1282,"src":"2548:190:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1247,"nodeType":"Block","src":"2917:106:9","statements":[{"AST":{"nativeSrc":"2979:38:9","nodeType":"YulBlock","src":"2979:38:9","statements":[{"nativeSrc":"2993:14:9","nodeType":"YulAssignment","src":"2993:14:9","value":{"name":"slot","nativeSrc":"3003:4:9","nodeType":"YulIdentifier","src":"3003:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:9","nodeType":"YulIdentifier","src":"2993:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1244,"isOffset":false,"isSlot":true,"src":"2993:6:9","suffix":"slot","valueSize":1},{"declaration":1240,"isOffset":false,"isSlot":false,"src":"3003:4:9","valueSize":1}],"id":1246,"nodeType":"InlineAssembly","src":"2970:47:9"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"2744:86:9","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:9","nodeType":"FunctionDefinition","parameters":{"id":1241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"slot","nameLocation":"2866:4:9","nodeType":"VariableDeclaration","scope":1248,"src":"2858:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:9"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"r","nameLocation":"2914:1:9","nodeType":"VariableDeclaration","scope":1248,"src":"2895:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1190_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1243,"nodeType":"UserDefinedTypeName","pathNode":{"id":1242,"name":"StringSlot","nameLocations":["2895:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1190,"src":"2895:10:9"},"referencedDeclaration":1190,"src":"2895:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1190_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:9"},"scope":1282,"src":"2835:188:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"3225:112:9","statements":[{"AST":{"nativeSrc":"3287:44:9","nodeType":"YulBlock","src":"3287:44:9","statements":[{"nativeSrc":"3301:20:9","nodeType":"YulAssignment","src":"3301:20:9","value":{"name":"store.slot","nativeSrc":"3311:10:9","nodeType":"YulIdentifier","src":"3311:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:9","nodeType":"YulIdentifier","src":"3301:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1255,"isOffset":false,"isSlot":true,"src":"3301:6:9","suffix":"slot","valueSize":1},{"declaration":1251,"isOffset":false,"isSlot":true,"src":"3311:10:9","suffix":"slot","valueSize":1}],"id":1257,"nodeType":"InlineAssembly","src":"3278:53:9"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"3029:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:9","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"store","nameLocation":"3173:5:9","nodeType":"VariableDeclaration","scope":1259,"src":"3158:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1250,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:9"},"returnParameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"r","nameLocation":"3222:1:9","nodeType":"VariableDeclaration","scope":1259,"src":"3203:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1190_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":1254,"nodeType":"UserDefinedTypeName","pathNode":{"id":1253,"name":"StringSlot","nameLocations":["3203:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":1190,"src":"3203:10:9"},"referencedDeclaration":1190,"src":"3203:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$1190_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:9"},"scope":1282,"src":"3135:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1269,"nodeType":"Block","src":"3513:106:9","statements":[{"AST":{"nativeSrc":"3575:38:9","nodeType":"YulBlock","src":"3575:38:9","statements":[{"nativeSrc":"3589:14:9","nodeType":"YulAssignment","src":"3589:14:9","value":{"name":"slot","nativeSrc":"3599:4:9","nodeType":"YulIdentifier","src":"3599:4:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:9","nodeType":"YulIdentifier","src":"3589:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1266,"isOffset":false,"isSlot":true,"src":"3589:6:9","suffix":"slot","valueSize":1},{"declaration":1262,"isOffset":false,"isSlot":false,"src":"3599:4:9","valueSize":1}],"id":1268,"nodeType":"InlineAssembly","src":"3566:47:9"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"3343:85:9","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":1270,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:9","nodeType":"FunctionDefinition","parameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"slot","nameLocation":"3463:4:9","nodeType":"VariableDeclaration","scope":1270,"src":"3455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1261,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:9"},"returnParameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"r","nameLocation":"3510:1:9","nodeType":"VariableDeclaration","scope":1270,"src":"3492:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1193_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1265,"nodeType":"UserDefinedTypeName","pathNode":{"id":1264,"name":"BytesSlot","nameLocations":["3492:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1193,"src":"3492:9:9"},"referencedDeclaration":1193,"src":"3492:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1193_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:9"},"scope":1282,"src":"3433:186:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1280,"nodeType":"Block","src":"3816:112:9","statements":[{"AST":{"nativeSrc":"3878:44:9","nodeType":"YulBlock","src":"3878:44:9","statements":[{"nativeSrc":"3892:20:9","nodeType":"YulAssignment","src":"3892:20:9","value":{"name":"store.slot","nativeSrc":"3902:10:9","nodeType":"YulIdentifier","src":"3902:10:9"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:9","nodeType":"YulIdentifier","src":"3892:6:9"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1277,"isOffset":false,"isSlot":true,"src":"3892:6:9","suffix":"slot","valueSize":1},{"declaration":1273,"isOffset":false,"isSlot":true,"src":"3902:10:9","suffix":"slot","valueSize":1}],"id":1279,"nodeType":"InlineAssembly","src":"3869:53:9"}]},"documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"3625:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":1281,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:9","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"store","nameLocation":"3765:5:9","nodeType":"VariableDeclaration","scope":1281,"src":"3751:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1272,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:9"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"r","nameLocation":"3813:1:9","nodeType":"VariableDeclaration","scope":1281,"src":"3795:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1193_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":1276,"nodeType":"UserDefinedTypeName","pathNode":{"id":1275,"name":"BytesSlot","nameLocations":["3795:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1193,"src":"3795:9:9"},"referencedDeclaration":1193,"src":"3795:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$1193_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:9"},"scope":1282,"src":"3729:199:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1283,"src":"1245:2685:9","usedErrors":[],"usedEvents":[]}],"src":"193:3738:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3013],"SignedMath":[3118],"Strings":[1537]},"id":1538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1284,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1538,"sourceUnit":3014,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1285,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1538,"sourceUnit":3119,"src":"165:49:10","symbolAliases":[{"foreign":{"id":1287,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"173:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"216:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":1537,"linearizedBaseContracts":[1537],"name":"Strings","nameLocation":"259:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1292,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:10","nodeType":"VariableDeclaration","scope":1537,"src":"273:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1290,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1295,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:10","nodeType":"VariableDeclaration","scope":1537,"src":"335:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1293,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"384:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1302,"name":"StringsInsufficientHexLength","nameLocation":"476:28:10","nodeType":"ErrorDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"value","nameLocation":"513:5:10","nodeType":"VariableDeclaration","scope":1302,"src":"505:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"length","nameLocation":"528:6:10","nodeType":"VariableDeclaration","scope":1302,"src":"520:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:10"},"src":"470:66:10"},{"body":{"id":1349,"nodeType":"Block","src":"708:627:10","statements":[{"id":1348,"nodeType":"UncheckedBlock","src":"718:611:10","statements":[{"assignments":[1311],"declarations":[{"constant":false,"id":1311,"mutability":"mutable","name":"length","nameLocation":"750:6:10","nodeType":"VariableDeclaration","scope":1348,"src":"742:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1318,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1312,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"759:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3013_$","typeString":"type(library Math)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2833,"src":"759:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:10"},{"assignments":[1320],"declarations":[{"constant":false,"id":1320,"mutability":"mutable","name":"buffer","nameLocation":"808:6:10","nodeType":"VariableDeclaration","scope":1348,"src":"794:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1319,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1325,"initialValue":{"arguments":[{"id":1323,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"828:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1321,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:10"},{"assignments":[1327],"declarations":[{"constant":false,"id":1327,"mutability":"mutable","name":"ptr","nameLocation":"857:3:10","nodeType":"VariableDeclaration","scope":1348,"src":"849:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1328,"nodeType":"VariableDeclarationStatement","src":"849:11:10"},{"AST":{"nativeSrc":"930:67:10","nodeType":"YulBlock","src":"930:67:10","statements":[{"nativeSrc":"948:35:10","nodeType":"YulAssignment","src":"948:35:10","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:10","nodeType":"YulIdentifier","src":"959:6:10"},{"arguments":[{"kind":"number","nativeSrc":"971:2:10","nodeType":"YulLiteral","src":"971:2:10","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:10","nodeType":"YulIdentifier","src":"975:6:10"}],"functionName":{"name":"add","nativeSrc":"967:3:10","nodeType":"YulIdentifier","src":"967:3:10"},"nativeSrc":"967:15:10","nodeType":"YulFunctionCall","src":"967:15:10"}],"functionName":{"name":"add","nativeSrc":"955:3:10","nodeType":"YulIdentifier","src":"955:3:10"},"nativeSrc":"955:28:10","nodeType":"YulFunctionCall","src":"955:28:10"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:10","nodeType":"YulIdentifier","src":"948:3:10"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1320,"isOffset":false,"isSlot":false,"src":"959:6:10","valueSize":1},{"declaration":1311,"isOffset":false,"isSlot":false,"src":"975:6:10","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"948:3:10","valueSize":1}],"id":1329,"nodeType":"InlineAssembly","src":"921:76:10"},{"body":{"id":1344,"nodeType":"Block","src":"1023:269:10","statements":[{"expression":{"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:10","subExpression":{"id":1331,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"1041:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ExpressionStatement","src":"1041:5:10"},{"AST":{"nativeSrc":"1124:86:10","nodeType":"YulBlock","src":"1124:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:10","nodeType":"YulIdentifier","src":"1154:3:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:10","nodeType":"YulIdentifier","src":"1168:5:10"},{"kind":"number","nativeSrc":"1175:2:10","nodeType":"YulLiteral","src":"1175:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:10","nodeType":"YulIdentifier","src":"1164:3:10"},"nativeSrc":"1164:14:10","nodeType":"YulFunctionCall","src":"1164:14:10"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:10","nodeType":"YulIdentifier","src":"1180:10:10"}],"functionName":{"name":"byte","nativeSrc":"1159:4:10","nodeType":"YulIdentifier","src":"1159:4:10"},"nativeSrc":"1159:32:10","nodeType":"YulFunctionCall","src":"1159:32:10"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:10","nodeType":"YulIdentifier","src":"1146:7:10"},"nativeSrc":"1146:46:10","nodeType":"YulFunctionCall","src":"1146:46:10"},"nativeSrc":"1146:46:10","nodeType":"YulExpressionStatement","src":"1146:46:10"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1292,"isOffset":false,"isSlot":false,"src":"1180:10:10","valueSize":1},{"declaration":1327,"isOffset":false,"isSlot":false,"src":"1154:3:10","valueSize":1},{"declaration":1305,"isOffset":false,"isSlot":false,"src":"1168:5:10","valueSize":1}],"id":1334,"nodeType":"InlineAssembly","src":"1115:95:10"},{"expression":{"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1227:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1338,"nodeType":"ExpressionStatement","src":"1227:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"1260:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"1256:21:10","trueBody":{"id":1342,"nodeType":"Break","src":"1272:5:10"}}]},"condition":{"hexValue":"74727565","id":1330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1345,"nodeType":"WhileStatement","src":"1010:282:10"},{"expression":{"id":1346,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"1312:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1309,"id":1347,"nodeType":"Return","src":"1305:13:10"}]}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"542:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1350,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:10","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"value","nameLocation":"663:5:10","nodeType":"VariableDeclaration","scope":1350,"src":"655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:10"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1350,"src":"693:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1307,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:10"},"scope":1537,"src":"637:698:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1375,"nodeType":"Block","src":"1511:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1542:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:10","trueExpression":{"hexValue":"2d","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1588:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1368,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"1573:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$3118_$","typeString":"type(library SignedMath)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":3117,"src":"1573:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1367,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"1564:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1358,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:10","typeDescriptions":{}}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:10","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1357,"id":1374,"nodeType":"Return","src":"1521:75:10"}]},"documentation":{"id":1351,"nodeType":"StructuredDocumentation","src":"1341:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1376,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:10","nodeType":"FunctionDefinition","parameters":{"id":1354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"mutability":"mutable","name":"value","nameLocation":"1466:5:10","nodeType":"VariableDeclaration","scope":1376,"src":"1459:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1352,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:10"},"returnParameters":{"id":1357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1376,"src":"1496:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1355,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:10"},"scope":1537,"src":"1435:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1395,"nodeType":"Block","src":"1782:100:10","statements":[{"id":1394,"nodeType":"UncheckedBlock","src":"1792:84:10","statements":[{"expression":{"arguments":[{"id":1385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1835:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"1854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1386,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"1842:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3013_$","typeString":"type(library Math)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2955,"src":"1842:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1384,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1396,1479,1499],"referencedDeclaration":1479,"src":"1823:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1383,"id":1393,"nodeType":"Return","src":"1816:49:10"}]}]},"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"1609:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:10","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"value","nameLocation":"1737:5:10","nodeType":"VariableDeclaration","scope":1396,"src":"1729:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:10"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"1767:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1381,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:10"},"scope":1537,"src":"1708:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1478,"nodeType":"Block","src":"2095:435:10","statements":[{"assignments":[1407],"declarations":[{"constant":false,"id":1407,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:10","nodeType":"VariableDeclaration","scope":1478,"src":"2105:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1409,"initialValue":{"id":1408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2126:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:10"},{"assignments":[1411],"declarations":[{"constant":false,"id":1411,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:10","nodeType":"VariableDeclaration","scope":1478,"src":"2141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1410,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1420,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1415,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1412,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:10"},{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1421,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2198:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1423,"indexExpression":{"hexValue":"30","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1426,"nodeType":"ExpressionStatement","src":"2198:15:10"},{"expression":{"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1427,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2223:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1429,"indexExpression":{"hexValue":"31","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1432,"nodeType":"ExpressionStatement","src":"2223:15:10"},{"body":{"id":1461,"nodeType":"Block","src":"2293:95:10","statements":[{"expression":{"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1447,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2307:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1449,"indexExpression":{"id":1448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2314:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1450,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"2319:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1454,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2330:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1456,"nodeType":"ExpressionStatement","src":"2307:40:10"},{"expression":{"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1457,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2361:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1460,"nodeType":"ExpressionStatement","src":"2361:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2281:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1462,"initializationExpression":{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"i","nameLocation":"2261:1:10","nodeType":"VariableDeclaration","scope":1462,"src":"2253:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1440,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1436,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2269:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:10","subExpression":{"id":1444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2290:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1446,"nodeType":"ExpressionStatement","src":"2288:3:10"},"nodeType":"ForStatement","src":"2248:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2401:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1472,"nodeType":"IfStatement","src":"2397:96:10","trueBody":{"id":1471,"nodeType":"Block","src":"2418:75:10","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2468:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1468,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2475:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1466,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2439:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"RevertStatement","src":"2432:50:10"}]}},{"expression":{"arguments":[{"id":1475,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"2516:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1473,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:10","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1405,"id":1477,"nodeType":"Return","src":"2502:21:10"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"1888:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1479,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:10","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"value","nameLocation":"2034:5:10","nodeType":"VariableDeclaration","scope":1479,"src":"2026:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"length","nameLocation":"2049:6:10","nodeType":"VariableDeclaration","scope":1479,"src":"2041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:10"},"returnParameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"2080:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1403,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:10"},"scope":1537,"src":"2005:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1498,"nodeType":"Block","src":"2762:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1492,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"2807:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1490,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:10","typeDescriptions":{}}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:10","typeDescriptions":{}}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1495,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"2815:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1487,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1396,1479,1499],"referencedDeclaration":1479,"src":"2779:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1486,"id":1497,"nodeType":"Return","src":"2772:58:10"}]},"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"2536:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:10","nodeType":"FunctionDefinition","parameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"addr","nameLocation":"2718:4:10","nodeType":"VariableDeclaration","scope":1499,"src":"2710:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1481,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:10"},"returnParameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2747:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1484,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:10"},"scope":1537,"src":"2689:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"2992:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3015:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1509,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:10","typeDescriptions":{}}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:10","memberName":"length","nodeType":"MemberAccess","src":"3009:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1516,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3034:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1514,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:10","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:10","memberName":"length","nodeType":"MemberAccess","src":"3028:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"3063:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:10","typeDescriptions":{}}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1520,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"3086:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1527,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:10","typeDescriptions":{}}},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1526,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1508,"id":1534,"nodeType":"Return","src":"3002:87:10"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"2843:66:10","text":" @dev Returns true if the two strings are equal."},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:10","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"a","nameLocation":"2943:1:10","nodeType":"VariableDeclaration","scope":1536,"src":"2929:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1501,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"b","nameLocation":"2960:1:10","nodeType":"VariableDeclaration","scope":1536,"src":"2946:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1503,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:10"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"2986:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1506,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:10"},"scope":1537,"src":"2914:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1538,"src":"251:2847:10","usedErrors":[1302],"usedEvents":[]}],"src":"101:2998:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1885]},"id":1886,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1539,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1885,"linearizedBaseContracts":[1885],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1545,"members":[{"id":1541,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":1542,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":1543,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":1544,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1548,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1553,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":1553,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1558,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":1558,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":1610,"nodeType":"Block","src":"2242:653:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1573,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2256:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:11","memberName":"length","nodeType":"MemberAccess","src":"2256:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1608,"nodeType":"Block","src":"2781:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:11","typeDescriptions":{}}},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1599,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"2815:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"2815:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1603,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"2860:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:11","memberName":"length","nodeType":"MemberAccess","src":"2860:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1601,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:11","typeDescriptions":{}}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1572,"id":1607,"nodeType":"Return","src":"2795:83:11"}]},"id":1609,"nodeType":"IfStatement","src":"2252:637:11","trueBody":{"id":1594,"nodeType":"Block","src":"2280:495:11","statements":[{"assignments":[1578],"declarations":[{"constant":false,"id":1578,"mutability":"mutable","name":"r","nameLocation":"2302:1:11","nodeType":"VariableDeclaration","scope":1594,"src":"2294:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1579,"nodeType":"VariableDeclarationStatement","src":"2294:9:11"},{"assignments":[1581],"declarations":[{"constant":false,"id":1581,"mutability":"mutable","name":"s","nameLocation":"2325:1:11","nodeType":"VariableDeclaration","scope":1594,"src":"2317:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1582,"nodeType":"VariableDeclarationStatement","src":"2317:9:11"},{"assignments":[1584],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"v","nameLocation":"2346:1:11","nodeType":"VariableDeclaration","scope":1594,"src":"2340:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1583,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1585,"nodeType":"VariableDeclarationStatement","src":"2340:7:11"},{"AST":{"nativeSrc":"2548:171:11","nodeType":"YulBlock","src":"2548:171:11","statements":[{"nativeSrc":"2566:32:11","nodeType":"YulAssignment","src":"2566:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:11","nodeType":"YulIdentifier","src":"2581:9:11"},{"kind":"number","nativeSrc":"2592:4:11","nodeType":"YulLiteral","src":"2592:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:11","nodeType":"YulIdentifier","src":"2577:3:11"},"nativeSrc":"2577:20:11","nodeType":"YulFunctionCall","src":"2577:20:11"}],"functionName":{"name":"mload","nativeSrc":"2571:5:11","nodeType":"YulIdentifier","src":"2571:5:11"},"nativeSrc":"2571:27:11","nodeType":"YulFunctionCall","src":"2571:27:11"},"variableNames":[{"name":"r","nativeSrc":"2566:1:11","nodeType":"YulIdentifier","src":"2566:1:11"}]},{"nativeSrc":"2615:32:11","nodeType":"YulAssignment","src":"2615:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:11","nodeType":"YulIdentifier","src":"2630:9:11"},{"kind":"number","nativeSrc":"2641:4:11","nodeType":"YulLiteral","src":"2641:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:11","nodeType":"YulIdentifier","src":"2626:3:11"},"nativeSrc":"2626:20:11","nodeType":"YulFunctionCall","src":"2626:20:11"}],"functionName":{"name":"mload","nativeSrc":"2620:5:11","nodeType":"YulIdentifier","src":"2620:5:11"},"nativeSrc":"2620:27:11","nodeType":"YulFunctionCall","src":"2620:27:11"},"variableNames":[{"name":"s","nativeSrc":"2615:1:11","nodeType":"YulIdentifier","src":"2615:1:11"}]},{"nativeSrc":"2664:41:11","nodeType":"YulAssignment","src":"2664:41:11","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:11","nodeType":"YulLiteral","src":"2674:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:11","nodeType":"YulIdentifier","src":"2687:9:11"},{"kind":"number","nativeSrc":"2698:4:11","nodeType":"YulLiteral","src":"2698:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:11","nodeType":"YulIdentifier","src":"2683:3:11"},"nativeSrc":"2683:20:11","nodeType":"YulFunctionCall","src":"2683:20:11"}],"functionName":{"name":"mload","nativeSrc":"2677:5:11","nodeType":"YulIdentifier","src":"2677:5:11"},"nativeSrc":"2677:27:11","nodeType":"YulFunctionCall","src":"2677:27:11"}],"functionName":{"name":"byte","nativeSrc":"2669:4:11","nodeType":"YulIdentifier","src":"2669:4:11"},"nativeSrc":"2669:36:11","nodeType":"YulFunctionCall","src":"2669:36:11"},"variableNames":[{"name":"v","nativeSrc":"2664:1:11","nodeType":"YulIdentifier","src":"2664:1:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1578,"isOffset":false,"isSlot":false,"src":"2566:1:11","valueSize":1},{"declaration":1581,"isOffset":false,"isSlot":false,"src":"2615:1:11","valueSize":1},{"declaration":1563,"isOffset":false,"isSlot":false,"src":"2581:9:11","valueSize":1},{"declaration":1563,"isOffset":false,"isSlot":false,"src":"2630:9:11","valueSize":1},{"declaration":1563,"isOffset":false,"isSlot":false,"src":"2687:9:11","valueSize":1},{"declaration":1584,"isOffset":false,"isSlot":false,"src":"2664:1:11","valueSize":1}],"id":1586,"nodeType":"InlineAssembly","src":"2539:180:11"},{"expression":{"arguments":[{"id":1588,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"2750:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1589,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"2756:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1590,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"2759:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1591,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2762:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1587,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1611,1691,1799],"referencedDeclaration":1799,"src":"2739:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1572,"id":1593,"nodeType":"Return","src":"2732:32:11"}]}}]},"documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1611,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"hash","nameLocation":"2157:4:11","nodeType":"VariableDeclaration","scope":1611,"src":"2149:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"signature","nameLocation":"2176:9:11","nodeType":"VariableDeclaration","scope":1611,"src":"2163:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1562,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:11"},"returnParameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"2210:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"2219:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1568,"nodeType":"UserDefinedTypeName","pathNode":{"id":1567,"name":"RecoverError","nameLocations":["2219:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"2219:12:11"},"referencedDeclaration":1545,"src":"2219:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1611,"src":"2233:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1570,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:11"},"scope":1885,"src":"2129:766:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1640,"nodeType":"Block","src":"3789:168:11","statements":[{"assignments":[1622,1625,1627],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:11","nodeType":"VariableDeclaration","scope":1640,"src":"3800:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"error","nameLocation":"3832:5:11","nodeType":"VariableDeclaration","scope":1640,"src":"3819:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1624,"nodeType":"UserDefinedTypeName","pathNode":{"id":1623,"name":"RecoverError","nameLocations":["3819:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"3819:12:11"},"referencedDeclaration":1545,"src":"3819:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:11","nodeType":"VariableDeclaration","scope":1640,"src":"3839:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1632,"initialValue":{"arguments":[{"id":1629,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"3870:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1630,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"3876:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1628,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1611,1691,1799],"referencedDeclaration":1611,"src":"3859:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:11"},{"expression":{"arguments":[{"id":1634,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"3908:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"id":1635,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"3915:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1633,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"3896:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1545_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"3896:28:11"},{"expression":{"id":1638,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"3941:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1620,"id":1639,"nodeType":"Return","src":"3934:16:11"}]},"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"2901:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1641,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:11","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"hash","nameLocation":"3727:4:11","nodeType":"VariableDeclaration","scope":1641,"src":"3719:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"signature","nameLocation":"3746:9:11","nodeType":"VariableDeclaration","scope":1641,"src":"3733:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1615,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:11"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"3780:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:11"},"scope":1885,"src":"3702:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"4285:342:11","statements":[{"id":1689,"nodeType":"UncheckedBlock","src":"4295:326:11","statements":[{"assignments":[1659],"declarations":[{"constant":false,"id":1659,"mutability":"mutable","name":"s","nameLocation":"4327:1:11","nodeType":"VariableDeclaration","scope":1689,"src":"4319:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1658,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1666,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4331:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:11","typeDescriptions":{}}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:11"},{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"v","nameLocation":"4528:1:11","nodeType":"VariableDeclaration","scope":1689,"src":"4522:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1667,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1681,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1673,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"4547:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:11","typeDescriptions":{}}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1669,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:11","typeDescriptions":{}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:11"},{"expression":{"arguments":[{"id":1683,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"4596:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1684,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"4602:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"4605:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1686,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"4608:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1682,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1611,1691,1799],"referencedDeclaration":1799,"src":"4585:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1657,"id":1688,"nodeType":"Return","src":"4578:32:11"}]}]},"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"3963:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":1691,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:11","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1644,"mutability":"mutable","name":"hash","nameLocation":"4201:4:11","nodeType":"VariableDeclaration","scope":1691,"src":"4193:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"r","nameLocation":"4215:1:11","nodeType":"VariableDeclaration","scope":1691,"src":"4207:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"vs","nameLocation":"4226:2:11","nodeType":"VariableDeclaration","scope":1691,"src":"4218:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1647,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:11"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"4253:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"4262:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1653,"nodeType":"UserDefinedTypeName","pathNode":{"id":1652,"name":"RecoverError","nameLocations":["4262:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"4262:12:11"},"referencedDeclaration":1545,"src":"4262:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1691,"src":"4276:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:11"},"scope":1885,"src":"4173:454:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"4840:164:11","statements":[{"assignments":[1704,1707,1709],"declarations":[{"constant":false,"id":1704,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:11","nodeType":"VariableDeclaration","scope":1723,"src":"4851:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"error","nameLocation":"4883:5:11","nodeType":"VariableDeclaration","scope":1723,"src":"4870:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1706,"nodeType":"UserDefinedTypeName","pathNode":{"id":1705,"name":"RecoverError","nameLocations":["4870:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"4870:12:11"},"referencedDeclaration":1545,"src":"4870:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:11","nodeType":"VariableDeclaration","scope":1723,"src":"4890:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1715,"initialValue":{"arguments":[{"id":1711,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"4921:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1712,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"4927:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1713,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4930:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1710,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1611,1691,1799],"referencedDeclaration":1691,"src":"4910:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:11"},{"expression":{"arguments":[{"id":1717,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"4955:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"id":1718,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"4962:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1716,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4943:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1545_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"4943:28:11"},{"expression":{"id":1721,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"4988:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1702,"id":1722,"nodeType":"Return","src":"4981:16:11"}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"4633:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:11","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"hash","nameLocation":"4779:4:11","nodeType":"VariableDeclaration","scope":1724,"src":"4771:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"r","nameLocation":"4793:1:11","nodeType":"VariableDeclaration","scope":1724,"src":"4785:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"vs","nameLocation":"4804:2:11","nodeType":"VariableDeclaration","scope":1724,"src":"4796:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1697,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:11"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1724,"src":"4831:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:11"},"scope":1885,"src":"4754:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1798,"nodeType":"Block","src":"5298:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1745,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"6194:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:11","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1759,"nodeType":"IfStatement","src":"6182:164:11","trueBody":{"id":1758,"nodeType":"Block","src":"6267:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:11","typeDescriptions":{}}},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1753,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6301:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"6301:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"id":1755,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"6333:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1742,"id":1757,"nodeType":"Return","src":"6281:54:11"}]}},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"signer","nameLocation":"6448:6:11","nodeType":"VariableDeclaration","scope":1798,"src":"6440:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1768,"initialValue":{"arguments":[{"id":1763,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"6467:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1764,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6473:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1765,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"6476:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1766,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"6479:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1762,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1769,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"6495:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1770,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:11","typeDescriptions":{}}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1788,"nodeType":"IfStatement","src":"6491:113:11","trueBody":{"id":1787,"nodeType":"Block","src":"6517:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:11","typeDescriptions":{}}},"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1779,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6551:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1542,"src":"6551:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:11","typeDescriptions":{}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1785,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1742,"id":1786,"nodeType":"Return","src":"6531:62:11"}]}},{"expression":{"components":[{"id":1789,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"6622:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1790,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6630:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1541,"src":"6630:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:11","typeDescriptions":{}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1742,"id":1797,"nodeType":"Return","src":"6614:49:11"}]},"documentation":{"id":1725,"nodeType":"StructuredDocumentation","src":"5010:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1799,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:11","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"hash","nameLocation":"5177:4:11","nodeType":"VariableDeclaration","scope":1799,"src":"5169:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"v","nameLocation":"5197:1:11","nodeType":"VariableDeclaration","scope":1799,"src":"5191:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1728,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1731,"mutability":"mutable","name":"r","nameLocation":"5216:1:11","nodeType":"VariableDeclaration","scope":1799,"src":"5208:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1733,"mutability":"mutable","name":"s","nameLocation":"5235:1:11","nodeType":"VariableDeclaration","scope":1799,"src":"5227:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:11"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"5266:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"5275:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1738,"nodeType":"UserDefinedTypeName","pathNode":{"id":1737,"name":"RecoverError","nameLocations":["5275:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"5275:12:11"},"referencedDeclaration":1545,"src":"5275:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1799,"src":"5289:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:11"},"scope":1885,"src":"5140:1530:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1834,"nodeType":"Block","src":"6897:166:11","statements":[{"assignments":[1814,1817,1819],"declarations":[{"constant":false,"id":1814,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:11","nodeType":"VariableDeclaration","scope":1834,"src":"6908:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"error","nameLocation":"6940:5:11","nodeType":"VariableDeclaration","scope":1834,"src":"6927:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1816,"nodeType":"UserDefinedTypeName","pathNode":{"id":1815,"name":"RecoverError","nameLocations":["6927:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"6927:12:11"},"referencedDeclaration":1545,"src":"6927:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:11","nodeType":"VariableDeclaration","scope":1834,"src":"6947:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1818,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1826,"initialValue":{"arguments":[{"id":1821,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6978:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1822,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"6984:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1823,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"6987:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1824,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"6990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1820,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1611,1691,1799],"referencedDeclaration":1799,"src":"6967:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1545_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:11"},{"expression":{"arguments":[{"id":1828,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"7014:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},{"id":1829,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"7021:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1827,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"7002:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1545_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"7002:28:11"},{"expression":{"id":1832,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"7047:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1812,"id":1833,"nodeType":"Return","src":"7040:16:11"}]},"documentation":{"id":1800,"nodeType":"StructuredDocumentation","src":"6676:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1835,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:11","nodeType":"FunctionDefinition","parameters":{"id":1809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"hash","nameLocation":"6828:4:11","nodeType":"VariableDeclaration","scope":1835,"src":"6820:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"v","nameLocation":"6840:1:11","nodeType":"VariableDeclaration","scope":1835,"src":"6834:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1803,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"r","nameLocation":"6851:1:11","nodeType":"VariableDeclaration","scope":1835,"src":"6843:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"s","nameLocation":"6862:1:11","nodeType":"VariableDeclaration","scope":1835,"src":"6854:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:11"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1835,"src":"6888:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:11"},"scope":1885,"src":"6803:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"7268:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7282:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1845,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"7291:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1541,"src":"7291:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1850,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7378:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1851,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"7387:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1542,"src":"7387:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1858,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7483:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1859,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"7492:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1543,"src":"7492:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"7617:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1871,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"7626:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1545_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1544,"src":"7626:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"7613:109:11","trueBody":{"id":1878,"nodeType":"Block","src":"7658:64:11","statements":[{"errorCall":{"arguments":[{"id":1875,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"7702:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1874,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"7679:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"RevertStatement","src":"7672:39:11"}]}},"id":1880,"nodeType":"IfStatement","src":"7479:243:11","trueBody":{"id":1869,"nodeType":"Block","src":"7529:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1865,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"7586:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:11","typeDescriptions":{}}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1862,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1553,"src":"7550:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1868,"nodeType":"RevertStatement","src":"7543:53:11"}]}},"id":1881,"nodeType":"IfStatement","src":"7374:348:11","trueBody":{"id":1857,"nodeType":"Block","src":"7418:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1854,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"7439:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1856,"nodeType":"RevertStatement","src":"7432:30:11"}]}},"id":1882,"nodeType":"IfStatement","src":"7278:444:11","trueBody":{"id":1849,"nodeType":"Block","src":"7313:55:11","statements":[{"functionReturnParameters":1843,"id":1848,"nodeType":"Return","src":"7327:7:11"}]}}]},"documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"7069:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:11","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"error","nameLocation":"7230:5:11","nodeType":"VariableDeclaration","scope":1884,"src":"7217:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1838,"nodeType":"UserDefinedTypeName","pathNode":{"id":1837,"name":"RecoverError","nameLocations":["7217:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1545,"src":"7217:12:11"},"referencedDeclaration":1545,"src":"7217:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1545","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1841,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:11","nodeType":"VariableDeclaration","scope":1884,"src":"7237:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:11"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"7268:0:11"},"scope":1885,"src":"7196:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1886,"src":"344:7386:11","usedErrors":[1548,1553,1558],"usedEvents":[]}],"src":"112:7619:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[1959],"Strings":[1537]},"id":1960,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1887,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":1889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1960,"sourceUnit":1538,"src":"149:39:12","symbolAliases":[{"foreign":{"id":1888,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"157:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"190:330:12","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":1959,"linearizedBaseContracts":[1959],"name":"MessageHashUtils","nameLocation":"529:16:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1899,"nodeType":"Block","src":"1314:368:12","statements":[{"AST":{"nativeSrc":"1376:300:12","nodeType":"YulBlock","src":"1376:300:12","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:12","nodeType":"YulLiteral","src":"1397:4:12","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:12","nodeType":"YulLiteral","src":"1403:34:12","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:12","nodeType":"YulIdentifier","src":"1390:6:12"},"nativeSrc":"1390:48:12","nodeType":"YulFunctionCall","src":"1390:48:12"},"nativeSrc":"1390:48:12","nodeType":"YulExpressionStatement","src":"1390:48:12"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:12","nodeType":"YulLiteral","src":"1499:4:12","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:12","nodeType":"YulIdentifier","src":"1505:11:12"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:12","nodeType":"YulIdentifier","src":"1492:6:12"},"nativeSrc":"1492:25:12","nodeType":"YulFunctionCall","src":"1492:25:12"},"nativeSrc":"1492:25:12","nodeType":"YulExpressionStatement","src":"1492:25:12"},{"nativeSrc":"1571:31:12","nodeType":"YulAssignment","src":"1571:31:12","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:12","nodeType":"YulLiteral","src":"1591:4:12","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:12","nodeType":"YulLiteral","src":"1597:4:12","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:12","nodeType":"YulIdentifier","src":"1581:9:12"},"nativeSrc":"1581:21:12","nodeType":"YulFunctionCall","src":"1581:21:12"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:12","nodeType":"YulIdentifier","src":"1571:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1896,"isOffset":false,"isSlot":false,"src":"1571:6:12","valueSize":1},{"declaration":1893,"isOffset":false,"isSlot":false,"src":"1505:11:12","valueSize":1}],"id":1898,"nodeType":"InlineAssembly","src":"1367:309:12"}]},"documentation":{"id":1891,"nodeType":"StructuredDocumentation","src":"552:665:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:12","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:12","nodeType":"VariableDeclaration","scope":1900,"src":"1254:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:12"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"digest","nameLocation":"1306:6:12","nodeType":"VariableDeclaration","scope":1900,"src":"1298:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1895,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:12"},"scope":1959,"src":"1222:460:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1925,"nodeType":"Block","src":"2234:143:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":1917,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2343:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:12","memberName":"length","nodeType":"MemberAccess","src":"2343:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1915,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"2326:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1537_$","typeString":"type(library Strings)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:12","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1350,"src":"2326:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:12","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1921,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2361:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1909,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:12","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:12","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:12","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1908,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1907,"id":1924,"nodeType":"Return","src":"2244:126:12"}]},"documentation":{"id":1901,"nodeType":"StructuredDocumentation","src":"1688:455:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":1926,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:12","nodeType":"FunctionDefinition","parameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"message","nameLocation":"2193:7:12","nodeType":"VariableDeclaration","scope":1926,"src":"2180:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1902,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:12"},"returnParameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1926,"src":"2225:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:12"},"scope":1959,"src":"2148:229:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1945,"nodeType":"Block","src":"2831:80:12","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":1940,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"2887:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1941,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"2898:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1937,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1936,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1935,"id":1944,"nodeType":"Return","src":"2841:63:12"}]},"documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"2383:332:12","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":1946,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:12","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1929,"mutability":"mutable","name":"validator","nameLocation":"2769:9:12","nodeType":"VariableDeclaration","scope":1946,"src":"2761:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1928,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1931,"mutability":"mutable","name":"data","nameLocation":"2793:4:12","nodeType":"VariableDeclaration","scope":1946,"src":"2780:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:12"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"2822:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:12"},"scope":1959,"src":"2720:191:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"3462:292:12","statements":[{"AST":{"nativeSrc":"3524:224:12","nodeType":"YulBlock","src":"3524:224:12","statements":[{"nativeSrc":"3538:22:12","nodeType":"YulVariableDeclaration","src":"3538:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:12","nodeType":"YulLiteral","src":"3555:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:12","nodeType":"YulIdentifier","src":"3549:5:12"},"nativeSrc":"3549:11:12","nodeType":"YulFunctionCall","src":"3549:11:12"},"variables":[{"name":"ptr","nativeSrc":"3542:3:12","nodeType":"YulTypedName","src":"3542:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:12","nodeType":"YulIdentifier","src":"3580:3:12"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:12","nodeType":"YulLiteral","src":"3585:10:12","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:12","nodeType":"YulIdentifier","src":"3573:6:12"},"nativeSrc":"3573:23:12","nodeType":"YulFunctionCall","src":"3573:23:12"},"nativeSrc":"3573:23:12","nodeType":"YulExpressionStatement","src":"3573:23:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:12","nodeType":"YulIdentifier","src":"3620:3:12"},{"kind":"number","nativeSrc":"3625:4:12","nodeType":"YulLiteral","src":"3625:4:12","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:12","nodeType":"YulIdentifier","src":"3616:3:12"},"nativeSrc":"3616:14:12","nodeType":"YulFunctionCall","src":"3616:14:12"},{"name":"domainSeparator","nativeSrc":"3632:15:12","nodeType":"YulIdentifier","src":"3632:15:12"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:12","nodeType":"YulIdentifier","src":"3609:6:12"},"nativeSrc":"3609:39:12","nodeType":"YulFunctionCall","src":"3609:39:12"},"nativeSrc":"3609:39:12","nodeType":"YulExpressionStatement","src":"3609:39:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:12","nodeType":"YulIdentifier","src":"3672:3:12"},{"kind":"number","nativeSrc":"3677:4:12","nodeType":"YulLiteral","src":"3677:4:12","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:12","nodeType":"YulIdentifier","src":"3668:3:12"},"nativeSrc":"3668:14:12","nodeType":"YulFunctionCall","src":"3668:14:12"},{"name":"structHash","nativeSrc":"3684:10:12","nodeType":"YulIdentifier","src":"3684:10:12"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:12","nodeType":"YulIdentifier","src":"3661:6:12"},"nativeSrc":"3661:34:12","nodeType":"YulFunctionCall","src":"3661:34:12"},"nativeSrc":"3661:34:12","nodeType":"YulExpressionStatement","src":"3661:34:12"},{"nativeSrc":"3708:30:12","nodeType":"YulAssignment","src":"3708:30:12","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:12","nodeType":"YulIdentifier","src":"3728:3:12"},{"kind":"number","nativeSrc":"3733:4:12","nodeType":"YulLiteral","src":"3733:4:12","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:12","nodeType":"YulIdentifier","src":"3718:9:12"},"nativeSrc":"3718:20:12","nodeType":"YulFunctionCall","src":"3718:20:12"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:12","nodeType":"YulIdentifier","src":"3708:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1954,"isOffset":false,"isSlot":false,"src":"3708:6:12","valueSize":1},{"declaration":1949,"isOffset":false,"isSlot":false,"src":"3632:15:12","valueSize":1},{"declaration":1951,"isOffset":false,"isSlot":false,"src":"3684:10:12","valueSize":1}],"id":1956,"nodeType":"InlineAssembly","src":"3515:233:12"}]},"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"2917:431:12","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:12","nodeType":"FunctionDefinition","parameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:12","nodeType":"VariableDeclaration","scope":1958,"src":"3378:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:12","nodeType":"VariableDeclaration","scope":1958,"src":"3403:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1950,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:12"},"returnParameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1954,"mutability":"mutable","name":"digest","nameLocation":"3454:6:12","nodeType":"VariableDeclaration","scope":1958,"src":"3446:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:12"},"scope":1959,"src":"3353:401:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1960,"src":"521:3235:12","usedErrors":[],"usedEvents":[]}],"src":"123:3634:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3013]},"id":3014,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1961,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"129:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3013,"linearizedBaseContracts":[3013],"name":"Math","nameLocation":"211:4:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"222:50:13","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":1965,"name":"MathOverflowedMulDiv","nameLocation":"283:20:13","nodeType":"ErrorDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[],"src":"303:2:13"},"src":"277:29:13"},{"canonicalName":"Math.Rounding","id":1970,"members":[{"id":1966,"name":"Floor","nameLocation":"336:5:13","nodeType":"EnumValue","src":"336:5:13"},{"id":1967,"name":"Ceil","nameLocation":"379:4:13","nodeType":"EnumValue","src":"379:4:13"},{"id":1968,"name":"Trunc","nameLocation":"421:5:13","nodeType":"EnumValue","src":"421:5:13"},{"id":1969,"name":"Expand","nameLocation":"451:6:13","nodeType":"EnumValue","src":"451:6:13"}],"name":"Rounding","nameLocation":"317:8:13","nodeType":"EnumDefinition","src":"312:169:13"},{"body":{"id":2001,"nodeType":"Block","src":"661:140:13","statements":[{"id":2000,"nodeType":"UncheckedBlock","src":"671:124:13","statements":[{"assignments":[1983],"declarations":[{"constant":false,"id":1983,"mutability":"mutable","name":"c","nameLocation":"703:1:13","nodeType":"VariableDeclaration","scope":2000,"src":"695:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1982,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1987,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"707:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1985,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"711:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"730:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1989,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"734:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1995,"nodeType":"IfStatement","src":"726:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1981,"id":1994,"nodeType":"Return","src":"737:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1997,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"782:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1981,"id":1999,"nodeType":"Return","src":"768:16:13"}]}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"487:93:13","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":2002,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:13","nodeType":"FunctionDefinition","parameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"a","nameLocation":"609:1:13","nodeType":"VariableDeclaration","scope":2002,"src":"601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1975,"mutability":"mutable","name":"b","nameLocation":"620:1:13","nodeType":"VariableDeclaration","scope":2002,"src":"612:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1974,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:13"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"646:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1977,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2002,"src":"652:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:13"},"scope":3013,"src":"585:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2029,"nodeType":"Block","src":"984:113:13","statements":[{"id":2028,"nodeType":"UncheckedBlock","src":"994:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2015,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1026:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"1018:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2013,"id":2020,"nodeType":"Return","src":"1029:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1074:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2024,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1078:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2013,"id":2027,"nodeType":"Return","src":"1060:20:13"}]}]},"documentation":{"id":2003,"nodeType":"StructuredDocumentation","src":"807:96:13","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":2030,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:13","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2005,"mutability":"mutable","name":"a","nameLocation":"932:1:13","nodeType":"VariableDeclaration","scope":2030,"src":"924:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"b","nameLocation":"943:1:13","nodeType":"VariableDeclaration","scope":2030,"src":"935:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:13"},"returnParameters":{"id":2013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"969:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2009,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2030,"src":"975:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:13"},"scope":3013,"src":"908:189:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2071,"nodeType":"Block","src":"1283:417:13","statements":[{"id":2070,"nodeType":"UncheckedBlock","src":"1293:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1551:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2049,"nodeType":"IfStatement","src":"1547:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2041,"id":2048,"nodeType":"Return","src":"1559:16:13"}},{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"c","nameLocation":"1597:1:13","nodeType":"VariableDeclaration","scope":2070,"src":"1589:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1601:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1605:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1624:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2057,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1628:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"1633:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2065,"nodeType":"IfStatement","src":"1620:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2041,"id":2064,"nodeType":"Return","src":"1636:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2067,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"1681:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2041,"id":2069,"nodeType":"Return","src":"1667:16:13"}]}]},"documentation":{"id":2031,"nodeType":"StructuredDocumentation","src":"1103:99:13","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":2072,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:13","nodeType":"FunctionDefinition","parameters":{"id":2036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"a","nameLocation":"1231:1:13","nodeType":"VariableDeclaration","scope":2072,"src":"1223:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2035,"mutability":"mutable","name":"b","nameLocation":"1242:1:13","nodeType":"VariableDeclaration","scope":2072,"src":"1234:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:13"},"returnParameters":{"id":2041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"1268:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2037,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2072,"src":"1274:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2039,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:13"},"scope":3013,"src":"1207:493:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2099,"nodeType":"Block","src":"1887:114:13","statements":[{"id":2098,"nodeType":"UncheckedBlock","src":"1897:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1925:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2091,"nodeType":"IfStatement","src":"1921:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2083,"id":2090,"nodeType":"Return","src":"1933:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2093,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"1978:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2094,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1982:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2083,"id":2097,"nodeType":"Return","src":"1964:20:13"}]}]},"documentation":{"id":2073,"nodeType":"StructuredDocumentation","src":"1706:100:13","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":2100,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:13","nodeType":"FunctionDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2075,"mutability":"mutable","name":"a","nameLocation":"1835:1:13","nodeType":"VariableDeclaration","scope":2100,"src":"1827:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2077,"mutability":"mutable","name":"b","nameLocation":"1846:1:13","nodeType":"VariableDeclaration","scope":2100,"src":"1838:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:13"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"1872:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2079,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2100,"src":"1878:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2081,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:13"},"scope":3013,"src":"1811:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2127,"nodeType":"Block","src":"2198:114:13","statements":[{"id":2126,"nodeType":"UncheckedBlock","src":"2208:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2112,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2236:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"2232:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2111,"id":2118,"nodeType":"Return","src":"2244:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2103,"src":"2289:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2122,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"2293:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2111,"id":2125,"nodeType":"Return","src":"2275:20:13"}]}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"2007:110:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":2128,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:13","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"a","nameLocation":"2146:1:13","nodeType":"VariableDeclaration","scope":2128,"src":"2138:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2105,"mutability":"mutable","name":"b","nameLocation":"2157:1:13","nodeType":"VariableDeclaration","scope":2128,"src":"2149:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:13"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"2183:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2107,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2128,"src":"2189:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:13"},"scope":3013,"src":"2122:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2145,"nodeType":"Block","src":"2449:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2466:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2470:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2142,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2133,"src":"2478:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:13","trueExpression":{"id":2141,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2474:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2137,"id":2144,"nodeType":"Return","src":"2459:20:13"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"2318:59:13","text":" @dev Returns the largest of two numbers."},"id":2146,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:13","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"a","nameLocation":"2403:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"2395:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"b","nameLocation":"2414:1:13","nodeType":"VariableDeclaration","scope":2146,"src":"2406:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2132,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:13"},"returnParameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2146,"src":"2440:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:13"},"scope":3013,"src":"2382:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"2624:37:13","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2641:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2157,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2645:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2160,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"2653:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:13","trueExpression":{"id":2159,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"2649:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2155,"id":2162,"nodeType":"Return","src":"2634:20:13"}]},"documentation":{"id":2147,"nodeType":"StructuredDocumentation","src":"2492:60:13","text":" @dev Returns the smallest of two numbers."},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:13","nodeType":"FunctionDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"a","nameLocation":"2578:1:13","nodeType":"VariableDeclaration","scope":2164,"src":"2570:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2151,"mutability":"mutable","name":"b","nameLocation":"2589:1:13","nodeType":"VariableDeclaration","scope":2164,"src":"2581:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:13"},"returnParameters":{"id":2155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"2615:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:13"},"scope":3013,"src":"2557:104:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"2845:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2900:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2904:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2178,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"2910:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2179,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2914:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2181,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2173,"id":2185,"nodeType":"Return","src":"2892:28:13"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"2667:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:13","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"a","nameLocation":"2799:1:13","nodeType":"VariableDeclaration","scope":2187,"src":"2791:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"b","nameLocation":"2810:1:13","nodeType":"VariableDeclaration","scope":2187,"src":"2802:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:13"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2187,"src":"2836:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:13"},"scope":3013,"src":"2774:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2220,"nodeType":"Block","src":"3219:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3233:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2205,"nodeType":"IfStatement","src":"3229:127:13","trueBody":{"id":2204,"nodeType":"Block","src":"3241:115:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2200,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3340:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2201,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3344:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2196,"id":2203,"nodeType":"Return","src":"3333:12:13"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2206,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3444:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"3458:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2214,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"3467:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:13","trueExpression":{"hexValue":"30","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2196,"id":2219,"nodeType":"Return","src":"3437:35:13"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"2933:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2221,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:13","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"a","nameLocation":"3173:1:13","nodeType":"VariableDeclaration","scope":2221,"src":"3165:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"b","nameLocation":"3184:1:13","nodeType":"VariableDeclaration","scope":2221,"src":"3176:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:13"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2221,"src":"3210:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2194,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:13"},"scope":3013,"src":"3148:331:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2346,"nodeType":"Block","src":"3901:4018:13","statements":[{"id":2345,"nodeType":"UncheckedBlock","src":"3911:4002:13","statements":[{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:13","nodeType":"VariableDeclaration","scope":2345,"src":"4232:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2238,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2235,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"4248:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2236,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"4252:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:13"},{"assignments":[2240],"declarations":[{"constant":false,"id":2240,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:13","nodeType":"VariableDeclaration","scope":2345,"src":"4312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2241,"nodeType":"VariableDeclarationStatement","src":"4312:13:13"},{"AST":{"nativeSrc":"4392:122:13","nodeType":"YulBlock","src":"4392:122:13","statements":[{"nativeSrc":"4410:30:13","nodeType":"YulVariableDeclaration","src":"4410:30:13","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:13","nodeType":"YulIdentifier","src":"4427:1:13"},{"name":"y","nativeSrc":"4430:1:13","nodeType":"YulIdentifier","src":"4430:1:13"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:13","nodeType":"YulLiteral","src":"4437:1:13","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:13","nodeType":"YulIdentifier","src":"4433:3:13"},"nativeSrc":"4433:6:13","nodeType":"YulFunctionCall","src":"4433:6:13"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:13","nodeType":"YulIdentifier","src":"4420:6:13"},"nativeSrc":"4420:20:13","nodeType":"YulFunctionCall","src":"4420:20:13"},"variables":[{"name":"mm","nativeSrc":"4414:2:13","nodeType":"YulTypedName","src":"4414:2:13","type":""}]},{"nativeSrc":"4457:43:13","nodeType":"YulAssignment","src":"4457:43:13","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:13","nodeType":"YulIdentifier","src":"4474:2:13"},{"name":"prod0","nativeSrc":"4478:5:13","nodeType":"YulIdentifier","src":"4478:5:13"}],"functionName":{"name":"sub","nativeSrc":"4470:3:13","nodeType":"YulIdentifier","src":"4470:3:13"},"nativeSrc":"4470:14:13","nodeType":"YulFunctionCall","src":"4470:14:13"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:13","nodeType":"YulIdentifier","src":"4489:2:13"},{"name":"prod0","nativeSrc":"4493:5:13","nodeType":"YulIdentifier","src":"4493:5:13"}],"functionName":{"name":"lt","nativeSrc":"4486:2:13","nodeType":"YulIdentifier","src":"4486:2:13"},"nativeSrc":"4486:13:13","nodeType":"YulFunctionCall","src":"4486:13:13"}],"functionName":{"name":"sub","nativeSrc":"4466:3:13","nodeType":"YulIdentifier","src":"4466:3:13"},"nativeSrc":"4466:34:13","nodeType":"YulFunctionCall","src":"4466:34:13"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:13","nodeType":"YulIdentifier","src":"4457:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2234,"isOffset":false,"isSlot":false,"src":"4478:5:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"4493:5:13","valueSize":1},{"declaration":2240,"isOffset":false,"isSlot":false,"src":"4457:5:13","valueSize":1},{"declaration":2224,"isOffset":false,"isSlot":false,"src":"4427:1:13","valueSize":1},{"declaration":2226,"isOffset":false,"isSlot":false,"src":"4430:1:13","valueSize":1}],"id":2242,"nodeType":"InlineAssembly","src":"4383:131:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2243,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"4595:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2251,"nodeType":"IfStatement","src":"4591:368:13","trueBody":{"id":2250,"nodeType":"Block","src":"4607:352:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2246,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"4925:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2247,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"4933:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2232,"id":2249,"nodeType":"Return","src":"4918:26:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2253,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"5080:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2259,"nodeType":"IfStatement","src":"5061:88:13","trueBody":{"id":2258,"nodeType":"Block","src":"5087:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2255,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5112:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2257,"nodeType":"RevertStatement","src":"5105:29:13"}]}},{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:13","nodeType":"VariableDeclaration","scope":2345,"src":"5404:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2262,"nodeType":"VariableDeclarationStatement","src":"5404:17:13"},{"AST":{"nativeSrc":"5444:291:13","nodeType":"YulBlock","src":"5444:291:13","statements":[{"nativeSrc":"5513:38:13","nodeType":"YulAssignment","src":"5513:38:13","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:13","nodeType":"YulIdentifier","src":"5533:1:13"},{"name":"y","nativeSrc":"5536:1:13","nodeType":"YulIdentifier","src":"5536:1:13"},{"name":"denominator","nativeSrc":"5539:11:13","nodeType":"YulIdentifier","src":"5539:11:13"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:13","nodeType":"YulIdentifier","src":"5526:6:13"},"nativeSrc":"5526:25:13","nodeType":"YulFunctionCall","src":"5526:25:13"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:13","nodeType":"YulIdentifier","src":"5513:9:13"}]},{"nativeSrc":"5633:41:13","nodeType":"YulAssignment","src":"5633:41:13","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:13","nodeType":"YulIdentifier","src":"5646:5:13"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:13","nodeType":"YulIdentifier","src":"5656:9:13"},{"name":"prod0","nativeSrc":"5667:5:13","nodeType":"YulIdentifier","src":"5667:5:13"}],"functionName":{"name":"gt","nativeSrc":"5653:2:13","nodeType":"YulIdentifier","src":"5653:2:13"},"nativeSrc":"5653:20:13","nodeType":"YulFunctionCall","src":"5653:20:13"}],"functionName":{"name":"sub","nativeSrc":"5642:3:13","nodeType":"YulIdentifier","src":"5642:3:13"},"nativeSrc":"5642:32:13","nodeType":"YulFunctionCall","src":"5642:32:13"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:13","nodeType":"YulIdentifier","src":"5633:5:13"}]},{"nativeSrc":"5691:30:13","nodeType":"YulAssignment","src":"5691:30:13","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:13","nodeType":"YulIdentifier","src":"5704:5:13"},{"name":"remainder","nativeSrc":"5711:9:13","nodeType":"YulIdentifier","src":"5711:9:13"}],"functionName":{"name":"sub","nativeSrc":"5700:3:13","nodeType":"YulIdentifier","src":"5700:3:13"},"nativeSrc":"5700:21:13","nodeType":"YulFunctionCall","src":"5700:21:13"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:13","nodeType":"YulIdentifier","src":"5691:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2228,"isOffset":false,"isSlot":false,"src":"5539:11:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"5667:5:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"5691:5:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"5704:5:13","valueSize":1},{"declaration":2240,"isOffset":false,"isSlot":false,"src":"5633:5:13","valueSize":1},{"declaration":2240,"isOffset":false,"isSlot":false,"src":"5646:5:13","valueSize":1},{"declaration":2261,"isOffset":false,"isSlot":false,"src":"5513:9:13","valueSize":1},{"declaration":2261,"isOffset":false,"isSlot":false,"src":"5656:9:13","valueSize":1},{"declaration":2261,"isOffset":false,"isSlot":false,"src":"5711:9:13","valueSize":1},{"declaration":2224,"isOffset":false,"isSlot":false,"src":"5533:1:13","valueSize":1},{"declaration":2226,"isOffset":false,"isSlot":false,"src":"5536:1:13","valueSize":1}],"id":2263,"nodeType":"InlineAssembly","src":"5435:300:13"},{"assignments":[2265],"declarations":[{"constant":false,"id":2265,"mutability":"mutable","name":"twos","nameLocation":"5947:4:13","nodeType":"VariableDeclaration","scope":2345,"src":"5939:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2272,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5954:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2268,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"5973:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:13"},{"AST":{"nativeSrc":"6008:362:13","nodeType":"YulBlock","src":"6008:362:13","statements":[{"nativeSrc":"6073:37:13","nodeType":"YulAssignment","src":"6073:37:13","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:13","nodeType":"YulIdentifier","src":"6092:11:13"},{"name":"twos","nativeSrc":"6105:4:13","nodeType":"YulIdentifier","src":"6105:4:13"}],"functionName":{"name":"div","nativeSrc":"6088:3:13","nodeType":"YulIdentifier","src":"6088:3:13"},"nativeSrc":"6088:22:13","nodeType":"YulFunctionCall","src":"6088:22:13"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:13","nodeType":"YulIdentifier","src":"6073:11:13"}]},{"nativeSrc":"6177:25:13","nodeType":"YulAssignment","src":"6177:25:13","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:13","nodeType":"YulIdentifier","src":"6190:5:13"},{"name":"twos","nativeSrc":"6197:4:13","nodeType":"YulIdentifier","src":"6197:4:13"}],"functionName":{"name":"div","nativeSrc":"6186:3:13","nodeType":"YulIdentifier","src":"6186:3:13"},"nativeSrc":"6186:16:13","nodeType":"YulFunctionCall","src":"6186:16:13"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:13","nodeType":"YulIdentifier","src":"6177:5:13"}]},{"nativeSrc":"6317:39:13","nodeType":"YulAssignment","src":"6317:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:13","nodeType":"YulLiteral","src":"6337:1:13","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:13","nodeType":"YulIdentifier","src":"6340:4:13"}],"functionName":{"name":"sub","nativeSrc":"6333:3:13","nodeType":"YulIdentifier","src":"6333:3:13"},"nativeSrc":"6333:12:13","nodeType":"YulFunctionCall","src":"6333:12:13"},{"name":"twos","nativeSrc":"6347:4:13","nodeType":"YulIdentifier","src":"6347:4:13"}],"functionName":{"name":"div","nativeSrc":"6329:3:13","nodeType":"YulIdentifier","src":"6329:3:13"},"nativeSrc":"6329:23:13","nodeType":"YulFunctionCall","src":"6329:23:13"},{"kind":"number","nativeSrc":"6354:1:13","nodeType":"YulLiteral","src":"6354:1:13","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:13","nodeType":"YulIdentifier","src":"6325:3:13"},"nativeSrc":"6325:31:13","nodeType":"YulFunctionCall","src":"6325:31:13"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:13","nodeType":"YulIdentifier","src":"6317:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2228,"isOffset":false,"isSlot":false,"src":"6073:11:13","valueSize":1},{"declaration":2228,"isOffset":false,"isSlot":false,"src":"6092:11:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"6177:5:13","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":false,"src":"6190:5:13","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"6105:4:13","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"6197:4:13","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"6317:4:13","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"6340:4:13","valueSize":1},{"declaration":2265,"isOffset":false,"isSlot":false,"src":"6347:4:13","valueSize":1}],"id":2273,"nodeType":"InlineAssembly","src":"5999:371:13"},{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2274,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6436:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"6445:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2276,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"6453:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"6436:21:13"},{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:13","nodeType":"VariableDeclaration","scope":2345,"src":"6775:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2288,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2283,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"6798:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:13"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2289,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7031:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7046:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2292,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7060:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"7031:36:13"},{"expression":{"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2297,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7100:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2299,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7115:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2300,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7129:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2304,"nodeType":"ExpressionStatement","src":"7100:36:13"},{"expression":{"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2305,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2307,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7185:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2308,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7199:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"nodeType":"ExpressionStatement","src":"7170:36:13"},{"expression":{"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2313,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7255:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2316,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2320,"nodeType":"ExpressionStatement","src":"7240:36:13"},{"expression":{"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2321,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7325:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2324,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2328,"nodeType":"ExpressionStatement","src":"7310:36:13"},{"expression":{"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2329,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7381:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"7396:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2332,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2336,"nodeType":"ExpressionStatement","src":"7381:36:13"},{"expression":{"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2337,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"7851:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"7860:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"7868:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2342,"nodeType":"ExpressionStatement","src":"7851:24:13"},{"expression":{"id":2343,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"7896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2232,"id":2344,"nodeType":"Return","src":"7889:13:13"}]}]},"documentation":{"id":2222,"nodeType":"StructuredDocumentation","src":"3485:313:13","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2347,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:13","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2224,"mutability":"mutable","name":"x","nameLocation":"3827:1:13","nodeType":"VariableDeclaration","scope":2347,"src":"3819:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"y","nameLocation":"3838:1:13","nodeType":"VariableDeclaration","scope":2347,"src":"3830:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2228,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:13","nodeType":"VariableDeclaration","scope":2347,"src":"3841:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:13"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"result","nameLocation":"3893:6:13","nodeType":"VariableDeclaration","scope":2347,"src":"3885:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2230,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:13"},"scope":3013,"src":"3803:4116:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"8161:192:13","statements":[{"assignments":[2363],"declarations":[{"constant":false,"id":2363,"mutability":"mutable","name":"result","nameLocation":"8179:6:13","nodeType":"VariableDeclaration","scope":2389,"src":"8171:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2369,"initialValue":{"arguments":[{"id":2365,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8195:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2366,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8198:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2367,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"8201:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2364,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2347,2390],"referencedDeclaration":2347,"src":"8188:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2371,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2357,"src":"8244:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":2370,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"8227:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1970_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2374,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"8264:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2375,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"8267:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2376,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"8270:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"8223:101:13","trueBody":{"id":2385,"nodeType":"Block","src":"8288:36:13","statements":[{"expression":{"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2381,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"8302:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2384,"nodeType":"ExpressionStatement","src":"8302:11:13"}]}},{"expression":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"8340:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2361,"id":2388,"nodeType":"Return","src":"8333:13:13"}]},"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"7925:121:13","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:13","nodeType":"FunctionDefinition","parameters":{"id":2358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2350,"mutability":"mutable","name":"x","nameLocation":"8075:1:13","nodeType":"VariableDeclaration","scope":2390,"src":"8067:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2352,"mutability":"mutable","name":"y","nameLocation":"8086:1:13","nodeType":"VariableDeclaration","scope":2390,"src":"8078:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:13","nodeType":"VariableDeclaration","scope":2390,"src":"8089:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2357,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:13","nodeType":"VariableDeclaration","scope":2390,"src":"8110:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2356,"nodeType":"UserDefinedTypeName","pathNode":{"id":2355,"name":"Rounding","nameLocations":["8110:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"8110:8:13"},"referencedDeclaration":1970,"src":"8110:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:13"},"returnParameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"8152:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:13"},"scope":3013,"src":"8051:302:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"8644:1585:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"8658:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2404,"nodeType":"IfStatement","src":"8654:45:13","trueBody":{"id":2403,"nodeType":"Block","src":"8666:33:13","statements":[{"expression":{"hexValue":"30","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2397,"id":2402,"nodeType":"Return","src":"8680:8:13"}]}},{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"result","nameLocation":"9386:6:13","nodeType":"VariableDeclaration","scope":2501,"src":"9378:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2415,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9406:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2669,2704],"referencedDeclaration":2669,"src":"9401:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:13"},{"id":2500,"nodeType":"UncheckedBlock","src":"9815:408:13","statements":[{"expression":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9839:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9849:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2418,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9858:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9862:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2426,"nodeType":"ExpressionStatement","src":"9839:35:13"},{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9888:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9898:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9907:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2430,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9911:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2433,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"9888:35:13"},{"expression":{"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2438,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9937:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2439,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9947:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"9956:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9960:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2448,"nodeType":"ExpressionStatement","src":"9937:35:13"},{"expression":{"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2449,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2450,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"9996:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10005:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2452,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10009:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2459,"nodeType":"ExpressionStatement","src":"9986:35:13"},{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2460,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10035:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10045:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2463,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10058:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2470,"nodeType":"ExpressionStatement","src":"10035:35:13"},{"expression":{"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10084:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10094:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10103:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2474,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10107:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2477,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2481,"nodeType":"ExpressionStatement","src":"10084:35:13"},{"expression":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2482,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10133:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2483,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10143:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10152:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2485,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10156:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2492,"nodeType":"ExpressionStatement","src":"10133:35:13"},{"expression":{"arguments":[{"id":2494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10193:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10201:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"10205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2493,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"10189:3:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2397,"id":2499,"nodeType":"Return","src":"10182:30:13"}]}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"8359:223:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:13","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"a","nameLocation":"8609:1:13","nodeType":"VariableDeclaration","scope":2502,"src":"8601:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2392,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:13"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2502,"src":"8635:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2395,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:13"},"scope":3013,"src":"8587:1642:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"10405:164:13","statements":[{"id":2535,"nodeType":"UncheckedBlock","src":"10415:148:13","statements":[{"assignments":[2514],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"result","nameLocation":"10447:6:13","nodeType":"VariableDeclaration","scope":2535,"src":"10439:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2518,"initialValue":{"arguments":[{"id":2516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"10461:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2515,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2502,2537],"referencedDeclaration":2502,"src":"10456:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"10484:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2521,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2508,"src":"10511:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":2520,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"10494:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1970_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"10524:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"10533:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2526,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"10542:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:13","trueExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2512,"id":2534,"nodeType":"Return","src":"10477:75:13"}]}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"10235:89:13","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:13","nodeType":"FunctionDefinition","parameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"a","nameLocation":"10351:1:13","nodeType":"VariableDeclaration","scope":2537,"src":"10343:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2508,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:13","nodeType":"VariableDeclaration","scope":2537,"src":"10354:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2507,"nodeType":"UserDefinedTypeName","pathNode":{"id":2506,"name":"Rounding","nameLocations":["10354:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"10354:8:13"},"referencedDeclaration":1970,"src":"10354:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:13"},"returnParameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"10396:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:13"},"scope":3013,"src":"10329:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"10760:922:13","statements":[{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"result","nameLocation":"10778:6:13","nodeType":"VariableDeclaration","scope":2668,"src":"10770:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2548,"initialValue":{"hexValue":"30","id":2547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:13"},{"id":2665,"nodeType":"UncheckedBlock","src":"10798:855:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"10826:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2563,"nodeType":"IfStatement","src":"10822:99:13","trueBody":{"id":2562,"nodeType":"Block","src":"10844:77:13","statements":[{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"10862:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"10862:13:13"},{"expression":{"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"10893:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2561,"nodeType":"ExpressionStatement","src":"10893:13:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"10938:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2578,"nodeType":"IfStatement","src":"10934:96:13","trueBody":{"id":2577,"nodeType":"Block","src":"10955:75:13","statements":[{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"10973:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ExpressionStatement","src":"10973:12:13"},{"expression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2573,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11003:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2576,"nodeType":"ExpressionStatement","src":"11003:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11047:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2593,"nodeType":"IfStatement","src":"11043:96:13","trueBody":{"id":2592,"nodeType":"Block","src":"11064:75:13","statements":[{"expression":{"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11082:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2587,"nodeType":"ExpressionStatement","src":"11082:12:13"},{"expression":{"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11112:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2591,"nodeType":"ExpressionStatement","src":"11112:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11156:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2608,"nodeType":"IfStatement","src":"11152:96:13","trueBody":{"id":2607,"nodeType":"Block","src":"11173:75:13","statements":[{"expression":{"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11191:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2602,"nodeType":"ExpressionStatement","src":"11191:12:13"},{"expression":{"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2603,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11221:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2606,"nodeType":"ExpressionStatement","src":"11221:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2609,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11265:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"nodeType":"IfStatement","src":"11261:93:13","trueBody":{"id":2622,"nodeType":"Block","src":"11281:73:13","statements":[{"expression":{"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11299:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2617,"nodeType":"ExpressionStatement","src":"11299:11:13"},{"expression":{"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2618,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11328:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2621,"nodeType":"ExpressionStatement","src":"11328:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11371:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2638,"nodeType":"IfStatement","src":"11367:93:13","trueBody":{"id":2637,"nodeType":"Block","src":"11387:73:13","statements":[{"expression":{"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11405:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2632,"nodeType":"ExpressionStatement","src":"11405:11:13"},{"expression":{"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11434:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2636,"nodeType":"ExpressionStatement","src":"11434:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11477:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2653,"nodeType":"IfStatement","src":"11473:93:13","trueBody":{"id":2652,"nodeType":"Block","src":"11493:73:13","statements":[{"expression":{"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11511:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2647,"nodeType":"ExpressionStatement","src":"11511:11:13"},{"expression":{"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11540:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2651,"nodeType":"ExpressionStatement","src":"11540:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"11583:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"11579:64:13","trueBody":{"id":2663,"nodeType":"Block","src":"11599:44:13","statements":[{"expression":{"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2659,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11617:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2662,"nodeType":"ExpressionStatement","src":"11617:11:13"}]}}]},{"expression":{"id":2666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"11669:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2667,"nodeType":"Return","src":"11662:13:13"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"10575:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:13","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"value","nameLocation":"10721:5:13","nodeType":"VariableDeclaration","scope":2669,"src":"10713:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:13"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"10751:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:13"},"scope":3013,"src":"10699:983:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2703,"nodeType":"Block","src":"11915:168:13","statements":[{"id":2702,"nodeType":"UncheckedBlock","src":"11925:152:13","statements":[{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"result","nameLocation":"11957:6:13","nodeType":"VariableDeclaration","scope":2702,"src":"11949:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2685,"initialValue":{"arguments":[{"id":2683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"11971:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2682,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2669,2704],"referencedDeclaration":2669,"src":"11966:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"11998:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2688,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"12025:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":2687,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"12008:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1970_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2691,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"12043:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"12052:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:13","trueExpression":{"hexValue":"31","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2699,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2679,"id":2701,"nodeType":"Return","src":"11991:75:13"}]}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"11688:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2704,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:13","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2672,"mutability":"mutable","name":"value","nameLocation":"11857:5:13","nodeType":"VariableDeclaration","scope":2704,"src":"11849:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:13","nodeType":"VariableDeclaration","scope":2704,"src":"11864:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2674,"nodeType":"UserDefinedTypeName","pathNode":{"id":2673,"name":"Rounding","nameLocations":["11864:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"11864:8:13"},"referencedDeclaration":1970,"src":"11864:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:13"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2704,"src":"11906:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:13"},"scope":3013,"src":"11835:248:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"12276:854:13","statements":[{"assignments":[2713],"declarations":[{"constant":false,"id":2713,"mutability":"mutable","name":"result","nameLocation":"12294:6:13","nodeType":"VariableDeclaration","scope":2832,"src":"12286:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2712,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2715,"initialValue":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:13"},{"id":2829,"nodeType":"UncheckedBlock","src":"12314:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12342:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2732,"nodeType":"IfStatement","src":"12338:103:13","trueBody":{"id":2731,"nodeType":"Block","src":"12361:80:13","statements":[{"expression":{"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2726,"nodeType":"ExpressionStatement","src":"12379:17:13"},{"expression":{"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12414:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2730,"nodeType":"ExpressionStatement","src":"12414:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12458:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2749,"nodeType":"IfStatement","src":"12454:103:13","trueBody":{"id":2748,"nodeType":"Block","src":"12477:80:13","statements":[{"expression":{"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12495:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2743,"nodeType":"ExpressionStatement","src":"12495:17:13"},{"expression":{"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2744,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12530:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2747,"nodeType":"ExpressionStatement","src":"12530:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12574:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2766,"nodeType":"IfStatement","src":"12570:103:13","trueBody":{"id":2765,"nodeType":"Block","src":"12593:80:13","statements":[{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12611:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ExpressionStatement","src":"12611:17:13"},{"expression":{"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12646:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2764,"nodeType":"ExpressionStatement","src":"12646:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12690:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2783,"nodeType":"IfStatement","src":"12686:100:13","trueBody":{"id":2782,"nodeType":"Block","src":"12708:78:13","statements":[{"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12726:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2777,"nodeType":"ExpressionStatement","src":"12726:16:13"},{"expression":{"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12760:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2781,"nodeType":"ExpressionStatement","src":"12760:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12803:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2800,"nodeType":"IfStatement","src":"12799:100:13","trueBody":{"id":2799,"nodeType":"Block","src":"12821:78:13","statements":[{"expression":{"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12839:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2794,"nodeType":"ExpressionStatement","src":"12839:16:13"},{"expression":{"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2795,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12873:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2798,"nodeType":"ExpressionStatement","src":"12873:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12916:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2817,"nodeType":"IfStatement","src":"12912:100:13","trueBody":{"id":2816,"nodeType":"Block","src":"12934:78:13","statements":[{"expression":{"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"12952:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2811,"nodeType":"ExpressionStatement","src":"12952:16:13"},{"expression":{"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"12986:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2815,"nodeType":"ExpressionStatement","src":"12986:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"13029:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2828,"nodeType":"IfStatement","src":"13025:66:13","trueBody":{"id":2827,"nodeType":"Block","src":"13047:44:13","statements":[{"expression":{"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"13065:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2826,"nodeType":"ExpressionStatement","src":"13065:11:13"}]}}]},{"expression":{"id":2830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2713,"src":"13117:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2711,"id":2831,"nodeType":"Return","src":"13110:13:13"}]},"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"12089:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:13","nodeType":"FunctionDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"value","nameLocation":"12237:5:13","nodeType":"VariableDeclaration","scope":2833,"src":"12229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2706,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:13"},"returnParameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"12267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2709,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:13"},"scope":3013,"src":"12214:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2867,"nodeType":"Block","src":"13365:170:13","statements":[{"id":2866,"nodeType":"UncheckedBlock","src":"13375:154:13","statements":[{"assignments":[2845],"declarations":[{"constant":false,"id":2845,"mutability":"mutable","name":"result","nameLocation":"13407:6:13","nodeType":"VariableDeclaration","scope":2866,"src":"13399:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2849,"initialValue":{"arguments":[{"id":2847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13422:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2846,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2833,2868],"referencedDeclaration":2833,"src":"13416:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"13449:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2852,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"13476:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":2851,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"13459:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1970_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"13495:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"13504:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:13","trueExpression":{"hexValue":"31","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2865,"nodeType":"Return","src":"13442:76:13"}]}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"13136:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:13","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"value","nameLocation":"13307:5:13","nodeType":"VariableDeclaration","scope":2868,"src":"13299:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:13","nodeType":"VariableDeclaration","scope":2868,"src":"13314:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"Rounding","nameLocations":["13314:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"13314:8:13"},"referencedDeclaration":1970,"src":"13314:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:13"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"13356:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:13"},"scope":3013,"src":"13284:251:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"13855:600:13","statements":[{"assignments":[2877],"declarations":[{"constant":false,"id":2877,"mutability":"mutable","name":"result","nameLocation":"13873:6:13","nodeType":"VariableDeclaration","scope":2954,"src":"13865:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2879,"initialValue":{"hexValue":"30","id":2878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:13"},{"id":2951,"nodeType":"UncheckedBlock","src":"13893:533:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"13921:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2894,"nodeType":"IfStatement","src":"13917:98:13","trueBody":{"id":2893,"nodeType":"Block","src":"13939:76:13","statements":[{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"13957:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"13957:13:13"},{"expression":{"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"13988:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2892,"nodeType":"ExpressionStatement","src":"13988:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14032:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2909,"nodeType":"IfStatement","src":"14028:95:13","trueBody":{"id":2908,"nodeType":"Block","src":"14049:74:13","statements":[{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14067:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"14067:12:13"},{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2904,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14097:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"14097:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14140:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2924,"nodeType":"IfStatement","src":"14136:95:13","trueBody":{"id":2923,"nodeType":"Block","src":"14157:74:13","statements":[{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14175:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"14175:12:13"},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"14205:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14248:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2939,"nodeType":"IfStatement","src":"14244:95:13","trueBody":{"id":2938,"nodeType":"Block","src":"14265:74:13","statements":[{"expression":{"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14283:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2933,"nodeType":"ExpressionStatement","src":"14283:12:13"},{"expression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14313:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2937,"nodeType":"ExpressionStatement","src":"14313:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"14356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2950,"nodeType":"IfStatement","src":"14352:64:13","trueBody":{"id":2949,"nodeType":"Block","src":"14372:44:13","statements":[{"expression":{"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14390:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2948,"nodeType":"ExpressionStatement","src":"14390:11:13"}]}}]},{"expression":{"id":2952,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"14442:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2875,"id":2953,"nodeType":"Return","src":"14435:13:13"}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"13541:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:13","nodeType":"FunctionDefinition","parameters":{"id":2872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"value","nameLocation":"13816:5:13","nodeType":"VariableDeclaration","scope":2955,"src":"13808:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2870,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:13"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2955,"src":"13846:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2873,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:13"},"scope":3013,"src":"13792:663:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2992,"nodeType":"Block","src":"14692:177:13","statements":[{"id":2991,"nodeType":"UncheckedBlock","src":"14702:161:13","statements":[{"assignments":[2967],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"result","nameLocation":"14734:6:13","nodeType":"VariableDeclaration","scope":2991,"src":"14726:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2971,"initialValue":{"arguments":[{"id":2969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"14750:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2968,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2955,2993],"referencedDeclaration":2955,"src":"14743:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"14777:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2974,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"14804:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":2973,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"14787:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1970_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2977,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"14823:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"14838:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:13","trueExpression":{"hexValue":"31","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2965,"id":2990,"nodeType":"Return","src":"14770:82:13"}]}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"14461:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2993,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:13","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"value","nameLocation":"14634:5:13","nodeType":"VariableDeclaration","scope":2993,"src":"14626:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:13","nodeType":"VariableDeclaration","scope":2993,"src":"14641:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2960,"nodeType":"UserDefinedTypeName","pathNode":{"id":2959,"name":"Rounding","nameLocations":["14641:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"14641:8:13"},"referencedDeclaration":1970,"src":"14641:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:13"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2993,"src":"14683:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:13"},"scope":3013,"src":"14610:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3011,"nodeType":"Block","src":"15067:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3004,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"15090:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}],"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3002,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:13","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3001,"id":3010,"nodeType":"Return","src":"15077:31:13"}]},"documentation":{"id":2994,"nodeType":"StructuredDocumentation","src":"14875:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3012,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:13","nodeType":"FunctionDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:13","nodeType":"VariableDeclaration","scope":3012,"src":"15019:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"},"typeName":{"id":2996,"nodeType":"UserDefinedTypeName","pathNode":{"id":2995,"name":"Rounding","nameLocations":["15019:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":1970,"src":"15019:8:13"},"referencedDeclaration":1970,"src":"15019:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1970","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:13"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"15061:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2999,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:13"},"scope":3013,"src":"14993:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3014,"src":"203:14914:13","usedErrors":[1965],"usedEvents":[]}],"src":"103:15015:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[3118]},"id":3119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3015,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":3016,"nodeType":"StructuredDocumentation","src":"135:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3118,"linearizedBaseContracts":[3118],"name":"SignedMath","nameLocation":"224:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3033,"nodeType":"Block","src":"376:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"393:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3027,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"397:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3030,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"405:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:14","trueExpression":{"id":3029,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"401:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3025,"id":3032,"nodeType":"Return","src":"386:20:14"}]},"documentation":{"id":3017,"nodeType":"StructuredDocumentation","src":"241:66:14","text":" @dev Returns the largest of two signed numbers."},"id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:14","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"a","nameLocation":"332:1:14","nodeType":"VariableDeclaration","scope":3034,"src":"325:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3018,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3021,"mutability":"mutable","name":"b","nameLocation":"342:1:14","nodeType":"VariableDeclaration","scope":3034,"src":"335:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3020,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:14"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"368:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3023,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:14"},"scope":3118,"src":"312:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3051,"nodeType":"Block","src":"555:37:14","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"572:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"584:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:14","trueExpression":{"id":3047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"580:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3043,"id":3050,"nodeType":"Return","src":"565:20:14"}]},"documentation":{"id":3035,"nodeType":"StructuredDocumentation","src":"419:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":3052,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:14","nodeType":"FunctionDefinition","parameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"a","nameLocation":"511:1:14","nodeType":"VariableDeclaration","scope":3052,"src":"504:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3036,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"b","nameLocation":"521:1:14","nodeType":"VariableDeclaration","scope":3052,"src":"514:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3038,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:14"},"returnParameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3052,"src":"547:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3041,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:14"},"scope":3118,"src":"491:101:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"797:162:14","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"x","nameLocation":"866:1:14","nodeType":"VariableDeclaration","scope":3095,"src":"859:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3062,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3076,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"871:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"875:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3068,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"882:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3069,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"886:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3071,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3077,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"911:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3082,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"931:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:14","typeDescriptions":{}}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3078,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:14","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"945:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3088,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"949:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3092,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3061,"id":3094,"nodeType":"Return","src":"904:48:14"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"598:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:14","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"a","nameLocation":"753:1:14","nodeType":"VariableDeclaration","scope":3096,"src":"746:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3054,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"b","nameLocation":"763:1:14","nodeType":"VariableDeclaration","scope":3096,"src":"756:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3056,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:14"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"789:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3059,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:14"},"scope":3118,"src":"729:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3116,"nodeType":"Block","src":"1103:158:14","statements":[{"id":3115,"nodeType":"UncheckedBlock","src":"1113:142:14","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3106,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1228:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:14","subExpression":{"id":3110,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1242:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:14","trueExpression":{"id":3109,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"1237:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:14","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3103,"id":3114,"nodeType":"Return","src":"1213:31:14"}]}]},"documentation":{"id":3097,"nodeType":"StructuredDocumentation","src":"965:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":3117,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:14","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3099,"mutability":"mutable","name":"n","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":3117,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3098,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:14"},"returnParameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3117,"src":"1094:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:14"},"scope":3118,"src":"1048:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3119,"src":"216:1047:14","usedErrors":[],"usedEvents":[]}],"src":"109:1155:14"},"id":14},"account-abstraction/contracts/core/BaseAccount.sol":{"ast":{"absolutePath":"account-abstraction/contracts/core/BaseAccount.sol","exportedSymbols":{"BaseAccount":[3257],"IAccount":[3810],"IAggregator":[3844],"IEntryPoint":[4028],"INonceManager":[4047],"IStakeManager":[4151],"PackedUserOperation":[4173],"UserOperationLib":[3793],"calldataKeccak":[3418],"min":[3436]},"id":3258,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3120,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:15"},{"absolutePath":"account-abstraction/contracts/interfaces/IAccount.sol","file":"../interfaces/IAccount.sol","id":3121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3258,"sourceUnit":3811,"src":"145:36:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":3122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3258,"sourceUnit":4029,"src":"182:39:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":3123,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3258,"sourceUnit":3794,"src":"222:32:15","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3125,"name":"IAccount","nameLocations":["522:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":3810,"src":"522:8:15"},"id":3126,"nodeType":"InheritanceSpecifier","src":"522:8:15"}],"canonicalName":"BaseAccount","contractDependencies":[],"contractKind":"contract","documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"256:232:15","text":" Basic account implementation.\n This contract provides the basic logic for implementing the IAccount interface - validateUserOp\n Specific account implementation should inherit it and provide the account-specific logic."},"fullyImplemented":false,"id":3257,"linearizedBaseContracts":[3257,3810],"name":"BaseAccount","nameLocation":"507:11:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3130,"libraryName":{"id":3127,"name":"UserOperationLib","nameLocations":["543:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":3793,"src":"543:16:15"},"nodeType":"UsingForDirective","src":"537:47:15","typeName":{"id":3129,"nodeType":"UserDefinedTypeName","pathNode":{"id":3128,"name":"PackedUserOperation","nameLocations":["564:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"564:19:15"},"referencedDeclaration":4173,"src":"564:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}}},{"body":{"id":3146,"nodeType":"Block","src":"829:63:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3141,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"876:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaseAccount_$3257","typeString":"contract BaseAccount"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaseAccount_$3257","typeString":"contract BaseAccount"}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"868:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3139,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:15","typeDescriptions":{}}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"868:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"883:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3136,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"846:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4028_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"846:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"859:8:15","memberName":"getNonce","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"846:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint192_$returns$_t_uint256_$","typeString":"function (address,uint192) view external returns (uint256)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"846:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3135,"id":3145,"nodeType":"Return","src":"839:46:15"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"590:176:15","text":" Return the account nonce.\n This method returns the next sequential nonce.\n For a nonce of a specific key, use `entrypoint.getNonce(account, key)`"},"functionSelector":"d087d288","id":3147,"implemented":true,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"780:8:15","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[],"src":"788:2:15"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3147,"src":"820:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3133,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:15"},"scope":3257,"src":"771:121:15","stateMutability":"view","virtual":true,"visibility":"public"},{"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"898:137:15","text":" Return the entryPoint used by this account.\n Subclass should return the current entryPoint used by this account."},"functionSelector":"b0d691fe","id":3154,"implemented":false,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1049:10:15","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"1059:2:15"},"returnParameters":{"id":3153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3154,"src":"1091:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":3151,"nodeType":"UserDefinedTypeName","pathNode":{"id":3150,"name":"IEntryPoint","nameLocations":["1091:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1091:11:15"},"referencedDeclaration":4028,"src":"1091:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1090:13:15"},"scope":3257,"src":"1040:64:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3809],"body":{"id":3187,"nodeType":"Block","src":"1338:186:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3168,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"1348:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1348:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3170,"nodeType":"ExpressionStatement","src":"1348:24:15"},{"expression":{"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3171,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"1382:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3173,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1418:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":3174,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"1426:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3172,"name":"_validateSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"1399:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$_t_bytes32_$returns$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32) returns (uint256)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1399:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1382:55:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3177,"nodeType":"ExpressionStatement","src":"1382:55:15"},{"expression":{"arguments":[{"expression":{"id":3179,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3158,"src":"1462:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"1462:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"_validateNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"1447:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1447:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"ExpressionStatement","src":"1447:28:15"},{"expression":{"arguments":[{"id":3184,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"1497:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3183,"name":"_payPrefund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"1485:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1485:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3186,"nodeType":"ExpressionStatement","src":"1485:32:15"}]},"documentation":{"id":3155,"nodeType":"StructuredDocumentation","src":"1110:24:15","text":"@inheritdoc IAccount"},"functionSelector":"19822f7c","id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"1148:14:15","nodeType":"FunctionDefinition","overrides":{"id":3164,"nodeType":"OverrideSpecifier","overrides":[],"src":"1296:8:15"},"parameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"userOp","nameLocation":"1201:6:15","nodeType":"VariableDeclaration","scope":3188,"src":"1172:35:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3157,"nodeType":"UserDefinedTypeName","pathNode":{"id":3156,"name":"PackedUserOperation","nameLocations":["1172:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"1172:19:15"},"referencedDeclaration":4173,"src":"1172:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"userOpHash","nameLocation":"1225:10:15","nodeType":"VariableDeclaration","scope":3188,"src":"1217:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3159,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1217:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"1253:19:15","nodeType":"VariableDeclaration","scope":3188,"src":"1245:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1162:116:15"},"returnParameters":{"id":3167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3166,"mutability":"mutable","name":"validationData","nameLocation":"1322:14:15","nodeType":"VariableDeclaration","scope":3188,"src":"1314:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1313:24:15"},"scope":3257,"src":"1139:385:15","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"body":{"id":3204,"nodeType":"Block","src":"1661:127:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1692:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1696:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1692:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3197,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"1714:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4028_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1714:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:15","typeDescriptions":{}}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1692:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","id":3201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1741:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""},"value":"account: not from EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","typeString":"literal_string \"account: not from EntryPoint\""}],"id":3192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1671:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1671:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3203,"nodeType":"ExpressionStatement","src":"1671:110:15"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"1530:70:15","text":" Ensure the request comes from the known entrypoint."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"1614:22:15","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"1636:2:15"},"returnParameters":{"id":3191,"nodeType":"ParameterList","parameters":[],"src":"1661:0:15"},"scope":3257,"src":"1605:183:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"1794:1106:15","text":" Validate the signature is valid for this message.\n @param userOp          - Validate the userOp.signature field.\n @param userOpHash      - Convenient field: the hash of the request, to check the signature against.\n                          (also hashes the entrypoint and chain id)\n @return validationData - Signature and time-range of this operation.\n                          <20-byte> aggregatorOrSigFail - 0 for valid signature, 1 to mark signature failure,\n                                    otherwise, an address of an aggregator contract.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          If the account doesn't use time-range, it is enough to return\n                          SIG_VALIDATION_FAILED value (1) for signature failure.\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"id":3216,"implemented":false,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"2914:18:15","nodeType":"FunctionDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"userOp","nameLocation":"2971:6:15","nodeType":"VariableDeclaration","scope":3216,"src":"2942:35:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3208,"nodeType":"UserDefinedTypeName","pathNode":{"id":3207,"name":"PackedUserOperation","nameLocations":["2942:19:15"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"2942:19:15"},"referencedDeclaration":4173,"src":"2942:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"userOpHash","nameLocation":"2995:10:15","nodeType":"VariableDeclaration","scope":3216,"src":"2987:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2987:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2932:79:15"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"validationData","nameLocation":"3046:14:15","nodeType":"VariableDeclaration","scope":3216,"src":"3038:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3038:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3037:24:15"},"scope":3257,"src":"2905:157:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3222,"nodeType":"Block","src":"3774:7:15","statements":[]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"3068:640:15","text":" Validate the nonce of the UserOperation.\n This method may validate the nonce requirement of this account.\n e.g.\n To limit the nonce to use sequenced UserOps only (no \"out of order\" UserOps):\n      `require(nonce < type(uint64).max)`\n For a hypothetical account that *requires* the nonce to be out-of-order:\n      `require(nonce & type(uint64).max == 0)`\n The actual nonce uniqueness is managed by the EntryPoint, and thus no other\n action is needed by the account itself.\n @param nonce to validate\n solhint-disable-next-line no-empty-blocks"},"id":3223,"implemented":true,"kind":"function","modifiers":[],"name":"_validateNonce","nameLocation":"3722:14:15","nodeType":"FunctionDefinition","parameters":{"id":3220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"nonce","nameLocation":"3745:5:15","nodeType":"VariableDeclaration","scope":3223,"src":"3737:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3736:15:15"},"returnParameters":{"id":3221,"nodeType":"ParameterList","parameters":[],"src":"3774:0:15"},"scope":3257,"src":"3713:68:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3255,"nodeType":"Block","src":"4423:315:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4437:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4460:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4437:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3254,"nodeType":"IfStatement","src":"4433:299:15","trueBody":{"id":3253,"nodeType":"Block","src":"4463:269:15","statements":[{"assignments":[3233,null],"declarations":[{"constant":false,"id":3233,"mutability":"mutable","name":"success","nameLocation":"4483:7:15","nodeType":"VariableDeclaration","scope":3253,"src":"4478:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3232,"name":"bool","nodeType":"ElementaryTypeName","src":"4478:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3249,"initialValue":{"arguments":[{"hexValue":"","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4619:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":3236,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4504:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4508:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4504:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4496:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"4496:8:15","stateMutability":"payable","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4496:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4516:4:15","memberName":"call","nodeType":"MemberAccess","src":"4496:24:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value","gas"],"nodeType":"FunctionCallOptions","options":[{"id":3240,"name":"missingAccountFunds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4545:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4592:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4592:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4587:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4587:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4601:3:15","memberName":"max","nodeType":"MemberAccess","src":"4587:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4496:122:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gasvalue","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4496:126:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4477:145:15"},{"expression":{"components":[{"id":3250,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"4637:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4636:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3252,"nodeType":"ExpressionStatement","src":"4636:9:15"}]}}]},"documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"3787:564:15","text":" Sends to the entrypoint (msg.sender) the missing funds for this transaction.\n SubClass MAY override this method for better funds management\n (e.g. send to the entryPoint more than the minimum required, so that in future transactions\n it will not be required to send again).\n @param missingAccountFunds - The minimum value this method should send the entrypoint.\n                              This value MAY be zero, in case there is enough deposit,\n                              or the userOp has a paymaster."},"id":3256,"implemented":true,"kind":"function","modifiers":[],"name":"_payPrefund","nameLocation":"4365:11:15","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"4385:19:15","nodeType":"VariableDeclaration","scope":3256,"src":"4377:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4376:29:15"},"returnParameters":{"id":3228,"nodeType":"ParameterList","parameters":[],"src":"4423:0:15"},"scope":3257,"src":"4356:382:15","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":3258,"src":"489:4251:15","usedErrors":[],"usedEvents":[]}],"src":"36:4705:15"},"id":15},"account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[3262],"SIG_VALIDATION_SUCCESS":[3265],"ValidationData":[3273],"_packValidationData":[3370,3408],"_parseValidationData":[3333],"calldataKeccak":[3418],"min":[3436]},"id":3437,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3259,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:16"},{"constant":true,"id":3262,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"281:21:16","nodeType":"VariableDeclaration","scope":3437,"src":"264:42:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"305:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":3265,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"440:22:16","nodeType":"VariableDeclaration","scope":3437,"src":"423:43:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":3264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"465:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":3266,"nodeType":"StructuredDocumentation","src":"470:640:16","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":3273,"members":[{"constant":false,"id":3268,"mutability":"mutable","name":"aggregator","nameLocation":"1147:10:16","nodeType":"VariableDeclaration","scope":3273,"src":"1139:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"validAfter","nameLocation":"1170:10:16","nodeType":"VariableDeclaration","scope":3273,"src":"1163:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3269,"name":"uint48","nodeType":"ElementaryTypeName","src":"1163:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"validUntil","nameLocation":"1193:10:16","nodeType":"VariableDeclaration","scope":3273,"src":"1186:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3271,"name":"uint48","nodeType":"ElementaryTypeName","src":"1186:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1118:14:16","nodeType":"StructDefinition","scope":3437,"src":"1111:95:16","visibility":"public"},{"body":{"id":3332,"nodeType":"Block","src":"1472:314:16","statements":[{"assignments":[3283],"declarations":[{"constant":false,"id":3283,"mutability":"mutable","name":"aggregator","nameLocation":"1486:10:16","nodeType":"VariableDeclaration","scope":3332,"src":"1478:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3291,"initialValue":{"arguments":[{"arguments":[{"id":3288,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"1515:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1507:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3286,"name":"uint160","nodeType":"ElementaryTypeName","src":"1507:7:16","typeDescriptions":{}}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1499:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:16","typeDescriptions":{}}},"id":3290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1478:53:16"},{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"validUntil","nameLocation":"1544:10:16","nodeType":"VariableDeclaration","scope":3332,"src":"1537:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3292,"name":"uint48","nodeType":"ElementaryTypeName","src":"1537:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3300,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3296,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"1564:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1582:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1564:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1557:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3294,"name":"uint48","nodeType":"ElementaryTypeName","src":"1557:6:16","typeDescriptions":{}}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1557:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1537:49:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1596:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1596:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3313,"nodeType":"IfStatement","src":"1592:67:16","trueBody":{"id":3312,"nodeType":"Block","src":"1613:46:16","statements":[{"expression":{"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3304,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1623:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":3307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1641:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3306,"name":"uint48","nodeType":"ElementaryTypeName","src":"1641:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1636:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1649:3:16","memberName":"max","nodeType":"MemberAccess","src":"1636:16:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1623:29:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":3311,"nodeType":"ExpressionStatement","src":"1623:29:16"}]}},{"assignments":[3315],"declarations":[{"constant":false,"id":3315,"mutability":"mutable","name":"validAfter","nameLocation":"1671:10:16","nodeType":"VariableDeclaration","scope":3332,"src":"1664:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3314,"name":"uint48","nodeType":"ElementaryTypeName","src":"1664:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":3325,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"1691:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1710:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1709:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1691:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1684:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3316,"name":"uint48","nodeType":"ElementaryTypeName","src":"1684:6:16","typeDescriptions":{}}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1664:56:16"},{"expression":{"arguments":[{"id":3327,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1748:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3328,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3315,"src":"1760:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":3329,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"1772:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3326,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"1733:14:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$3273_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1733:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":3281,"id":3331,"nodeType":"Return","src":"1726:57:16"}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"1208:161:16","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":3333,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1379:20:16","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"validationData","nameLocation":"1413:14:16","nodeType":"VariableDeclaration","scope":3333,"src":"1405:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:30:16"},"returnParameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3280,"mutability":"mutable","name":"data","nameLocation":"1466:4:16","nodeType":"VariableDeclaration","scope":3333,"src":"1444:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3279,"nodeType":"UserDefinedTypeName","pathNode":{"id":3278,"name":"ValidationData","nameLocations":["1444:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":3273,"src":"1444:14:16"},"referencedDeclaration":3273,"src":"1444:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1443:28:16"},"scope":3437,"src":"1370:416:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3369,"nodeType":"Block","src":"1982:143:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3344,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2011:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData memory"}},"id":3345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2016:10:16","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":3268,"src":"2011:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2003:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3342,"name":"uint160","nodeType":"ElementaryTypeName","src":"2003:7:16","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3349,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2047:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData memory"}},"id":3350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2052:10:16","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":3272,"src":"2047:15:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2039:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:16","typeDescriptions":{}}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2039:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2039:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3354,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2038:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2003:68:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3358,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"2091:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData memory"}},"id":3359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2096:10:16","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":3270,"src":"2091:15:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2083:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:16","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2112:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2111:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2083:38:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2082:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2003:119:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3341,"id":3368,"nodeType":"Return","src":"1988:134:16"}]},"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"1788:107:16","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":3370,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"1905:19:16","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"data","nameLocation":"1952:4:16","nodeType":"VariableDeclaration","scope":3370,"src":"1930:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":3336,"nodeType":"UserDefinedTypeName","pathNode":{"id":3335,"name":"ValidationData","nameLocations":["1930:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":3273,"src":"1930:14:16"},"referencedDeclaration":3273,"src":"1930:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$3273_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1924:34:16"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3370,"src":"1973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1972:9:16"},"scope":3437,"src":"1896:229:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"2568:128:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":3382,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"2590:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2590:17:16","trueExpression":{"hexValue":"31","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2602:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3386,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2589:19:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3389,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2628:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2620:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:16","typeDescriptions":{}}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2643:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2620:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2619:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:58:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3397,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"2667:10:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2659:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3395,"name":"uint256","nodeType":"ElementaryTypeName","src":"2659:7:16","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2683:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2689:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2683:8:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":3402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2682:10:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2659:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2658:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:104:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3381,"id":3406,"nodeType":"Return","src":"2574:119:16"}]},"documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"2127:320:16","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":3408,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2457:19:16","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"sigFailed","nameLocation":"2487:9:16","nodeType":"VariableDeclaration","scope":3408,"src":"2482:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3372,"name":"bool","nodeType":"ElementaryTypeName","src":"2482:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"validUntil","nameLocation":"2509:10:16","nodeType":"VariableDeclaration","scope":3408,"src":"2502:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3374,"name":"uint48","nodeType":"ElementaryTypeName","src":"2502:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"validAfter","nameLocation":"2532:10:16","nodeType":"VariableDeclaration","scope":3408,"src":"2525:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3376,"name":"uint48","nodeType":"ElementaryTypeName","src":"2525:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2476:68:16"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3408,"src":"2559:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2558:9:16"},"scope":3437,"src":"2448:248:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3417,"nodeType":"Block","src":"2951:209:16","statements":[{"AST":{"nativeSrc":"2986:168:16","nodeType":"YulBlock","src":"2986:168:16","statements":[{"nativeSrc":"3000:22:16","nodeType":"YulVariableDeclaration","src":"3000:22:16","value":{"arguments":[{"kind":"number","nativeSrc":"3017:4:16","nodeType":"YulLiteral","src":"3017:4:16","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3011:5:16","nodeType":"YulIdentifier","src":"3011:5:16"},"nativeSrc":"3011:11:16","nodeType":"YulFunctionCall","src":"3011:11:16"},"variables":[{"name":"mem","nativeSrc":"3004:3:16","nodeType":"YulTypedName","src":"3004:3:16","type":""}]},{"nativeSrc":"3035:22:16","nodeType":"YulVariableDeclaration","src":"3035:22:16","value":{"name":"data.length","nativeSrc":"3046:11:16","nodeType":"YulIdentifier","src":"3046:11:16"},"variables":[{"name":"len","nativeSrc":"3039:3:16","nodeType":"YulTypedName","src":"3039:3:16","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3083:3:16","nodeType":"YulIdentifier","src":"3083:3:16"},{"name":"data.offset","nativeSrc":"3088:11:16","nodeType":"YulIdentifier","src":"3088:11:16"},{"name":"len","nativeSrc":"3101:3:16","nodeType":"YulIdentifier","src":"3101:3:16"}],"functionName":{"name":"calldatacopy","nativeSrc":"3070:12:16","nodeType":"YulIdentifier","src":"3070:12:16"},"nativeSrc":"3070:35:16","nodeType":"YulFunctionCall","src":"3070:35:16"},"nativeSrc":"3070:35:16","nodeType":"YulExpressionStatement","src":"3070:35:16"},{"nativeSrc":"3118:26:16","nodeType":"YulAssignment","src":"3118:26:16","value":{"arguments":[{"name":"mem","nativeSrc":"3135:3:16","nodeType":"YulIdentifier","src":"3135:3:16"},{"name":"len","nativeSrc":"3140:3:16","nodeType":"YulIdentifier","src":"3140:3:16"}],"functionName":{"name":"keccak256","nativeSrc":"3125:9:16","nodeType":"YulIdentifier","src":"3125:9:16"},"nativeSrc":"3125:19:16","nodeType":"YulFunctionCall","src":"3125:19:16"},"variableNames":[{"name":"ret","nativeSrc":"3118:3:16","nodeType":"YulIdentifier","src":"3118:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3411,"isOffset":false,"isSlot":false,"src":"3046:11:16","suffix":"length","valueSize":1},{"declaration":3411,"isOffset":true,"isSlot":false,"src":"3088:11:16","suffix":"offset","valueSize":1},{"declaration":3414,"isOffset":false,"isSlot":false,"src":"3118:3:16","valueSize":1}],"flags":["memory-safe"],"id":3416,"nodeType":"InlineAssembly","src":"2961:193:16"}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"2698:176:16","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":3418,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"2888:14:16","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"data","nameLocation":"2918:4:16","nodeType":"VariableDeclaration","scope":3418,"src":"2903:19:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3410,"name":"bytes","nodeType":"ElementaryTypeName","src":"2903:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2902:21:16"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"ret","nameLocation":"2946:3:16","nodeType":"VariableDeclaration","scope":3418,"src":"2938:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2937:13:16"},"scope":3437,"src":"2879:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3435,"nodeType":"Block","src":"3321:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3338:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3429,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"3342:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3338:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"3350:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3338:13:16","trueExpression":{"id":3431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"3346:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3427,"id":3434,"nodeType":"Return","src":"3331:20:16"}]},"documentation":{"id":3419,"nodeType":"StructuredDocumentation","src":"3163:95:16","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":3436,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3272:3:16","nodeType":"FunctionDefinition","parameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3421,"mutability":"mutable","name":"a","nameLocation":"3284:1:16","nodeType":"VariableDeclaration","scope":3436,"src":"3276:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3423,"mutability":"mutable","name":"b","nameLocation":"3295:1:16","nodeType":"VariableDeclaration","scope":3436,"src":"3287:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3275:22:16"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3436,"src":"3312:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3312:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3311:9:16"},"scope":3437,"src":"3263:95:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3323:16"},"id":16},"account-abstraction/contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"account-abstraction/contracts/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[4173],"UserOperationLib":[3793],"calldataKeccak":[3418],"min":[3436]},"id":3794,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3438,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:17"},{"absolutePath":"account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":3439,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3794,"sourceUnit":4174,"src":"104:47:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","id":3442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3794,"sourceUnit":3437,"src":"152:50:17","symbolAliases":[{"foreign":{"id":3440,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"160:14:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3441,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"176:3:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":3443,"nodeType":"StructuredDocumentation","src":"204:77:17","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":3793,"linearizedBaseContracts":[3793],"name":"UserOperationLib","nameLocation":"290:16:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":3446,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"338:31:17","nodeType":"VariableDeclaration","scope":3793,"src":"314:60:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3444,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"372:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":3449,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"404:27:17","nodeType":"VariableDeclaration","scope":3793,"src":"380:56:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:2:17","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":3452,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"466:21:17","nodeType":"VariableDeclaration","scope":3793,"src":"442:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3450,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"490:2:17","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":3473,"nodeType":"Block","src":"708:221:17","statements":[{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"data","nameLocation":"726:4:17","nodeType":"VariableDeclaration","scope":3473,"src":"718:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3463,"nodeType":"VariableDeclarationStatement","src":"718:12:17"},{"AST":{"nativeSrc":"832:52:17","nodeType":"YulBlock","src":"832:52:17","statements":[{"nativeSrc":"846:28:17","nodeType":"YulAssignment","src":"846:28:17","value":{"arguments":[{"name":"userOp","nativeSrc":"867:6:17","nodeType":"YulIdentifier","src":"867:6:17"}],"functionName":{"name":"calldataload","nativeSrc":"854:12:17","nodeType":"YulIdentifier","src":"854:12:17"},"nativeSrc":"854:20:17","nodeType":"YulFunctionCall","src":"854:20:17"},"variableNames":[{"name":"data","nativeSrc":"846:4:17","nodeType":"YulIdentifier","src":"846:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3462,"isOffset":false,"isSlot":false,"src":"846:4:17","valueSize":1},{"declaration":3456,"isOffset":false,"isSlot":false,"src":"867:6:17","valueSize":1}],"id":3464,"nodeType":"InlineAssembly","src":"823:61:17"},{"expression":{"arguments":[{"arguments":[{"id":3469,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"916:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"908:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3467,"name":"uint160","nodeType":"ElementaryTypeName","src":"908:7:17","typeDescriptions":{}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"908:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"900:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3465,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:17","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3460,"id":3472,"nodeType":"Return","src":"893:29:17"}]},"documentation":{"id":3453,"nodeType":"StructuredDocumentation","src":"498:103:17","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":3474,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"615:9:17","nodeType":"FunctionDefinition","parameters":{"id":3457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"userOp","nameLocation":"663:6:17","nodeType":"VariableDeclaration","scope":3474,"src":"634:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3455,"nodeType":"UserDefinedTypeName","pathNode":{"id":3454,"name":"PackedUserOperation","nameLocations":["634:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"634:19:17"},"referencedDeclaration":4173,"src":"634:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"624:51:17"},"returnParameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3474,"src":"699:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3458,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:9:17"},"scope":3793,"src":"606:323:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3508,"nodeType":"Block","src":"1235:395:17","statements":[{"id":3507,"nodeType":"UncheckedBlock","src":"1245:379:17","statements":[{"assignments":[3484,3486],"declarations":[{"constant":false,"id":3484,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1278:20:17","nodeType":"VariableDeclaration","scope":3507,"src":"1270:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1308:12:17","nodeType":"VariableDeclaration","scope":3507,"src":"1300:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3491,"initialValue":{"arguments":[{"expression":{"id":3488,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1336:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1343:7:17","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"1336:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3487,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"1324:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1269:82:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"1369:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3493,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1385:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1369:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"nodeType":"IfStatement","src":"1365:173:17","trueBody":{"id":3497,"nodeType":"Block","src":"1407:131:17","statements":[{"expression":{"id":3495,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"1511:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3482,"id":3496,"nodeType":"Return","src":"1504:19:17"}]}},{"expression":{"arguments":[{"id":3500,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"1562:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"1576:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3502,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1599:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1605:7:17","memberName":"basefee","nodeType":"MemberAccess","src":"1599:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1576:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"1558:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1558:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3482,"id":3506,"nodeType":"Return","src":"1551:62:17"}]}]},"documentation":{"id":3475,"nodeType":"StructuredDocumentation","src":"935:194:17","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"1143:8:17","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"userOp","nameLocation":"1190:6:17","nodeType":"VariableDeclaration","scope":3509,"src":"1161:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3477,"nodeType":"UserDefinedTypeName","pathNode":{"id":3476,"name":"PackedUserOperation","nameLocations":["1161:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"1161:19:17"},"referencedDeclaration":4173,"src":"1161:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1151:51:17"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"1226:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:9:17"},"scope":3793,"src":"1134:496:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3577,"nodeType":"Block","src":"1868:661:17","statements":[{"assignments":[3519],"declarations":[{"constant":false,"id":3519,"mutability":"mutable","name":"sender","nameLocation":"1886:6:17","nodeType":"VariableDeclaration","scope":3577,"src":"1878:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3518,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3523,"initialValue":{"arguments":[{"id":3521,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1905:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":3520,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"1895:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$returns$_t_address_$","typeString":"function (struct PackedUserOperation calldata) pure returns (address)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1878:34:17"},{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"nonce","nameLocation":"1930:5:17","nodeType":"VariableDeclaration","scope":3577,"src":"1922:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3528,"initialValue":{"expression":{"id":3526,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1938:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:5:17","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4158,"src":"1938:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1922:28:17"},{"assignments":[3530],"declarations":[{"constant":false,"id":3530,"mutability":"mutable","name":"hashInitCode","nameLocation":"1968:12:17","nodeType":"VariableDeclaration","scope":3577,"src":"1960:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1960:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3535,"initialValue":{"arguments":[{"expression":{"id":3532,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"1998:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2005:8:17","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":4160,"src":"1998:15:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3531,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"1983:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1960:54:17"},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"hashCallData","nameLocation":"2032:12:17","nodeType":"VariableDeclaration","scope":3577,"src":"2024:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2024:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3542,"initialValue":{"arguments":[{"expression":{"id":3539,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2062:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2069:8:17","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":4162,"src":"2062:15:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3538,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2047:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2024:54:17"},{"assignments":[3544],"declarations":[{"constant":false,"id":3544,"mutability":"mutable","name":"accountGasLimits","nameLocation":"2096:16:17","nodeType":"VariableDeclaration","scope":3577,"src":"2088:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3547,"initialValue":{"expression":{"id":3545,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2115:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2122:16:17","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":4164,"src":"2115:23:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2088:50:17"},{"assignments":[3549],"declarations":[{"constant":false,"id":3549,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2156:18:17","nodeType":"VariableDeclaration","scope":3577,"src":"2148:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3552,"initialValue":{"expression":{"id":3550,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2177:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:18:17","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":4166,"src":"2177:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:54:17"},{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"gasFees","nameLocation":"2220:7:17","nodeType":"VariableDeclaration","scope":3577,"src":"2212:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2212:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3557,"initialValue":{"expression":{"id":3555,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2230:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2237:7:17","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"2230:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2212:32:17"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2262:20:17","nodeType":"VariableDeclaration","scope":3577,"src":"2254:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3558,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3564,"initialValue":{"arguments":[{"expression":{"id":3561,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"2300:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:16:17","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":4170,"src":"2300:23:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3560,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2285:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2254:70:17"},{"expression":{"arguments":[{"id":3567,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3519,"src":"2366:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3568,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2374:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3569,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"2393:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3570,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"2407:12:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3571,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"2433:16:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3572,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"2451:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3573,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"2471:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3574,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"2492:20:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3565,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2342:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2346:6:17","memberName":"encode","nodeType":"MemberAccess","src":"2342:10:17","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:180:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3517,"id":3576,"nodeType":"Return","src":"2335:187:17"}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"1636:119:17","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":3578,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1769:6:17","nodeType":"FunctionDefinition","parameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"userOp","nameLocation":"1814:6:17","nodeType":"VariableDeclaration","scope":3578,"src":"1785:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3512,"nodeType":"UserDefinedTypeName","pathNode":{"id":3511,"name":"PackedUserOperation","nameLocations":["1785:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"1785:19:17"},"referencedDeclaration":4173,"src":"1785:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1775:51:17"},"returnParameters":{"id":3517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"ret","nameLocation":"1863:3:17","nodeType":"VariableDeclaration","scope":3578,"src":"1850:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3515,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:18:17"},"scope":3793,"src":"1760:769:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"2642:76:17","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"id":3591,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2676:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2668:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3589,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2668:7:17","typeDescriptions":{}}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2660:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3587,"name":"uint128","nodeType":"ElementaryTypeName","src":"2660:7:17","typeDescriptions":{}}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":3598,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"2702:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2694:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:17","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2686:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3594,"name":"uint128","nodeType":"ElementaryTypeName","src":"2686:7:17","typeDescriptions":{}}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2686:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2659:52:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"functionReturnParameters":3586,"id":3602,"nodeType":"Return","src":"2652:59:17"}]},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2544:11:17","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"packed","nameLocation":"2573:6:17","nodeType":"VariableDeclaration","scope":3604,"src":"2565:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2565:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2555:30:17"},"returnParameters":{"id":3586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"high128","nameLocation":"2617:7:17","nodeType":"VariableDeclaration","scope":3604,"src":"2609:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2609:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3585,"mutability":"mutable","name":"low128","nameLocation":"2634:6:17","nodeType":"VariableDeclaration","scope":3604,"src":"2626:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3584,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2608:33:17"},"scope":3793,"src":"2535:183:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"2851:46:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3613,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3606,"src":"2876:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:17","typeDescriptions":{}}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2887:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2868:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3610,"id":3617,"nodeType":"Return","src":"2861:29:17"}]},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2789:13:17","nodeType":"FunctionDefinition","parameters":{"id":3607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3606,"mutability":"mutable","name":"packed","nameLocation":"2811:6:17","nodeType":"VariableDeclaration","scope":3619,"src":"2803:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2803:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:16:17"},"returnParameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"2842:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"2842:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:9:17"},"scope":3793,"src":"2780:117:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3634,"nodeType":"Block","src":"3029:48:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3630,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"3062:6:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:17","typeDescriptions":{}}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3046:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3626,"name":"uint128","nodeType":"ElementaryTypeName","src":"3046:7:17","typeDescriptions":{}}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3625,"id":3633,"nodeType":"Return","src":"3039:31:17"}]},"id":3635,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2968:12:17","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"packed","nameLocation":"2989:6:17","nodeType":"VariableDeclaration","scope":3635,"src":"2981:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2981:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2980:16:17"},"returnParameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3635,"src":"3020:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3019:9:17"},"scope":3793,"src":"2959:118:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3648,"nodeType":"Block","src":"3192:53:17","statements":[{"expression":{"arguments":[{"expression":{"id":3644,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"3223:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:7:17","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"3223:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3643,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"3209:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3642,"id":3647,"nodeType":"Return","src":"3202:36:17"}]},"id":3649,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"3092:26:17","nodeType":"FunctionDefinition","parameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"userOp","nameLocation":"3148:6:17","nodeType":"VariableDeclaration","scope":3649,"src":"3119:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3637,"nodeType":"UserDefinedTypeName","pathNode":{"id":3636,"name":"PackedUserOperation","nameLocations":["3119:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"3119:19:17"},"referencedDeclaration":4173,"src":"3119:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3118:37:17"},"returnParameters":{"id":3642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3649,"src":"3183:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:9:17"},"scope":3793,"src":"3083:162:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"3352:52:17","statements":[{"expression":{"arguments":[{"expression":{"id":3658,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"3382:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3389:7:17","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":4168,"src":"3382:14:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3657,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3369:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3656,"id":3661,"nodeType":"Return","src":"3362:35:17"}]},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3260:18:17","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3652,"mutability":"mutable","name":"userOp","nameLocation":"3308:6:17","nodeType":"VariableDeclaration","scope":3663,"src":"3279:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3651,"nodeType":"UserDefinedTypeName","pathNode":{"id":3650,"name":"PackedUserOperation","nameLocations":["3279:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"3279:19:17"},"referencedDeclaration":4173,"src":"3279:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3278:37:17"},"returnParameters":{"id":3656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3663,"src":"3343:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3654,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3342:9:17"},"scope":3793,"src":"3251:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"3519:62:17","statements":[{"expression":{"arguments":[{"expression":{"id":3672,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"3550:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3557:16:17","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":4164,"src":"3550:23:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3671,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"3536:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3536:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3670,"id":3675,"nodeType":"Return","src":"3529:45:17"}]},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3419:26:17","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"userOp","nameLocation":"3475:6:17","nodeType":"VariableDeclaration","scope":3677,"src":"3446:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3665,"nodeType":"UserDefinedTypeName","pathNode":{"id":3664,"name":"PackedUserOperation","nameLocations":["3446:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"3446:19:17"},"referencedDeclaration":4173,"src":"3446:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3445:37:17"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"3510:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"3510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3509:9:17"},"scope":3793,"src":"3410:171:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3690,"nodeType":"Block","src":"3688:61:17","statements":[{"expression":{"arguments":[{"expression":{"id":3686,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3718:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3725:16:17","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":4164,"src":"3718:23:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3685,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"3705:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3684,"id":3689,"nodeType":"Return","src":"3698:44:17"}]},"id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3596:18:17","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3680,"mutability":"mutable","name":"userOp","nameLocation":"3644:6:17","nodeType":"VariableDeclaration","scope":3691,"src":"3615:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3679,"nodeType":"UserDefinedTypeName","pathNode":{"id":3678,"name":"PackedUserOperation","nameLocations":["3615:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"3615:19:17"},"referencedDeclaration":4173,"src":"3615:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3614:37:17"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3691,"src":"3679:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:9:17"},"scope":3793,"src":"3587:162:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3711,"nodeType":"Block","src":"3873:128:17","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":3703,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"3906:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3913:16:17","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":4170,"src":"3906:23:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3706,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"3964:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3906:86:17","startExpression":{"id":3705,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"3930:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3898:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3701,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3898:7:17","typeDescriptions":{}}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:95:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3699,"name":"uint128","nodeType":"ElementaryTypeName","src":"3890:7:17","typeDescriptions":{}}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:104:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3698,"id":3710,"nodeType":"Return","src":"3883:111:17"}]},"id":3712,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3764:35:17","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"userOp","nameLocation":"3829:6:17","nodeType":"VariableDeclaration","scope":3712,"src":"3800:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"PackedUserOperation","nameLocations":["3800:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"3800:19:17"},"referencedDeclaration":4173,"src":"3800:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3799:37:17"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3712,"src":"3864:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"3864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3863:9:17"},"scope":3793,"src":"3755:246:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"4110:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":3724,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"4143:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4150:16:17","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":4170,"src":"4143:23:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3727,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4197:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4143:76:17","startExpression":{"id":3726,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"4167:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4135:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3722,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4135:7:17","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:85:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4127:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3720,"name":"uint128","nodeType":"ElementaryTypeName","src":"4127:7:17","typeDescriptions":{}}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3719,"id":3731,"nodeType":"Return","src":"4120:101:17"}]},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"4016:20:17","nodeType":"FunctionDefinition","parameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"userOp","nameLocation":"4066:6:17","nodeType":"VariableDeclaration","scope":3733,"src":"4037:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3714,"nodeType":"UserDefinedTypeName","pathNode":{"id":3713,"name":"PackedUserOperation","nameLocations":["4037:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"4037:19:17"},"referencedDeclaration":4173,"src":"4037:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"4036:37:17"},"returnParameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"4101:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4100:9:17"},"scope":3793,"src":"4007:221:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3775,"nodeType":"Block","src":"4412:329:17","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":3748,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"4459:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3749,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"4478:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4459:51:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4451:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":3746,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4451:7:17","typeDescriptions":{}}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":3745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3744,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:17","typeDescriptions":{}}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:69:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":3757,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"4542:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3759,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"4593:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4542:79:17","startExpression":{"id":3758,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"4559:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3755,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4534:7:17","typeDescriptions":{}}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:88:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4526:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3753,"name":"uint128","nodeType":"ElementaryTypeName","src":"4526:7:17","typeDescriptions":{}}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:97:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":3767,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"4653:16:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":3769,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"4700:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4653:69:17","startExpression":{"id":3768,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"4670:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":3765,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4645:7:17","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:78:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":3764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4637:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3763,"name":"uint128","nodeType":"ElementaryTypeName","src":"4637:7:17","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4637:87:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":3773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4429:305:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":3743,"id":3774,"nodeType":"Return","src":"4422:312:17"}]},"id":3776,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4243:27:17","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4295:16:17","nodeType":"VariableDeclaration","scope":3776,"src":"4280:31:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3734,"name":"bytes","nodeType":"ElementaryTypeName","src":"4280:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4270:47:17"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3738,"mutability":"mutable","name":"paymaster","nameLocation":"4349:9:17","nodeType":"VariableDeclaration","scope":3776,"src":"4341:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3737,"name":"address","nodeType":"ElementaryTypeName","src":"4341:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4368:18:17","nodeType":"VariableDeclaration","scope":3776,"src":"4360:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"4360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4396:14:17","nodeType":"VariableDeclaration","scope":3776,"src":"4388:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"4388:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4340:71:17"},"scope":3793,"src":"4234:507:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"4945:49:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3787,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3780,"src":"4979:6:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":3786,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"4972:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata) pure returns (bytes memory)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3785,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4962:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4962:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3784,"id":3790,"nodeType":"Return","src":"4955:32:17"}]},"documentation":{"id":3777,"nodeType":"StructuredDocumentation","src":"4747:96:17","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4857:4:17","nodeType":"FunctionDefinition","parameters":{"id":3781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3780,"mutability":"mutable","name":"userOp","nameLocation":"4900:6:17","nodeType":"VariableDeclaration","scope":3792,"src":"4871:35:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3779,"nodeType":"UserDefinedTypeName","pathNode":{"id":3778,"name":"PackedUserOperation","nameLocations":["4871:19:17"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"4871:19:17"},"referencedDeclaration":4173,"src":"4871:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"4861:51:17"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3792,"src":"4936:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3782,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4936:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4935:9:17"},"scope":3793,"src":"4848:146:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3794,"src":"282:4714:17","usedErrors":[],"usedEvents":[]}],"src":"36:4961:17"},"id":17},"account-abstraction/contracts/interfaces/IAccount.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/IAccount.sol","exportedSymbols":{"IAccount":[3810],"PackedUserOperation":[4173]},"id":3811,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3795,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:18"},{"absolutePath":"account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3796,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3811,"sourceUnit":4174,"src":"62:35:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAccount","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3810,"linearizedBaseContracts":[3810],"name":"IAccount","nameLocation":"109:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3797,"nodeType":"StructuredDocumentation","src":"124:2290:18","text":" Validate user's signature and nonce\n the entryPoint will make the call to the recipient only if this validation call returns successfully.\n signature failure should be reported by returning SIG_VALIDATION_FAILED (1).\n This allows making a \"simulation call\" without a valid signature\n Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\n @dev Must validate caller is the entryPoint.\n      Must validate the signature and nonce\n @param userOp              - The operation that is about to be executed.\n @param userOpHash          - Hash of the user's request data. can be used as the basis for signature.\n @param missingAccountFunds - Missing funds on the account's deposit in the entrypoint.\n                              This is the minimum amount to transfer to the sender(entryPoint) to be\n                              able to make the call. The excess is left as a deposit in the entrypoint\n                              for future calls. Can be withdrawn anytime using \"entryPoint.withdrawTo()\".\n                              In case there is a paymaster in the request (or the current deposit is high\n                              enough), this value will be zero.\n @return validationData       - Packaged ValidationData structure. use `_packValidationData` and\n                              `_unpackValidationData` to encode and decode.\n                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                 otherwise, an address of an \"authorizer\" contract.\n                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \"indefinite\"\n                              <6-byte> validAfter - First timestamp this operation is valid\n                                                    If an account doesn't use time-range, it is enough to\n                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.\n                              Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"19822f7c","id":3809,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOp","nameLocation":"2428:14:18","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"userOp","nameLocation":"2481:6:18","nodeType":"VariableDeclaration","scope":3809,"src":"2452:35:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3799,"nodeType":"UserDefinedTypeName","pathNode":{"id":3798,"name":"PackedUserOperation","nameLocations":["2452:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"2452:19:18"},"referencedDeclaration":4173,"src":"2452:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"userOpHash","nameLocation":"2505:10:18","nodeType":"VariableDeclaration","scope":3809,"src":"2497:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2497:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"missingAccountFunds","nameLocation":"2533:19:18","nodeType":"VariableDeclaration","scope":3809,"src":"2525:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3803,"name":"uint256","nodeType":"ElementaryTypeName","src":"2525:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2442:116:18"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"validationData","nameLocation":"2585:14:18","nodeType":"VariableDeclaration","scope":3809,"src":"2577:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2576:24:18"},"scope":3810,"src":"2419:182:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3811,"src":"99:2504:18","usedErrors":[],"usedEvents":[]}],"src":"36:2568:18"},"id":18},"account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[3844],"PackedUserOperation":[4173]},"id":3845,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3812,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:19"},{"absolutePath":"account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3813,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3845,"sourceUnit":4174,"src":"62:35:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3814,"nodeType":"StructuredDocumentation","src":"99:43:19","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":3844,"linearizedBaseContracts":[3844],"name":"IAggregator","nameLocation":"153:11:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"171:269:19","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":3824,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"454:18:19","nodeType":"FunctionDefinition","parameters":{"id":3822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3819,"mutability":"mutable","name":"userOps","nameLocation":"513:7:19","nodeType":"VariableDeclaration","scope":3824,"src":"482:38:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3817,"nodeType":"UserDefinedTypeName","pathNode":{"id":3816,"name":"PackedUserOperation","nameLocations":["482:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"482:19:19"},"referencedDeclaration":4173,"src":"482:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3818,"nodeType":"ArrayTypeName","src":"482:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3821,"mutability":"mutable","name":"signature","nameLocation":"545:9:19","nodeType":"VariableDeclaration","scope":3824,"src":"530:24:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3820,"name":"bytes","nodeType":"ElementaryTypeName","src":"530:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"472:88:19"},"returnParameters":{"id":3823,"nodeType":"ParameterList","parameters":[],"src":"574:0:19"},"scope":3844,"src":"445:130:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"581:610:19","text":" Validate signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":3833,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1205:23:19","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"userOp","nameLocation":"1267:6:19","nodeType":"VariableDeclaration","scope":3833,"src":"1238:35:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3827,"nodeType":"UserDefinedTypeName","pathNode":{"id":3826,"name":"PackedUserOperation","nameLocations":["1238:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"1238:19:19"},"referencedDeclaration":4173,"src":"1238:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1228:51:19"},"returnParameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1316:12:19","nodeType":"VariableDeclaration","scope":3833,"src":"1303:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3830,"name":"bytes","nodeType":"ElementaryTypeName","src":"1303:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:27:19"},"scope":3844,"src":"1196:134:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"1336:387:19","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":3843,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1737:19:19","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"userOps","nameLocation":"1797:7:19","nodeType":"VariableDeclaration","scope":3843,"src":"1766:38:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3836,"nodeType":"UserDefinedTypeName","pathNode":{"id":3835,"name":"PackedUserOperation","nameLocations":["1766:19:19"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"1766:19:19"},"referencedDeclaration":4173,"src":"1766:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3837,"nodeType":"ArrayTypeName","src":"1766:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1756:54:19"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1847:19:19","nodeType":"VariableDeclaration","scope":3843,"src":"1834:32:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3840,"name":"bytes","nodeType":"ElementaryTypeName","src":"1834:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1833:34:19"},"scope":3844,"src":"1728:140:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3845,"src":"143:1727:19","usedErrors":[],"usedEvents":[]}],"src":"36:1835:19"},"id":19},"account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[3844],"IEntryPoint":[4028],"INonceManager":[4047],"IStakeManager":[4151],"PackedUserOperation":[4173]},"id":4029,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3846,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"163:24:20"},{"absolutePath":"account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":3847,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4029,"sourceUnit":4174,"src":"311:35:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":3848,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4029,"sourceUnit":4152,"src":"347:29:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":3849,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4029,"sourceUnit":3845,"src":"377:27:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":3850,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4029,"sourceUnit":4048,"src":"405:29:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3851,"name":"IStakeManager","nameLocations":["461:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":4151,"src":"461:13:20"},"id":3852,"nodeType":"InheritanceSpecifier","src":"461:13:20"},{"baseName":{"id":3853,"name":"INonceManager","nameLocations":["476:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":4047,"src":"476:13:20"},"id":3854,"nodeType":"InheritanceSpecifier","src":"476:13:20"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4028,"linearizedBaseContracts":[4028,4047,4151],"name":"IEntryPoint","nameLocation":"446:11:20","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":3870,"name":"UserOperationEvent","nameLocation":"1255:18:20","nodeType":"EventDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1299:10:20","nodeType":"VariableDeclaration","scope":3870,"src":"1283:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3858,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1335:6:20","nodeType":"VariableDeclaration","scope":3870,"src":"1319:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3857,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3860,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1367:9:20","nodeType":"VariableDeclaration","scope":3870,"src":"1351:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3862,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1394:5:20","nodeType":"VariableDeclaration","scope":3870,"src":"1386:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3864,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1414:7:20","nodeType":"VariableDeclaration","scope":3870,"src":"1409:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3863,"name":"bool","nodeType":"ElementaryTypeName","src":"1409:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3866,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1439:13:20","nodeType":"VariableDeclaration","scope":3870,"src":"1431:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1470:13:20","nodeType":"VariableDeclaration","scope":3870,"src":"1462:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1273:216:20"},"src":"1249:241:20"},{"anonymous":false,"documentation":{"id":3871,"nodeType":"StructuredDocumentation","src":"1496:349:20","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":3881,"name":"AccountDeployed","nameLocation":"1856:15:20","nodeType":"EventDefinition","parameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1897:10:20","nodeType":"VariableDeclaration","scope":3881,"src":"1881:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3875,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1933:6:20","nodeType":"VariableDeclaration","scope":3881,"src":"1917:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3874,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3877,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1957:7:20","nodeType":"VariableDeclaration","scope":3881,"src":"1949:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3876,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3879,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1982:9:20","nodeType":"VariableDeclaration","scope":3881,"src":"1974:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1871:126:20"},"src":"1850:148:20"},{"anonymous":false,"documentation":{"id":3882,"nodeType":"StructuredDocumentation","src":"2004:361:20","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":3892,"name":"UserOperationRevertReason","nameLocation":"2376:25:20","nodeType":"EventDefinition","parameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2427:10:20","nodeType":"VariableDeclaration","scope":3892,"src":"2411:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3886,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2463:6:20","nodeType":"VariableDeclaration","scope":3892,"src":"2447:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3885,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3888,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2487:5:20","nodeType":"VariableDeclaration","scope":3892,"src":"2479:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3890,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2508:12:20","nodeType":"VariableDeclaration","scope":3892,"src":"2502:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3889,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2401:125:20"},"src":"2370:157:20"},{"anonymous":false,"documentation":{"id":3893,"nodeType":"StructuredDocumentation","src":"2533:376:20","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":3903,"name":"PostOpRevertReason","nameLocation":"2920:18:20","nodeType":"EventDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2964:10:20","nodeType":"VariableDeclaration","scope":3903,"src":"2948:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2948:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3897,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3000:6:20","nodeType":"VariableDeclaration","scope":3903,"src":"2984:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3896,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3899,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3024:5:20","nodeType":"VariableDeclaration","scope":3903,"src":"3016:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3901,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3045:12:20","nodeType":"VariableDeclaration","scope":3903,"src":"3039:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3900,"name":"bytes","nodeType":"ElementaryTypeName","src":"3039:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2938:125:20"},"src":"2914:150:20"},{"anonymous":false,"documentation":{"id":3904,"nodeType":"StructuredDocumentation","src":"3070:284:20","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":3912,"name":"UserOperationPrefundTooLow","nameLocation":"3365:26:20","nodeType":"EventDefinition","parameters":{"id":3911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3417:10:20","nodeType":"VariableDeclaration","scope":3912,"src":"3401:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3401:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3908,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3453:6:20","nodeType":"VariableDeclaration","scope":3912,"src":"3437:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3910,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3477:5:20","nodeType":"VariableDeclaration","scope":3912,"src":"3469:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3909,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3391:97:20"},"src":"3359:130:20"},{"anonymous":false,"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"3495:158:20","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":3915,"name":"BeforeExecution","nameLocation":"3664:15:20","nodeType":"EventDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[],"src":"3679:2:20"},"src":"3658:24:20"},{"anonymous":false,"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"3688:187:20","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":3920,"name":"SignatureAggregatorChanged","nameLocation":"3886:26:20","nodeType":"EventDefinition","parameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3929:10:20","nodeType":"VariableDeclaration","scope":3920,"src":"3913:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3917,"name":"address","nodeType":"ElementaryTypeName","src":"3913:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3912:28:20"},"src":"3880:61:20"},{"documentation":{"id":3921,"nodeType":"StructuredDocumentation","src":"3947:776:20","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":3927,"name":"FailedOp","nameLocation":"4734:8:20","nodeType":"ErrorDefinition","parameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"opIndex","nameLocation":"4751:7:20","nodeType":"VariableDeclaration","scope":3927,"src":"4743:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4743:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3925,"mutability":"mutable","name":"reason","nameLocation":"4767:6:20","nodeType":"VariableDeclaration","scope":3927,"src":"4760:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3924,"name":"string","nodeType":"ElementaryTypeName","src":"4760:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4742:32:20"},"src":"4728:47:20"},{"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"4781:405:20","text":" A custom revert error of handleOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":3936,"name":"FailedOpWithRevert","nameLocation":"5197:18:20","nodeType":"ErrorDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"opIndex","nameLocation":"5224:7:20","nodeType":"VariableDeclaration","scope":3936,"src":"5216:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"5216:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"reason","nameLocation":"5240:6:20","nodeType":"VariableDeclaration","scope":3936,"src":"5233:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3931,"name":"string","nodeType":"ElementaryTypeName","src":"5233:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"inner","nameLocation":"5254:5:20","nodeType":"VariableDeclaration","scope":3936,"src":"5248:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3933,"name":"bytes","nodeType":"ElementaryTypeName","src":"5248:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5215:45:20"},"src":"5191:70:20"},{"errorSelector":"ad7954bc","id":3940,"name":"PostOpReverted","nameLocation":"5273:14:20","nodeType":"ErrorDefinition","parameters":{"id":3939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3938,"mutability":"mutable","name":"returnData","nameLocation":"5294:10:20","nodeType":"VariableDeclaration","scope":3940,"src":"5288:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3937,"name":"bytes","nodeType":"ElementaryTypeName","src":"5288:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5287:18:20"},"src":"5267:39:20"},{"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"5312:190:20","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":3945,"name":"SignatureValidationFailed","nameLocation":"5513:25:20","nodeType":"ErrorDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3943,"mutability":"mutable","name":"aggregator","nameLocation":"5547:10:20","nodeType":"VariableDeclaration","scope":3945,"src":"5539:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"5539:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5538:20:20"},"src":"5507:52:20"},{"errorSelector":"6ca7b806","id":3949,"name":"SenderAddressResult","nameLocation":"5612:19:20","nodeType":"ErrorDefinition","parameters":{"id":3948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3947,"mutability":"mutable","name":"sender","nameLocation":"5640:6:20","nodeType":"VariableDeclaration","scope":3949,"src":"5632:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3946,"name":"address","nodeType":"ElementaryTypeName","src":"5632:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5631:16:20"},"src":"5606:42:20"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":3959,"members":[{"constant":false,"id":3953,"mutability":"mutable","name":"userOps","nameLocation":"5754:7:20","nodeType":"VariableDeclaration","scope":3959,"src":"5732:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3951,"nodeType":"UserDefinedTypeName","pathNode":{"id":3950,"name":"PackedUserOperation","nameLocations":["5732:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"5732:19:20"},"referencedDeclaration":4173,"src":"5732:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3952,"nodeType":"ArrayTypeName","src":"5732:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"aggregator","nameLocation":"5813:10:20","nodeType":"VariableDeclaration","scope":3959,"src":"5801:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3844","typeString":"contract IAggregator"},"typeName":{"id":3955,"nodeType":"UserDefinedTypeName","pathNode":{"id":3954,"name":"IAggregator","nameLocations":["5801:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":3844,"src":"5801:11:20"},"referencedDeclaration":3844,"src":"5801:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$3844","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":3958,"mutability":"mutable","name":"signature","nameLocation":"5871:9:20","nodeType":"VariableDeclaration","scope":3959,"src":"5865:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3957,"name":"bytes","nodeType":"ElementaryTypeName","src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5701:20:20","nodeType":"StructDefinition","scope":4028,"src":"5694:193:20","visibility":"public"},{"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"5893:383:20","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":3969,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6290:9:20","nodeType":"FunctionDefinition","parameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3964,"mutability":"mutable","name":"ops","nameLocation":"6340:3:20","nodeType":"VariableDeclaration","scope":3969,"src":"6309:34:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"PackedUserOperation","nameLocations":["6309:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"6309:19:20"},"referencedDeclaration":4173,"src":"6309:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"id":3963,"nodeType":"ArrayTypeName","src":"6309:21:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$4173_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":3966,"mutability":"mutable","name":"beneficiary","nameLocation":"6369:11:20","nodeType":"VariableDeclaration","scope":3969,"src":"6353:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3965,"name":"address","nodeType":"ElementaryTypeName","src":"6353:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6299:87:20"},"returnParameters":{"id":3968,"nodeType":"ParameterList","parameters":[],"src":"6395:0:20"},"scope":4028,"src":"6281:115:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3970,"nodeType":"StructuredDocumentation","src":"6402:260:20","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":3979,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6676:19:20","nodeType":"FunctionDefinition","parameters":{"id":3977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6737:16:20","nodeType":"VariableDeclaration","scope":3979,"src":"6705:48:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3959_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":3972,"nodeType":"UserDefinedTypeName","pathNode":{"id":3971,"name":"UserOpsPerAggregator","nameLocations":["6705:20:20"],"nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"6705:20:20"},"referencedDeclaration":3959,"src":"6705:20:20","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$3959_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":3973,"nodeType":"ArrayTypeName","src":"6705:22:20","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$3959_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":3976,"mutability":"mutable","name":"beneficiary","nameLocation":"6779:11:20","nodeType":"VariableDeclaration","scope":3979,"src":"6763:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3975,"name":"address","nodeType":"ElementaryTypeName","src":"6763:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6695:101:20"},"returnParameters":{"id":3978,"nodeType":"ParameterList","parameters":[],"src":"6805:0:20"},"scope":4028,"src":"6667:139:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"6812:322:20","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":3988,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7148:13:20","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"userOp","nameLocation":"7200:6:20","nodeType":"VariableDeclaration","scope":3988,"src":"7171:35:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":3982,"nodeType":"UserDefinedTypeName","pathNode":{"id":3981,"name":"PackedUserOperation","nameLocations":["7171:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"7171:19:20"},"referencedDeclaration":4173,"src":"7171:19:20","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7161:51:20"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"7236:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3985,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7235:9:20"},"scope":4028,"src":"7139:106:20","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":3989,"nodeType":"StructuredDocumentation","src":"7251:474:20","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":4000,"members":[{"constant":false,"id":3991,"mutability":"mutable","name":"preOpGas","nameLocation":"7766:8:20","nodeType":"VariableDeclaration","scope":4000,"src":"7758:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7758:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"prefund","nameLocation":"7792:7:20","nodeType":"VariableDeclaration","scope":4000,"src":"7784:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7784:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3995,"mutability":"mutable","name":"accountValidationData","nameLocation":"7817:21:20","nodeType":"VariableDeclaration","scope":4000,"src":"7809:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"7856:23:20","nodeType":"VariableDeclaration","scope":4000,"src":"7848:31:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"7848:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"paymasterContext","nameLocation":"7895:16:20","nodeType":"VariableDeclaration","scope":4000,"src":"7889:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3998,"name":"bytes","nodeType":"ElementaryTypeName","src":"7889:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7737:10:20","nodeType":"StructDefinition","scope":4028,"src":"7730:188:20","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"7924:124:20","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":4007,"members":[{"constant":false,"id":4003,"mutability":"mutable","name":"aggregator","nameLocation":"8098:10:20","nodeType":"VariableDeclaration","scope":4007,"src":"8090:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4002,"name":"address","nodeType":"ElementaryTypeName","src":"8090:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4006,"mutability":"mutable","name":"stakeInfo","nameLocation":"8128:9:20","nodeType":"VariableDeclaration","scope":4007,"src":"8118:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4103_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":4005,"nodeType":"UserDefinedTypeName","pathNode":{"id":4004,"name":"StakeInfo","nameLocations":["8118:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":4103,"src":"8118:9:20"},"referencedDeclaration":4103,"src":"8118:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$4103_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"8060:19:20","nodeType":"StructDefinition","scope":4028,"src":"8053:91:20","visibility":"public"},{"documentation":{"id":4008,"nodeType":"StructuredDocumentation","src":"8150:338:20","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":4013,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8502:16:20","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"initCode","nameLocation":"8532:8:20","nodeType":"VariableDeclaration","scope":4013,"src":"8519:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4009,"name":"bytes","nodeType":"ElementaryTypeName","src":"8519:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8518:23:20"},"returnParameters":{"id":4012,"nodeType":"ParameterList","parameters":[],"src":"8550:0:20"},"scope":4028,"src":"8493:58:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":4019,"name":"DelegateAndRevert","nameLocation":"8563:17:20","nodeType":"ErrorDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4015,"mutability":"mutable","name":"success","nameLocation":"8586:7:20","nodeType":"VariableDeclaration","scope":4019,"src":"8581:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4014,"name":"bool","nodeType":"ElementaryTypeName","src":"8581:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"ret","nameLocation":"8601:3:20","nodeType":"VariableDeclaration","scope":4019,"src":"8595:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4016,"name":"bytes","nodeType":"ElementaryTypeName","src":"8595:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8580:25:20"},"src":"8557:49:20"},{"documentation":{"id":4020,"nodeType":"StructuredDocumentation","src":"8612:492:20","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":4027,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9118:17:20","nodeType":"FunctionDefinition","parameters":{"id":4025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4022,"mutability":"mutable","name":"target","nameLocation":"9144:6:20","nodeType":"VariableDeclaration","scope":4027,"src":"9136:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"9136:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4024,"mutability":"mutable","name":"data","nameLocation":"9167:4:20","nodeType":"VariableDeclaration","scope":4027,"src":"9152:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4023,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9135:37:20"},"returnParameters":{"id":4026,"nodeType":"ParameterList","parameters":[],"src":"9181:0:20"},"scope":4028,"src":"9109:73:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4029,"src":"436:8748:20","usedErrors":[3927,3936,3940,3945,3949,4019],"usedEvents":[3870,3881,3892,3903,3912,3915,3920,4056,4064,4072,4078,4086]}],"src":"163:9022:20"},"id":20},"account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[4047]},"id":4048,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4030,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4047,"linearizedBaseContracts":[4047],"name":"INonceManager","nameLocation":"72:13:21","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"93:416:21","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":4040,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:21","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"sender","nameLocation":"540:6:21","nodeType":"VariableDeclaration","scope":4040,"src":"532:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4032,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"key","nameLocation":"556:3:21","nodeType":"VariableDeclaration","scope":4040,"src":"548:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4034,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:21"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"nonce","nameLocation":"596:5:21","nodeType":"VariableDeclaration","scope":4040,"src":"588:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:21"},"scope":4047,"src":"514:89:21","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"609:449:21","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":4046,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:21","nodeType":"FunctionDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"key","nameLocation":"1095:3:21","nodeType":"VariableDeclaration","scope":4046,"src":"1087:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4042,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:21","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:21"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"1108:0:21"},"scope":4047,"src":"1063:46:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4048,"src":"62:1049:21","usedErrors":[],"usedEvents":[]}],"src":"36:1076:21"},"id":21},"account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[4151]},"id":4152,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":4049,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"41:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":4050,"nodeType":"StructuredDocumentation","src":"67:212:22","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":4151,"linearizedBaseContracts":[4151],"name":"IStakeManager","nameLocation":"290:13:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":4056,"name":"Deposited","nameLocation":"316:9:22","nodeType":"EventDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4052,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:22","nodeType":"VariableDeclaration","scope":4056,"src":"326:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4051,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4054,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:22","nodeType":"VariableDeclaration","scope":4056,"src":"351:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:22"},"src":"310:63:22"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":4064,"name":"Withdrawn","nameLocation":"385:9:22","nodeType":"EventDefinition","parameters":{"id":4063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"420:7:22","nodeType":"VariableDeclaration","scope":4064,"src":"404:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4057,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4060,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"445:15:22","nodeType":"VariableDeclaration","scope":4064,"src":"437:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4059,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4062,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"478:6:22","nodeType":"VariableDeclaration","scope":4064,"src":"470:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4061,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"394:96:22"},"src":"379:112:22"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":4072,"name":"StakeLocked","nameLocation":"560:11:22","nodeType":"EventDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"597:7:22","nodeType":"VariableDeclaration","scope":4072,"src":"581:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4065,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4068,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"622:11:22","nodeType":"VariableDeclaration","scope":4072,"src":"614:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4070,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"651:15:22","nodeType":"VariableDeclaration","scope":4072,"src":"643:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:101:22"},"src":"554:119:22"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":4078,"name":"StakeUnlocked","nameLocation":"742:13:22","nodeType":"EventDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"772:7:22","nodeType":"VariableDeclaration","scope":4078,"src":"756:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4073,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4076,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"789:12:22","nodeType":"VariableDeclaration","scope":4078,"src":"781:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:47:22"},"src":"736:67:22"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":4086,"name":"StakeWithdrawn","nameLocation":"815:14:22","nodeType":"EventDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4080,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"855:7:22","nodeType":"VariableDeclaration","scope":4086,"src":"839:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4082,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"880:15:22","nodeType":"VariableDeclaration","scope":4086,"src":"872:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4081,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4084,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"913:6:22","nodeType":"VariableDeclaration","scope":4086,"src":"905:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"829:96:22"},"src":"809:117:22"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":4087,"nodeType":"StructuredDocumentation","src":"932:697:22","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":4098,"members":[{"constant":false,"id":4089,"mutability":"mutable","name":"deposit","nameLocation":"1671:7:22","nodeType":"VariableDeclaration","scope":4098,"src":"1663:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4091,"mutability":"mutable","name":"staked","nameLocation":"1693:6:22","nodeType":"VariableDeclaration","scope":4098,"src":"1688:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4090,"name":"bool","nodeType":"ElementaryTypeName","src":"1688:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"stake","nameLocation":"1717:5:22","nodeType":"VariableDeclaration","scope":4098,"src":"1709:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":4092,"name":"uint112","nodeType":"ElementaryTypeName","src":"1709:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1739:15:22","nodeType":"VariableDeclaration","scope":4098,"src":"1732:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4094,"name":"uint32","nodeType":"ElementaryTypeName","src":"1732:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"withdrawTime","nameLocation":"1771:12:22","nodeType":"VariableDeclaration","scope":4098,"src":"1764:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":4096,"name":"uint48","nodeType":"ElementaryTypeName","src":"1764:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1641:11:22","nodeType":"StructDefinition","scope":4151,"src":"1634:156:22","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":4103,"members":[{"constant":false,"id":4100,"mutability":"mutable","name":"stake","nameLocation":"1894:5:22","nodeType":"VariableDeclaration","scope":4103,"src":"1886:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4099,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1917:15:22","nodeType":"VariableDeclaration","scope":4103,"src":"1909:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1866:9:22","nodeType":"StructDefinition","scope":4151,"src":"1859:80:22","visibility":"public"},{"documentation":{"id":4104,"nodeType":"StructuredDocumentation","src":"1945:149:22","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":4112,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2108:14:22","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"account","nameLocation":"2140:7:22","nodeType":"VariableDeclaration","scope":4112,"src":"2132:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4105,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:31:22"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"info","nameLocation":"2196:4:22","nodeType":"VariableDeclaration","scope":4112,"src":"2177:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$4098_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":4109,"nodeType":"UserDefinedTypeName","pathNode":{"id":4108,"name":"DepositInfo","nameLocations":["2177:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":4098,"src":"2177:11:22"},"referencedDeclaration":4098,"src":"2177:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$4098_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2176:25:22"},"scope":4151,"src":"2099:103:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4113,"nodeType":"StructuredDocumentation","src":"2208:155:22","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":4120,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2377:9:22","nodeType":"FunctionDefinition","parameters":{"id":4116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"account","nameLocation":"2395:7:22","nodeType":"VariableDeclaration","scope":4120,"src":"2387:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4114,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2386:17:22"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"2427:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2426:9:22"},"scope":4151,"src":"2368:68:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"2442:106:22","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":4126,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2562:9:22","nodeType":"FunctionDefinition","parameters":{"id":4124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4123,"mutability":"mutable","name":"account","nameLocation":"2580:7:22","nodeType":"VariableDeclaration","scope":4126,"src":"2572:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4122,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2571:17:22"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[],"src":"2605:0:22"},"scope":4151,"src":"2553:53:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"2612:203:22","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":4132,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2829:8:22","nodeType":"FunctionDefinition","parameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2845:16:22","nodeType":"VariableDeclaration","scope":4132,"src":"2838:23:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4128,"name":"uint32","nodeType":"ElementaryTypeName","src":"2838:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2837:25:22"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[],"src":"2879:0:22"},"scope":4151,"src":"2820:60:22","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"2886:128:22","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":4136,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3028:11:22","nodeType":"FunctionDefinition","parameters":{"id":4134,"nodeType":"ParameterList","parameters":[],"src":"3039:2:22"},"returnParameters":{"id":4135,"nodeType":"ParameterList","parameters":[],"src":"3050:0:22"},"scope":4151,"src":"3019:32:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"3057:197:22","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":4142,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3268:13:22","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3298:15:22","nodeType":"VariableDeclaration","scope":4142,"src":"3282:31:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4138,"name":"address","nodeType":"ElementaryTypeName","src":"3282:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3281:33:22"},"returnParameters":{"id":4141,"nodeType":"ParameterList","parameters":[],"src":"3323:0:22"},"scope":4151,"src":"3259:65:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":4143,"nodeType":"StructuredDocumentation","src":"3330:170:22","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":4150,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3514:10:22","nodeType":"FunctionDefinition","parameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4145,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3550:15:22","nodeType":"VariableDeclaration","scope":4150,"src":"3534:31:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4144,"name":"address","nodeType":"ElementaryTypeName","src":"3534:15:22","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":4147,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3583:14:22","nodeType":"VariableDeclaration","scope":4150,"src":"3575:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3575:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3524:79:22"},"returnParameters":{"id":4149,"nodeType":"ParameterList","parameters":[],"src":"3612:0:22"},"scope":4151,"src":"3505:108:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4152,"src":"280:3335:22","usedErrors":[],"usedEvents":[4056,4064,4072,4078,4086]}],"src":"41:3575:22"},"id":22},"account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"account-abstraction/contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[4173]},"id":4174,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4153,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:23"},{"canonicalName":"PackedUserOperation","documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"62:1164:23","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":4173,"members":[{"constant":false,"id":4156,"mutability":"mutable","name":"sender","nameLocation":"1268:6:23","nodeType":"VariableDeclaration","scope":4173,"src":"1260:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"nonce","nameLocation":"1288:5:23","nodeType":"VariableDeclaration","scope":4173,"src":"1280:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4160,"mutability":"mutable","name":"initCode","nameLocation":"1305:8:23","nodeType":"VariableDeclaration","scope":4173,"src":"1299:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4159,"name":"bytes","nodeType":"ElementaryTypeName","src":"1299:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4162,"mutability":"mutable","name":"callData","nameLocation":"1325:8:23","nodeType":"VariableDeclaration","scope":4173,"src":"1319:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4161,"name":"bytes","nodeType":"ElementaryTypeName","src":"1319:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4164,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1347:16:23","nodeType":"VariableDeclaration","scope":4173,"src":"1339:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1339:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1377:18:23","nodeType":"VariableDeclaration","scope":4173,"src":"1369:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"gasFees","nameLocation":"1409:7:23","nodeType":"VariableDeclaration","scope":4173,"src":"1401:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1428:16:23","nodeType":"VariableDeclaration","scope":4173,"src":"1422:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4169,"name":"bytes","nodeType":"ElementaryTypeName","src":"1422:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"signature","nameLocation":"1456:9:23","nodeType":"VariableDeclaration","scope":4173,"src":"1450:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4171,"name":"bytes","nodeType":"ElementaryTypeName","src":"1450:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1234:19:23","nodeType":"StructDefinition","scope":4174,"src":"1227:241:23","visibility":"public"}],"src":"36:1433:23"},"id":23},"contracts/SmartContractWallet.sol":{"ast":{"absolutePath":"contracts/SmartContractWallet.sol","exportedSymbols":{"BaseAccount":[3257],"ECDSA":[1885],"ERC1967Utils":[350],"IAccount":[3810],"IAggregator":[3844],"IERC1822Proxiable":[9],"IEntryPoint":[4028],"INonceManager":[4047],"IStakeManager":[4151],"Initializable":[650],"MessageHashUtils":[1959],"PackedUserOperation":[4173],"SIG_VALIDATION_FAILED":[3262],"SIG_VALIDATION_SUCCESS":[3265],"SmartContractWallet":[4445],"Strings":[1537],"UUPSUpgradeable":[816],"UserOperationLib":[3793],"ValidationData":[3273],"_packValidationData":[3370,3408],"_parseValidationData":[3333],"calldataKeccak":[3418],"min":[3436]},"id":4446,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4175,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":4176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":1886,"src":"184:62:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":4177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":1960,"src":"247:73:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":4178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":651,"src":"321:63:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol","id":4179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":817,"src":"385:65:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/core/BaseAccount.sol","file":"../account-abstraction/contracts/core/BaseAccount.sol","id":4180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":3258,"src":"549:63:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"account-abstraction/contracts/core/Helpers.sol","file":"../account-abstraction/contracts/core/Helpers.sol","id":4181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4446,"sourceUnit":3437,"src":"613:59:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4183,"name":"BaseAccount","nameLocations":["1098:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":3257,"src":"1098:11:24"},"id":4184,"nodeType":"InheritanceSpecifier","src":"1098:11:24"},{"baseName":{"id":4185,"name":"UUPSUpgradeable","nameLocations":["1111:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":816,"src":"1111:15:24"},"id":4186,"nodeType":"InheritanceSpecifier","src":"1111:15:24"},{"baseName":{"id":4187,"name":"Initializable","nameLocations":["1128:13:24"],"nodeType":"IdentifierPath","referencedDeclaration":650,"src":"1128:13:24"},"id":4188,"nodeType":"InheritanceSpecifier","src":"1128:13:24"}],"canonicalName":"SmartContractWallet","contractDependencies":[],"contractKind":"contract","documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"893:172:24","text":" minimal account.\n  this is sample minimal account.\n  has execute, eth handling methods\n  has a single signer that can send requests through the entryPoint."},"fullyImplemented":true,"id":4445,"linearizedBaseContracts":[4445,650,816,9,3257,3810],"name":"SmartContractWallet","nameLocation":"1075:19:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":4190,"mutability":"mutable","name":"owner","nameLocation":"1163:5:24","nodeType":"VariableDeclaration","scope":4445,"src":"1148:20:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4189,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":4193,"mutability":"immutable","name":"_entryPoint","nameLocation":"1205:11:24","nodeType":"VariableDeclaration","scope":4445,"src":"1175:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"IEntryPoint","nameLocations":["1175:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1175:11:24"},"referencedDeclaration":4028,"src":"1175:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"private"},{"constant":false,"id":4195,"mutability":"immutable","name":"password","nameLocation":"1248:8:24","nodeType":"VariableDeclaration","scope":4445,"src":"1222:34:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1222:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"anonymous":false,"eventSelector":"1b5fc86b82922371dc8e7cb464044750968531a041b9ea4b8ca5bfac41f8c269","id":4202,"name":"SmartSample","nameLocation":"1269:11:24","nodeType":"EventDefinition","parameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"indexed":true,"mutability":"mutable","name":"entryPoint","nameLocation":"1301:10:24","nodeType":"VariableDeclaration","scope":4202,"src":"1281:30:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":4197,"nodeType":"UserDefinedTypeName","pathNode":{"id":4196,"name":"IEntryPoint","nameLocations":["1281:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1281:11:24"},"referencedDeclaration":4028,"src":"1281:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":4200,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1329:5:24","nodeType":"VariableDeclaration","scope":4202,"src":"1313:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4199,"name":"address","nodeType":"ElementaryTypeName","src":"1313:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1280:55:24"},"src":"1263:73:24"},{"body":{"id":4208,"nodeType":"Block","src":"1363:40:24","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4204,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"1373:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4206,"nodeType":"ExpressionStatement","src":"1373:12:24"},{"id":4207,"nodeType":"PlaceholderStatement","src":"1395:1:24"}]},"id":4209,"name":"onlyOwner","nameLocation":"1351:9:24","nodeType":"ModifierDefinition","parameters":{"id":4203,"nodeType":"ParameterList","parameters":[],"src":"1360:2:24"},"src":"1342:61:24","virtual":false,"visibility":"internal"},{"baseFunctions":[3154],"body":{"id":4219,"nodeType":"Block","src":"1514:35:24","statements":[{"expression":{"id":4217,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"1531:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"functionReturnParameters":4216,"id":4218,"nodeType":"Return","src":"1524:18:24"}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"1409:27:24","text":"@inheritdoc BaseAccount"},"functionSelector":"b0d691fe","id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"entryPoint","nameLocation":"1450:10:24","nodeType":"FunctionDefinition","overrides":{"id":4212,"nodeType":"OverrideSpecifier","overrides":[],"src":"1483:8:24"},"parameters":{"id":4211,"nodeType":"ParameterList","parameters":[],"src":"1460:2:24"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4220,"src":"1501:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":4214,"nodeType":"UserDefinedTypeName","pathNode":{"id":4213,"name":"IEntryPoint","nameLocations":["1501:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1501:11:24"},"referencedDeclaration":4028,"src":"1501:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1500:13:24"},"scope":4445,"src":"1441:108:24","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4223,"nodeType":"Block","src":"1631:2:24","statements":[]},"id":4224,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4221,"nodeType":"ParameterList","parameters":[],"src":"1611:2:24"},"returnParameters":{"id":4222,"nodeType":"ParameterList","parameters":[],"src":"1631:0:24"},"scope":4445,"src":"1604:29:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4237,"nodeType":"Block","src":"1677:75:24","statements":[{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"1687:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4231,"name":"anEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"1701:12:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"src":"1687:26:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"id":4233,"nodeType":"ExpressionStatement","src":"1687:26:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4234,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1723:20:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4236,"nodeType":"ExpressionStatement","src":"1723:22:24"}]},"id":4238,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"anEntryPoint","nameLocation":"1663:12:24","nodeType":"VariableDeclaration","scope":4238,"src":"1651:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":4226,"nodeType":"UserDefinedTypeName","pathNode":{"id":4225,"name":"IEntryPoint","nameLocations":["1651:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1651:11:24"},"referencedDeclaration":4028,"src":"1651:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1650:26:24"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[],"src":"1677:0:24"},"scope":4445,"src":"1639:113:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4257,"nodeType":"Block","src":"1794:231:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1932:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1936:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1932:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4244,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"1946:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1932:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4246,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1955:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1959:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1955:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4250,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1977:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1969:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4248,"name":"address","nodeType":"ElementaryTypeName","src":"1969:7:24","typeDescriptions":{}}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1955:27:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1932:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c79206f776e6572","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1996:12:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""},"value":"only owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","typeString":"literal_string \"only owner\""}],"id":4241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1911:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:107:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4256,"nodeType":"ExpressionStatement","src":"1911:107:24"}]},"id":4258,"implemented":true,"kind":"function","modifiers":[],"name":"_onlyOwner","nameLocation":"1767:10:24","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[],"src":"1777:2:24"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[],"src":"1794:0:24"},"scope":4445,"src":"1758:267:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4279,"nodeType":"Block","src":"2079:126:24","statements":[{"assignments":[4264],"declarations":[{"constant":false,"id":4264,"mutability":"mutable","name":"message","nameLocation":"2097:7:24","nodeType":"VariableDeclaration","scope":4279,"src":"2089:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2089:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4271,"initialValue":{"arguments":[{"arguments":[{"id":4268,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"2128:5:24","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4266,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2117:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2121:6:24","memberName":"encode","nodeType":"MemberAccess","src":"2117:10:24","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2117:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4265,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2107:9:24","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2089:46:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"2153:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4274,"name":"password","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2164:8:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2153:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f7520617265206e6f7420746865206f776e6572","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2174:23:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""},"value":"You are not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","typeString":"literal_string \"You are not the owner\""}],"id":4272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2145:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:53:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4278,"nodeType":"ExpressionStatement","src":"2145:53:24"}]},"functionSelector":"3a7d280c","id":4280,"implemented":true,"kind":"function","modifiers":[],"name":"login","nameLocation":"2040:5:24","nodeType":"FunctionDefinition","parameters":{"id":4261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"_data","nameLocation":"2060:5:24","nodeType":"VariableDeclaration","scope":4280,"src":"2046:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4259,"name":"string","nodeType":"ElementaryTypeName","src":"2046:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2045:21:24"},"returnParameters":{"id":4262,"nodeType":"ParameterList","parameters":[],"src":"2079:0:24"},"scope":4445,"src":"2031:174:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4290,"nodeType":"Block","src":"2265:37:24","statements":[{"expression":{"arguments":[{"id":4287,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2290:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2282:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"2282:7:24","typeDescriptions":{}}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2282:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4284,"id":4289,"nodeType":"Return","src":"2275:20:24"}]},"functionSelector":"c71daccb","id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"checkBalance","nameLocation":"2220:12:24","nodeType":"FunctionDefinition","parameters":{"id":4281,"nodeType":"ParameterList","parameters":[],"src":"2232:2:24"},"returnParameters":{"id":4284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4291,"src":"2256:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4282,"name":"address","nodeType":"ElementaryTypeName","src":"2256:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2255:9:24"},"scope":4445,"src":"2211:91:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4303,"nodeType":"Block","src":"4121:37:24","statements":[{"expression":{"arguments":[{"id":4300,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"4143:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4299,"name":"_initialize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"4131:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4131:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4302,"nodeType":"ExpressionStatement","src":"4131:20:24"}]},"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"3723:329:24","text":" @dev The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint,\n a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading\n the implementation by calling `upgradeTo()`\n @param anOwner the owner (signer) of this account"},"functionSelector":"c4d66de8","id":4304,"implemented":true,"kind":"function","modifiers":[{"id":4297,"kind":"modifierInvocation","modifierName":{"id":4296,"name":"initializer","nameLocations":["4109:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":504,"src":"4109:11:24"},"nodeType":"ModifierInvocation","src":"4109:11:24"}],"name":"initialize","nameLocation":"4066:10:24","nodeType":"FunctionDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"anOwner","nameLocation":"4085:7:24","nodeType":"VariableDeclaration","scope":4304,"src":"4077:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"4077:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4076:17:24"},"returnParameters":{"id":4298,"nodeType":"ParameterList","parameters":[],"src":"4121:0:24"},"scope":4445,"src":"4057:101:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":4318,"nodeType":"Block","src":"4219:78:24","statements":[{"expression":{"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4229:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4310,"name":"anOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"4237:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4229:15:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4312,"nodeType":"ExpressionStatement","src":"4229:15:24"},{"eventCall":{"arguments":[{"id":4314,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"4271:11:24","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},{"id":4315,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4284:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4313,"name":"SmartSample","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"4259:11:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_contract$_IEntryPoint_$4028_$_t_address_$returns$__$","typeString":"function (contract IEntryPoint,address)"}},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4259:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4317,"nodeType":"EmitStatement","src":"4254:36:24"}]},"id":4319,"implemented":true,"kind":"function","modifiers":[],"name":"_initialize","nameLocation":"4173:11:24","nodeType":"FunctionDefinition","parameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"anOwner","nameLocation":"4193:7:24","nodeType":"VariableDeclaration","scope":4319,"src":"4185:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4305,"name":"address","nodeType":"ElementaryTypeName","src":"4185:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4184:17:24"},"returnParameters":{"id":4308,"nodeType":"ParameterList","parameters":[],"src":"4219:0:24"},"scope":4445,"src":"4164:133:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4339,"nodeType":"Block","src":"4424:154:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4455:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4459:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4455:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4327,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4220],"referencedDeclaration":4220,"src":"4477:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4028_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4477:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}],"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4469:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4325,"name":"address","nodeType":"ElementaryTypeName","src":"4469:7:24","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4469:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4455:35:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4494:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4498:6:24","memberName":"sender","nodeType":"MemberAccess","src":"4494:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4333,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4508:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4494:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4455:58:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4527:34:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""},"value":"account: not Owner or EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26bf1d2fa883929ce8db7f4593c3a7f27ec5e761d3beb6ef3a9db5c68fe51d21","typeString":"literal_string \"account: not Owner or EntryPoint\""}],"id":4322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4434:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4434:137:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4338,"nodeType":"ExpressionStatement","src":"4434:137:24"}]},"id":4340,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPointOrOwner","nameLocation":"4378:29:24","nodeType":"FunctionDefinition","parameters":{"id":4320,"nodeType":"ParameterList","parameters":[],"src":"4407:2:24"},"returnParameters":{"id":4321,"nodeType":"ParameterList","parameters":[],"src":"4424:0:24"},"scope":4445,"src":"4369:209:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[3216],"body":{"id":4372,"nodeType":"Block","src":"4799:224:24","statements":[{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"hash","nameLocation":"4817:4:24","nodeType":"VariableDeclaration","scope":4372,"src":"4809:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4809:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4358,"initialValue":{"arguments":[{"id":4356,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"4864:10:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4354,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"4824:16:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$1959_$","typeString":"type(library MessageHashUtils)"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4841:22:24","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":1900,"src":"4824:39:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4824:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4809:66:24"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4359,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"4889:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":4362,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"4912:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4363,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"4918:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4925:9:24","memberName":"signature","nodeType":"MemberAccess","referencedDeclaration":4172,"src":"4918:16:24","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4360,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4898:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1885_$","typeString":"type(library ECDSA)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4904:7:24","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1641,"src":"4898:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4898:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4889:46:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4369,"nodeType":"IfStatement","src":"4885:92:24","trueBody":{"expression":{"id":4367,"name":"SIG_VALIDATION_FAILED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"4956:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4351,"id":4368,"nodeType":"Return","src":"4949:28:24"}},{"expression":{"id":4370,"name":"SIG_VALIDATION_SUCCESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"4994:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4351,"id":4371,"nodeType":"Return","src":"4987:29:24"}]},"documentation":{"id":4341,"nodeType":"StructuredDocumentation","src":"4584:44:24","text":"implement template method of BaseAccount"},"id":4373,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSignature","nameLocation":"4642:18:24","nodeType":"FunctionDefinition","overrides":{"id":4348,"nodeType":"OverrideSpecifier","overrides":[],"src":"4757:8:24"},"parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4344,"mutability":"mutable","name":"userOp","nameLocation":"4699:6:24","nodeType":"VariableDeclaration","scope":4373,"src":"4670:35:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":4343,"nodeType":"UserDefinedTypeName","pathNode":{"id":4342,"name":"PackedUserOperation","nameLocations":["4670:19:24"],"nodeType":"IdentifierPath","referencedDeclaration":4173,"src":"4670:19:24"},"referencedDeclaration":4173,"src":"4670:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4173_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":4346,"mutability":"mutable","name":"userOpHash","nameLocation":"4723:10:24","nodeType":"VariableDeclaration","scope":4373,"src":"4715:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4715:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4660:79:24"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"validationData","nameLocation":"4783:14:24","nodeType":"VariableDeclaration","scope":4373,"src":"4775:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4775:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4774:24:24"},"scope":4445,"src":"4633:390:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":4398,"nodeType":"Block","src":"5103:212:24","statements":[{"assignments":[4383,4385],"declarations":[{"constant":false,"id":4383,"mutability":"mutable","name":"success","nameLocation":"5119:7:24","nodeType":"VariableDeclaration","scope":4398,"src":"5114:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4382,"name":"bool","nodeType":"ElementaryTypeName","src":"5114:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4385,"mutability":"mutable","name":"result","nameLocation":"5141:6:24","nodeType":"VariableDeclaration","scope":4398,"src":"5128:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4384,"name":"bytes","nodeType":"ElementaryTypeName","src":"5128:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4392,"initialValue":{"arguments":[{"id":4390,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"5177:4:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4386,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"5151:6:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5158:4:24","memberName":"call","nodeType":"MemberAccess","src":"5151:11:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"5170:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5151:25:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5151:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5113:69:24"},{"condition":{"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5196:8:24","subExpression":{"id":4393,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"5197:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"5192:117:24","trueBody":{"id":4396,"nodeType":"Block","src":"5206:103:24","statements":[{"AST":{"nativeSrc":"5229:70:24","nodeType":"YulBlock","src":"5229:70:24","statements":[{"expression":{"arguments":[{"arguments":[{"name":"result","nativeSrc":"5258:6:24","nodeType":"YulIdentifier","src":"5258:6:24"},{"kind":"number","nativeSrc":"5266:2:24","nodeType":"YulLiteral","src":"5266:2:24","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5254:3:24","nodeType":"YulIdentifier","src":"5254:3:24"},"nativeSrc":"5254:15:24","nodeType":"YulFunctionCall","src":"5254:15:24"},{"arguments":[{"name":"result","nativeSrc":"5277:6:24","nodeType":"YulIdentifier","src":"5277:6:24"}],"functionName":{"name":"mload","nativeSrc":"5271:5:24","nodeType":"YulIdentifier","src":"5271:5:24"},"nativeSrc":"5271:13:24","nodeType":"YulFunctionCall","src":"5271:13:24"}],"functionName":{"name":"revert","nativeSrc":"5247:6:24","nodeType":"YulIdentifier","src":"5247:6:24"},"nativeSrc":"5247:38:24","nodeType":"YulFunctionCall","src":"5247:38:24"},"nativeSrc":"5247:38:24","nodeType":"YulExpressionStatement","src":"5247:38:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4385,"isOffset":false,"isSlot":false,"src":"5258:6:24","valueSize":1},{"declaration":4385,"isOffset":false,"isSlot":false,"src":"5277:6:24","valueSize":1}],"id":4395,"nodeType":"InlineAssembly","src":"5220:79:24"}]}}]},"id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"_call","nameLocation":"5038:5:24","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"target","nameLocation":"5052:6:24","nodeType":"VariableDeclaration","scope":4399,"src":"5044:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4374,"name":"address","nodeType":"ElementaryTypeName","src":"5044:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"value","nameLocation":"5068:5:24","nodeType":"VariableDeclaration","scope":4399,"src":"5060:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"5060:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"data","nameLocation":"5088:4:24","nodeType":"VariableDeclaration","scope":4399,"src":"5075:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4378,"name":"bytes","nodeType":"ElementaryTypeName","src":"5075:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5043:50:24"},"returnParameters":{"id":4381,"nodeType":"ParameterList","parameters":[],"src":"5103:0:24"},"scope":4445,"src":"5029:286:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4413,"nodeType":"Block","src":"5453:61:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":4409,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5501:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5493:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4407,"name":"address","nodeType":"ElementaryTypeName","src":"5493:7:24","typeDescriptions":{}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5493:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4404,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4220],"referencedDeclaration":4220,"src":"5470:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4028_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5483:9:24","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"5470:22:24","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4403,"id":4412,"nodeType":"Return","src":"5463:44:24"}]},"functionSelector":"c399ec88","id":4414,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"5410:10:24","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[],"src":"5420:2:24"},"returnParameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4414,"src":"5444:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5443:9:24"},"scope":4445,"src":"5401:113:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4430,"nodeType":"Block","src":"5634:72:24","statements":[{"expression":{"arguments":[{"arguments":[{"id":4426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5693:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5685:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4424,"name":"address","nodeType":"ElementaryTypeName","src":"5685:7:24","typeDescriptions":{}}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5685:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4418,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[4220],"referencedDeclaration":4220,"src":"5644:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_contract$_IEntryPoint_$4028_$","typeString":"function () view returns (contract IEntryPoint)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5657:9:24","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":4126,"src":"5644:22:24","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5674:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5678:5:24","memberName":"value","nodeType":"MemberAccess","src":"5674:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5644:40:24","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4429,"nodeType":"ExpressionStatement","src":"5644:55:24"}]},"documentation":{"id":4415,"nodeType":"StructuredDocumentation","src":"5520:72:24","text":" deposit more funds for this account in the entryPoint"},"functionSelector":"4a58db19","id":4431,"implemented":true,"kind":"function","modifiers":[],"name":"addDeposit","nameLocation":"5606:10:24","nodeType":"FunctionDefinition","parameters":{"id":4416,"nodeType":"ParameterList","parameters":[],"src":"5616:2:24"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[],"src":"5634:0:24"},"scope":4445,"src":"5597:109:24","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[770],"body":{"id":4443,"nodeType":"Block","src":"6137:58:24","statements":[{"expression":{"components":[{"id":4437,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"6148:17:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6147:19:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4439,"nodeType":"ExpressionStatement","src":"6147:19:24"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4440,"name":"_onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4258,"src":"6176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4442,"nodeType":"ExpressionStatement","src":"6176:12:24"}]},"id":4444,"implemented":true,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"6055:17:24","nodeType":"FunctionDefinition","overrides":{"id":4435,"nodeType":"OverrideSpecifier","overrides":[],"src":"6128:8:24"},"parameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"newImplementation","nameLocation":"6090:17:24","nodeType":"VariableDeclaration","scope":4444,"src":"6082:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"6082:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6072:41:24"},"returnParameters":{"id":4436,"nodeType":"ParameterList","parameters":[],"src":"6137:0:24"},"scope":4445,"src":"6046:149:24","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4446,"src":"1066:5131:24","usedErrors":[82,95,413,416,673,678,829,832,1548,1553,1558],"usedEvents":[61,421,4202]}],"src":"36:6349:24"},"id":24},"contracts/SmartWalletFactory.sol":{"ast":{"absolutePath":"contracts/SmartWalletFactory.sol","exportedSymbols":{"BaseAccount":[3257],"Create2":[1172],"ECDSA":[1885],"ERC1967Proxy":[47],"ERC1967Utils":[350],"IAccount":[3810],"IAggregator":[3844],"IERC1822Proxiable":[9],"IEntryPoint":[4028],"INonceManager":[4047],"IStakeManager":[4151],"Initializable":[650],"MessageHashUtils":[1959],"PackedUserOperation":[4173],"Proxy":[386],"SIG_VALIDATION_FAILED":[3262],"SIG_VALIDATION_SUCCESS":[3265],"SmartContractWallet":[4445],"SmartContractWalletFactory":[4617],"Strings":[1537],"UUPSUpgradeable":[816],"UserOperationLib":[3793],"ValidationData":[3273],"_packValidationData":[3370,3408],"_parseValidationData":[3333],"calldataKeccak":[3418],"min":[3436]},"id":4618,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4447,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"@openzeppelin/contracts/utils/Create2.sol","id":4448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4618,"sourceUnit":1173,"src":"62:51:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":4449,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4618,"sourceUnit":48,"src":"114:64:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SmartContractWallet.sol","file":"./SmartContractWallet.sol","id":4450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4618,"sourceUnit":4446,"src":"180:35:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SmartContractWalletFactory","contractDependencies":[47,4445],"contractKind":"contract","documentation":{"id":4451,"nodeType":"StructuredDocumentation","src":"217:394:25","text":" A sample factory contract for SmartContractWallet\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."},"fullyImplemented":true,"id":4617,"linearizedBaseContracts":[4617],"name":"SmartContractWalletFactory","nameLocation":"621:26:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"11464fbe","id":4454,"mutability":"immutable","name":"accountImplementation","nameLocation":"691:21:25","nodeType":"VariableDeclaration","scope":4617,"src":"654:58:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"},"typeName":{"id":4453,"nodeType":"UserDefinedTypeName","pathNode":{"id":4452,"name":"SmartContractWallet","nameLocations":["654:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":4445,"src":"654:19:25"},"referencedDeclaration":4445,"src":"654:19:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"visibility":"public"},{"constant":false,"functionSelector":"f6d62ece","id":4457,"mutability":"mutable","name":"allDeployedAddress","nameLocation":"736:18:25","nodeType":"VariableDeclaration","scope":4617,"src":"719:35:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"719:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4456,"nodeType":"ArrayTypeName","src":"719:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"0d253d76","id":4462,"mutability":"mutable","name":"getAccountAddress","nameLocation":"797:17:25","nodeType":"VariableDeclaration","scope":4617,"src":"760:54:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"typeName":{"id":4461,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"768:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"760:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4459,"name":"address","nodeType":"ElementaryTypeName","src":"779:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4460,"nodeType":"ArrayTypeName","src":"779:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"body":{"id":4476,"nodeType":"Block","src":"858:77:25","statements":[{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4468,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"868:21:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4472,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"916:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}],"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"892:23:25","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_contract$_IEntryPoint_$4028_$returns$_t_contract$_SmartContractWallet_$4445_$","typeString":"function (contract IEntryPoint) returns (contract SmartContractWallet)"},"typeName":{"id":4470,"nodeType":"UserDefinedTypeName","pathNode":{"id":4469,"name":"SmartContractWallet","nameLocations":["896:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":4445,"src":"896:19:25"},"referencedDeclaration":4445,"src":"896:19:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"892:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"src":"868:60:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"id":4475,"nodeType":"ExpressionStatement","src":"868:60:25"}]},"id":4477,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"_entryPoint","nameLocation":"845:11:25","nodeType":"VariableDeclaration","scope":4477,"src":"833:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"},"typeName":{"id":4464,"nodeType":"UserDefinedTypeName","pathNode":{"id":4463,"name":"IEntryPoint","nameLocations":["833:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"833:11:25"},"referencedDeclaration":4028,"src":"833:11:25","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4028","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"832:25:25"},"returnParameters":{"id":4467,"nodeType":"ParameterList","parameters":[],"src":"858:0:25"},"scope":4617,"src":"821:114:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4560,"nodeType":"Block","src":"1430:634:25","statements":[{"assignments":[4489],"declarations":[{"constant":false,"id":4489,"mutability":"mutable","name":"addr","nameLocation":"1448:4:25","nodeType":"VariableDeclaration","scope":4560,"src":"1440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4488,"name":"address","nodeType":"ElementaryTypeName","src":"1440:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4494,"initialValue":{"arguments":[{"id":4491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"1466:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4492,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"1473:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4490,"name":"getAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4616,"src":"1455:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) view returns (address)"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1440:38:25"},{"assignments":[4496],"declarations":[{"constant":false,"id":4496,"mutability":"mutable","name":"codeSize","nameLocation":"1496:8:25","nodeType":"VariableDeclaration","scope":4560,"src":"1488:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1488:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4500,"initialValue":{"expression":{"expression":{"id":4497,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1507:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:4:25","memberName":"code","nodeType":"MemberAccess","src":"1507:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1517:6:25","memberName":"length","nodeType":"MemberAccess","src":"1507:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1488:35:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"codeSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4496,"src":"1596:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1607:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1596:12:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4512,"nodeType":"IfStatement","src":"1592:84:25","trueBody":{"id":4511,"nodeType":"Block","src":"1610:66:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":4507,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4489,"src":"1659:4:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1651:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"1651:8:25","stateMutability":"payable","typeDescriptions":{}}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1651:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4504,"name":"SmartContractWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1631:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartContractWallet_$4445_$","typeString":"type(contract SmartContractWallet)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1631:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"functionReturnParameters":4487,"id":4510,"nodeType":"Return","src":"1624:41:25"}]}},{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4513,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"1685:3:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4527,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"1816:21:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1808:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4525,"name":"address","nodeType":"ElementaryTypeName","src":"1808:7:25","typeDescriptions":{}}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":4531,"name":"SmartContractWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1875:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartContractWallet_$4445_$","typeString":"type(contract SmartContractWallet)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1895:10:25","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"1875:30:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SmartContractWallet.initialize(address)"}},{"components":[{"id":4533,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"1908:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1907:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SmartContractWallet.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1860:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1864:10:25","memberName":"encodeCall","nodeType":"MemberAccess","src":"1860:14:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1860:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1749:16:25","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$47_$","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"},"typeName":{"id":4518,"nodeType":"UserDefinedTypeName","pathNode":{"id":4517,"name":"ERC1967Proxy","nameLocations":["1753:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":47,"src":"1753:12:25"},"referencedDeclaration":47,"src":"1753:12:25","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$47","typeString":"contract ERC1967Proxy"}}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["salt"],"nodeType":"FunctionCallOptions","options":[{"arguments":[{"id":4522,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4482,"src":"1780:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1772:7:25","typeDescriptions":{}}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1772:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"src":"1749:37:25","typeDescriptions":{"typeIdentifier":"t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$47_$salt","typeString":"function (address,bytes memory) payable returns (contract ERC1967Proxy)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1749:184:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC1967Proxy_$47","typeString":"contract ERC1967Proxy"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC1967Proxy_$47","typeString":"contract ERC1967Proxy"}],"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1724:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4515,"name":"address","nodeType":"ElementaryTypeName","src":"1724:8:25","stateMutability":"payable","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1724:223:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4514,"name":"SmartContractWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"1691:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartContractWallet_$4445_$","typeString":"type(contract SmartContractWallet)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1691:266:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"src":"1685:272:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"id":4540,"nodeType":"ExpressionStatement","src":"1685:272:25"},{"expression":{"arguments":[{"arguments":[{"id":4547,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"2005:3:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1997:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4545,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:25","typeDescriptions":{}}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1997:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":4541,"name":"getAccountAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"1967:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":4543,"indexExpression":{"id":4542,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4480,"src":"1985:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1967:24:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1992:4:25","memberName":"push","nodeType":"MemberAccess","src":"1967:29:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4550,"nodeType":"ExpressionStatement","src":"1967:43:25"},{"expression":{"arguments":[{"arguments":[{"id":4556,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"2052:3:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2044:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4554,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:25","typeDescriptions":{}}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2044:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4551,"name":"allDeployedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"2020:18:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2039:4:25","memberName":"push","nodeType":"MemberAccess","src":"2020:23:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:37:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4559,"nodeType":"ExpressionStatement","src":"2020:37:25"}]},"documentation":{"id":4478,"nodeType":"StructuredDocumentation","src":"941:369:25","text":" create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"},"functionSelector":"5fbfb9cf","id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"createAccount","nameLocation":"1324:13:25","nodeType":"FunctionDefinition","parameters":{"id":4483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"owner","nameLocation":"1355:5:25","nodeType":"VariableDeclaration","scope":4561,"src":"1347:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4482,"mutability":"mutable","name":"salt","nameLocation":"1378:4:25","nodeType":"VariableDeclaration","scope":4561,"src":"1370:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4481,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1337:51:25"},"returnParameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"ret","nameLocation":"1425:3:25","nodeType":"VariableDeclaration","scope":4561,"src":"1405:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"},"typeName":{"id":4485,"nodeType":"UserDefinedTypeName","pathNode":{"id":4484,"name":"SmartContractWallet","nameLocations":["1405:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":4445,"src":"1405:19:25"},"referencedDeclaration":4445,"src":"1405:19:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}},"visibility":"internal"}],"src":"1404:25:25"},"scope":4617,"src":"1315:749:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4573,"nodeType":"Block","src":"2177:55:25","statements":[{"expression":{"baseExpression":{"id":4569,"name":"getAccountAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"2194:17:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(address => address[] storage ref)"}},"id":4571,"indexExpression":{"id":4570,"name":"ownerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"2212:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2194:31:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4568,"id":4572,"nodeType":"Return","src":"2187:38:25"}]},"functionSelector":"805d09ab","id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAccountWithOwner","nameLocation":"2079:22:25","nodeType":"FunctionDefinition","parameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"ownerAddress","nameLocation":"2119:12:25","nodeType":"VariableDeclaration","scope":4574,"src":"2111:20:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2101:36:25"},"returnParameters":{"id":4568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4574,"src":"2159:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"2159:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4566,"nodeType":"ArrayTypeName","src":"2159:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2158:18:25"},"scope":4617,"src":"2070:162:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4615,"nodeType":"Block","src":"2458:566:25","statements":[{"expression":{"arguments":[{"arguments":[{"id":4588,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"2535:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2527:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2527:7:25","typeDescriptions":{}}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":4594,"name":"ERC1967Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":47,"src":"2636:12:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$47_$","typeString":"type(contract ERC1967Proxy)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_ERC1967Proxy_$47_$","typeString":"type(contract ERC1967Proxy)"}],"id":4593,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2631:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2631:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_ERC1967Proxy_$47","typeString":"type(contract ERC1967Proxy)"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2650:12:25","memberName":"creationCode","nodeType":"MemberAccess","src":"2631:31:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"id":4601,"name":"accountImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4454,"src":"2736:21:25","typeDescriptions":{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SmartContractWallet_$4445","typeString":"contract SmartContractWallet"}],"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2728:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4599,"name":"address","nodeType":"ElementaryTypeName","src":"2728:7:25","typeDescriptions":{}}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:30:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":4605,"name":"SmartContractWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4445,"src":"2836:19:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SmartContractWallet_$4445_$","typeString":"type(contract SmartContractWallet)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2856:10:25","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":4304,"src":"2836:30:25","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SmartContractWallet.initialize(address)"}},{"components":[{"id":4607,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"2901:5:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2900:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$returns$__$","typeString":"function SmartContractWallet.initialize(address)"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4603,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2788:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2792:10:25","memberName":"encodeCall","nodeType":"MemberAccess","src":"2788:14:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:149:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4597,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2688:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2692:6:25","memberName":"encode","nodeType":"MemberAccess","src":"2688:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2688:275:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4591,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2589:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2593:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"2589:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:396:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4590,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2558:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:445:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4584,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2487:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$1172_$","typeString":"type(library Create2)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2495:14:25","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":1157,"src":"2487:22:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,bytes32) view returns (address)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2487:530:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4583,"id":4614,"nodeType":"Return","src":"2468:549:25"}]},"documentation":{"id":4575,"nodeType":"StructuredDocumentation","src":"2238:114:25","text":" calculate the counterfactual address of this account as it would be returned by createAccount()"},"functionSelector":"8cb84e18","id":4616,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"2366:10:25","nodeType":"FunctionDefinition","parameters":{"id":4580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"owner","nameLocation":"2394:5:25","nodeType":"VariableDeclaration","scope":4616,"src":"2386:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4576,"name":"address","nodeType":"ElementaryTypeName","src":"2386:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"salt","nameLocation":"2417:4:25","nodeType":"VariableDeclaration","scope":4616,"src":"2409:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"2409:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2376:51:25"},"returnParameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4616,"src":"2449:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"2449:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2448:9:25"},"scope":4617,"src":"2357:667:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4618,"src":"612:2414:25","usedErrors":[],"usedEvents":[]}],"src":"36:3133:25"},"id":25}},"contracts":{"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{"@_34":{"entryPoint":null,"id":34,"parameterSlots":2,"returnSlots":0},"@_checkNonPayable_349":{"entryPoint":542,"id":349,"parameterSlots":0,"returnSlots":0},"@_revert_1068":{"entryPoint":762,"id":1068,"parameterSlots":1,"returnSlots":0},"@_setImplementation_135":{"entryPoint":193,"id":135,"parameterSlots":1,"returnSlots":0},"@functionDelegateCall_988":{"entryPoint":404,"id":988,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1204":{"entryPoint":603,"id":1204,"parameterSlots":1,"returnSlots":1},"@upgradeToAndCall_169":{"entryPoint":60,"id":169,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_1028":{"entryPoint":613,"id":1028,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1186,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory":{"entryPoint":1298,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1390,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1503,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1405,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1068,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":831,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1095,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":1432,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":883,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":851,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1144,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1019,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":972,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":945,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":950,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":846,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":841,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":955,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":901,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5141:26","nodeType":"YulBlock","src":"0:5141:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"611:79:26","nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nativeSrc":"668:16:26","nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:26","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:26","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:26","nodeType":"YulIdentifier","src":"670:6:26"},"nativeSrc":"670:12:26","nodeType":"YulFunctionCall","src":"670:12:26"},"nativeSrc":"670:12:26","nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:26","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nativeSrc":"659:5:26","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:26","nodeType":"YulIdentifier","src":"641:17:26"},"nativeSrc":"641:24:26","nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nativeSrc":"631:2:26","nodeType":"YulIdentifier","src":"631:2:26"},"nativeSrc":"631:35:26","nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nativeSrc":"624:6:26","nodeType":"YulIdentifier","src":"624:6:26"},"nativeSrc":"624:43:26","nodeType":"YulFunctionCall","src":"624:43:26"},"nativeSrc":"621:63:26","nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:26","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nativeSrc":"759:80:26","nodeType":"YulBlock","src":"759:80:26","statements":[{"nativeSrc":"769:22:26","nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:26","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nativeSrc":"778:5:26","nodeType":"YulIdentifier","src":"778:5:26"},"nativeSrc":"778:13:26","nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nativeSrc":"769:5:26","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:26","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:26","nodeType":"YulIdentifier","src":"800:26:26"},"nativeSrc":"800:33:26","nodeType":"YulFunctionCall","src":"800:33:26"},"nativeSrc":"800:33:26","nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:26","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nativeSrc":"745:3:26","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:26","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nativeSrc":"934:28:26","nodeType":"YulBlock","src":"934:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"951:1:26","nodeType":"YulLiteral","src":"951:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"954:1:26","nodeType":"YulLiteral","src":"954:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"944:6:26","nodeType":"YulIdentifier","src":"944:6:26"},"nativeSrc":"944:12:26","nodeType":"YulFunctionCall","src":"944:12:26"},"nativeSrc":"944:12:26","nodeType":"YulExpressionStatement","src":"944:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"845:117:26","nodeType":"YulFunctionDefinition","src":"845:117:26"},{"body":{"nativeSrc":"1057:28:26","nodeType":"YulBlock","src":"1057:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1074:1:26","nodeType":"YulLiteral","src":"1074:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1077:1:26","nodeType":"YulLiteral","src":"1077:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1067:6:26","nodeType":"YulIdentifier","src":"1067:6:26"},"nativeSrc":"1067:12:26","nodeType":"YulFunctionCall","src":"1067:12:26"},"nativeSrc":"1067:12:26","nodeType":"YulExpressionStatement","src":"1067:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"968:117:26","nodeType":"YulFunctionDefinition","src":"968:117:26"},{"body":{"nativeSrc":"1139:54:26","nodeType":"YulBlock","src":"1139:54:26","statements":[{"nativeSrc":"1149:38:26","nodeType":"YulAssignment","src":"1149:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1167:5:26","nodeType":"YulIdentifier","src":"1167:5:26"},{"kind":"number","nativeSrc":"1174:2:26","nodeType":"YulLiteral","src":"1174:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1163:3:26","nodeType":"YulIdentifier","src":"1163:3:26"},"nativeSrc":"1163:14:26","nodeType":"YulFunctionCall","src":"1163:14:26"},{"arguments":[{"kind":"number","nativeSrc":"1183:2:26","nodeType":"YulLiteral","src":"1183:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1179:3:26","nodeType":"YulIdentifier","src":"1179:3:26"},"nativeSrc":"1179:7:26","nodeType":"YulFunctionCall","src":"1179:7:26"}],"functionName":{"name":"and","nativeSrc":"1159:3:26","nodeType":"YulIdentifier","src":"1159:3:26"},"nativeSrc":"1159:28:26","nodeType":"YulFunctionCall","src":"1159:28:26"},"variableNames":[{"name":"result","nativeSrc":"1149:6:26","nodeType":"YulIdentifier","src":"1149:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1091:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1122:5:26","nodeType":"YulTypedName","src":"1122:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1132:6:26","nodeType":"YulTypedName","src":"1132:6:26","type":""}],"src":"1091:102:26"},{"body":{"nativeSrc":"1227:152:26","nodeType":"YulBlock","src":"1227:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1244:1:26","nodeType":"YulLiteral","src":"1244:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1247:77:26","nodeType":"YulLiteral","src":"1247:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1237:6:26","nodeType":"YulIdentifier","src":"1237:6:26"},"nativeSrc":"1237:88:26","nodeType":"YulFunctionCall","src":"1237:88:26"},"nativeSrc":"1237:88:26","nodeType":"YulExpressionStatement","src":"1237:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1341:1:26","nodeType":"YulLiteral","src":"1341:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"1344:4:26","nodeType":"YulLiteral","src":"1344:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1334:6:26","nodeType":"YulIdentifier","src":"1334:6:26"},"nativeSrc":"1334:15:26","nodeType":"YulFunctionCall","src":"1334:15:26"},"nativeSrc":"1334:15:26","nodeType":"YulExpressionStatement","src":"1334:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1365:1:26","nodeType":"YulLiteral","src":"1365:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1368:4:26","nodeType":"YulLiteral","src":"1368:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1358:6:26","nodeType":"YulIdentifier","src":"1358:6:26"},"nativeSrc":"1358:15:26","nodeType":"YulFunctionCall","src":"1358:15:26"},"nativeSrc":"1358:15:26","nodeType":"YulExpressionStatement","src":"1358:15:26"}]},"name":"panic_error_0x41","nativeSrc":"1199:180:26","nodeType":"YulFunctionDefinition","src":"1199:180:26"},{"body":{"nativeSrc":"1428:238:26","nodeType":"YulBlock","src":"1428:238:26","statements":[{"nativeSrc":"1438:58:26","nodeType":"YulVariableDeclaration","src":"1438:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"1460:6:26","nodeType":"YulIdentifier","src":"1460:6:26"},{"arguments":[{"name":"size","nativeSrc":"1490:4:26","nodeType":"YulIdentifier","src":"1490:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1468:21:26","nodeType":"YulIdentifier","src":"1468:21:26"},"nativeSrc":"1468:27:26","nodeType":"YulFunctionCall","src":"1468:27:26"}],"functionName":{"name":"add","nativeSrc":"1456:3:26","nodeType":"YulIdentifier","src":"1456:3:26"},"nativeSrc":"1456:40:26","nodeType":"YulFunctionCall","src":"1456:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"1442:10:26","nodeType":"YulTypedName","src":"1442:10:26","type":""}]},{"body":{"nativeSrc":"1607:22:26","nodeType":"YulBlock","src":"1607:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1609:16:26","nodeType":"YulIdentifier","src":"1609:16:26"},"nativeSrc":"1609:18:26","nodeType":"YulFunctionCall","src":"1609:18:26"},"nativeSrc":"1609:18:26","nodeType":"YulExpressionStatement","src":"1609:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1550:10:26","nodeType":"YulIdentifier","src":"1550:10:26"},{"kind":"number","nativeSrc":"1562:18:26","nodeType":"YulLiteral","src":"1562:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1547:2:26","nodeType":"YulIdentifier","src":"1547:2:26"},"nativeSrc":"1547:34:26","nodeType":"YulFunctionCall","src":"1547:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1586:10:26","nodeType":"YulIdentifier","src":"1586:10:26"},{"name":"memPtr","nativeSrc":"1598:6:26","nodeType":"YulIdentifier","src":"1598:6:26"}],"functionName":{"name":"lt","nativeSrc":"1583:2:26","nodeType":"YulIdentifier","src":"1583:2:26"},"nativeSrc":"1583:22:26","nodeType":"YulFunctionCall","src":"1583:22:26"}],"functionName":{"name":"or","nativeSrc":"1544:2:26","nodeType":"YulIdentifier","src":"1544:2:26"},"nativeSrc":"1544:62:26","nodeType":"YulFunctionCall","src":"1544:62:26"},"nativeSrc":"1541:88:26","nodeType":"YulIf","src":"1541:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1645:2:26","nodeType":"YulLiteral","src":"1645:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1649:10:26","nodeType":"YulIdentifier","src":"1649:10:26"}],"functionName":{"name":"mstore","nativeSrc":"1638:6:26","nodeType":"YulIdentifier","src":"1638:6:26"},"nativeSrc":"1638:22:26","nodeType":"YulFunctionCall","src":"1638:22:26"},"nativeSrc":"1638:22:26","nodeType":"YulExpressionStatement","src":"1638:22:26"}]},"name":"finalize_allocation","nativeSrc":"1385:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1414:6:26","nodeType":"YulTypedName","src":"1414:6:26","type":""},{"name":"size","nativeSrc":"1422:4:26","nodeType":"YulTypedName","src":"1422:4:26","type":""}],"src":"1385:281:26"},{"body":{"nativeSrc":"1713:88:26","nodeType":"YulBlock","src":"1713:88:26","statements":[{"nativeSrc":"1723:30:26","nodeType":"YulAssignment","src":"1723:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1733:18:26","nodeType":"YulIdentifier","src":"1733:18:26"},"nativeSrc":"1733:20:26","nodeType":"YulFunctionCall","src":"1733:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"1723:6:26","nodeType":"YulIdentifier","src":"1723:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1782:6:26","nodeType":"YulIdentifier","src":"1782:6:26"},{"name":"size","nativeSrc":"1790:4:26","nodeType":"YulIdentifier","src":"1790:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1762:19:26","nodeType":"YulIdentifier","src":"1762:19:26"},"nativeSrc":"1762:33:26","nodeType":"YulFunctionCall","src":"1762:33:26"},"nativeSrc":"1762:33:26","nodeType":"YulExpressionStatement","src":"1762:33:26"}]},"name":"allocate_memory","nativeSrc":"1672:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1697:4:26","nodeType":"YulTypedName","src":"1697:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1706:6:26","nodeType":"YulTypedName","src":"1706:6:26","type":""}],"src":"1672:129:26"},{"body":{"nativeSrc":"1873:241:26","nodeType":"YulBlock","src":"1873:241:26","statements":[{"body":{"nativeSrc":"1978:22:26","nodeType":"YulBlock","src":"1978:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1980:16:26","nodeType":"YulIdentifier","src":"1980:16:26"},"nativeSrc":"1980:18:26","nodeType":"YulFunctionCall","src":"1980:18:26"},"nativeSrc":"1980:18:26","nodeType":"YulExpressionStatement","src":"1980:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1950:6:26","nodeType":"YulIdentifier","src":"1950:6:26"},{"kind":"number","nativeSrc":"1958:18:26","nodeType":"YulLiteral","src":"1958:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1947:2:26","nodeType":"YulIdentifier","src":"1947:2:26"},"nativeSrc":"1947:30:26","nodeType":"YulFunctionCall","src":"1947:30:26"},"nativeSrc":"1944:56:26","nodeType":"YulIf","src":"1944:56:26"},{"nativeSrc":"2010:37:26","nodeType":"YulAssignment","src":"2010:37:26","value":{"arguments":[{"name":"length","nativeSrc":"2040:6:26","nodeType":"YulIdentifier","src":"2040:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2018:21:26","nodeType":"YulIdentifier","src":"2018:21:26"},"nativeSrc":"2018:29:26","nodeType":"YulFunctionCall","src":"2018:29:26"},"variableNames":[{"name":"size","nativeSrc":"2010:4:26","nodeType":"YulIdentifier","src":"2010:4:26"}]},{"nativeSrc":"2084:23:26","nodeType":"YulAssignment","src":"2084:23:26","value":{"arguments":[{"name":"size","nativeSrc":"2096:4:26","nodeType":"YulIdentifier","src":"2096:4:26"},{"kind":"number","nativeSrc":"2102:4:26","nodeType":"YulLiteral","src":"2102:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2092:3:26","nodeType":"YulIdentifier","src":"2092:3:26"},"nativeSrc":"2092:15:26","nodeType":"YulFunctionCall","src":"2092:15:26"},"variableNames":[{"name":"size","nativeSrc":"2084:4:26","nodeType":"YulIdentifier","src":"2084:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"1807:307:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1857:6:26","nodeType":"YulTypedName","src":"1857:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1868:4:26","nodeType":"YulTypedName","src":"1868:4:26","type":""}],"src":"1807:307:26"},{"body":{"nativeSrc":"2182:184:26","nodeType":"YulBlock","src":"2182:184:26","statements":[{"nativeSrc":"2192:10:26","nodeType":"YulVariableDeclaration","src":"2192:10:26","value":{"kind":"number","nativeSrc":"2201:1:26","nodeType":"YulLiteral","src":"2201:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"2196:1:26","nodeType":"YulTypedName","src":"2196:1:26","type":""}]},{"body":{"nativeSrc":"2261:63:26","nodeType":"YulBlock","src":"2261:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2286:3:26","nodeType":"YulIdentifier","src":"2286:3:26"},{"name":"i","nativeSrc":"2291:1:26","nodeType":"YulIdentifier","src":"2291:1:26"}],"functionName":{"name":"add","nativeSrc":"2282:3:26","nodeType":"YulIdentifier","src":"2282:3:26"},"nativeSrc":"2282:11:26","nodeType":"YulFunctionCall","src":"2282:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2305:3:26","nodeType":"YulIdentifier","src":"2305:3:26"},{"name":"i","nativeSrc":"2310:1:26","nodeType":"YulIdentifier","src":"2310:1:26"}],"functionName":{"name":"add","nativeSrc":"2301:3:26","nodeType":"YulIdentifier","src":"2301:3:26"},"nativeSrc":"2301:11:26","nodeType":"YulFunctionCall","src":"2301:11:26"}],"functionName":{"name":"mload","nativeSrc":"2295:5:26","nodeType":"YulIdentifier","src":"2295:5:26"},"nativeSrc":"2295:18:26","nodeType":"YulFunctionCall","src":"2295:18:26"}],"functionName":{"name":"mstore","nativeSrc":"2275:6:26","nodeType":"YulIdentifier","src":"2275:6:26"},"nativeSrc":"2275:39:26","nodeType":"YulFunctionCall","src":"2275:39:26"},"nativeSrc":"2275:39:26","nodeType":"YulExpressionStatement","src":"2275:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"2222:1:26","nodeType":"YulIdentifier","src":"2222:1:26"},{"name":"length","nativeSrc":"2225:6:26","nodeType":"YulIdentifier","src":"2225:6:26"}],"functionName":{"name":"lt","nativeSrc":"2219:2:26","nodeType":"YulIdentifier","src":"2219:2:26"},"nativeSrc":"2219:13:26","nodeType":"YulFunctionCall","src":"2219:13:26"},"nativeSrc":"2211:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"2233:19:26","nodeType":"YulBlock","src":"2233:19:26","statements":[{"nativeSrc":"2235:15:26","nodeType":"YulAssignment","src":"2235:15:26","value":{"arguments":[{"name":"i","nativeSrc":"2244:1:26","nodeType":"YulIdentifier","src":"2244:1:26"},{"kind":"number","nativeSrc":"2247:2:26","nodeType":"YulLiteral","src":"2247:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2240:3:26","nodeType":"YulIdentifier","src":"2240:3:26"},"nativeSrc":"2240:10:26","nodeType":"YulFunctionCall","src":"2240:10:26"},"variableNames":[{"name":"i","nativeSrc":"2235:1:26","nodeType":"YulIdentifier","src":"2235:1:26"}]}]},"pre":{"nativeSrc":"2215:3:26","nodeType":"YulBlock","src":"2215:3:26","statements":[]},"src":"2211:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2344:3:26","nodeType":"YulIdentifier","src":"2344:3:26"},{"name":"length","nativeSrc":"2349:6:26","nodeType":"YulIdentifier","src":"2349:6:26"}],"functionName":{"name":"add","nativeSrc":"2340:3:26","nodeType":"YulIdentifier","src":"2340:3:26"},"nativeSrc":"2340:16:26","nodeType":"YulFunctionCall","src":"2340:16:26"},{"kind":"number","nativeSrc":"2358:1:26","nodeType":"YulLiteral","src":"2358:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2333:6:26","nodeType":"YulIdentifier","src":"2333:6:26"},"nativeSrc":"2333:27:26","nodeType":"YulFunctionCall","src":"2333:27:26"},"nativeSrc":"2333:27:26","nodeType":"YulExpressionStatement","src":"2333:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2120:246:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2164:3:26","nodeType":"YulTypedName","src":"2164:3:26","type":""},{"name":"dst","nativeSrc":"2169:3:26","nodeType":"YulTypedName","src":"2169:3:26","type":""},{"name":"length","nativeSrc":"2174:6:26","nodeType":"YulTypedName","src":"2174:6:26","type":""}],"src":"2120:246:26"},{"body":{"nativeSrc":"2466:338:26","nodeType":"YulBlock","src":"2466:338:26","statements":[{"nativeSrc":"2476:74:26","nodeType":"YulAssignment","src":"2476:74:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2542:6:26","nodeType":"YulIdentifier","src":"2542:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"2501:40:26","nodeType":"YulIdentifier","src":"2501:40:26"},"nativeSrc":"2501:48:26","nodeType":"YulFunctionCall","src":"2501:48:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"2485:15:26","nodeType":"YulIdentifier","src":"2485:15:26"},"nativeSrc":"2485:65:26","nodeType":"YulFunctionCall","src":"2485:65:26"},"variableNames":[{"name":"array","nativeSrc":"2476:5:26","nodeType":"YulIdentifier","src":"2476:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2566:5:26","nodeType":"YulIdentifier","src":"2566:5:26"},{"name":"length","nativeSrc":"2573:6:26","nodeType":"YulIdentifier","src":"2573:6:26"}],"functionName":{"name":"mstore","nativeSrc":"2559:6:26","nodeType":"YulIdentifier","src":"2559:6:26"},"nativeSrc":"2559:21:26","nodeType":"YulFunctionCall","src":"2559:21:26"},"nativeSrc":"2559:21:26","nodeType":"YulExpressionStatement","src":"2559:21:26"},{"nativeSrc":"2589:27:26","nodeType":"YulVariableDeclaration","src":"2589:27:26","value":{"arguments":[{"name":"array","nativeSrc":"2604:5:26","nodeType":"YulIdentifier","src":"2604:5:26"},{"kind":"number","nativeSrc":"2611:4:26","nodeType":"YulLiteral","src":"2611:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2600:3:26","nodeType":"YulIdentifier","src":"2600:3:26"},"nativeSrc":"2600:16:26","nodeType":"YulFunctionCall","src":"2600:16:26"},"variables":[{"name":"dst","nativeSrc":"2593:3:26","nodeType":"YulTypedName","src":"2593:3:26","type":""}]},{"body":{"nativeSrc":"2654:83:26","nodeType":"YulBlock","src":"2654:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2656:77:26","nodeType":"YulIdentifier","src":"2656:77:26"},"nativeSrc":"2656:79:26","nodeType":"YulFunctionCall","src":"2656:79:26"},"nativeSrc":"2656:79:26","nodeType":"YulExpressionStatement","src":"2656:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2635:3:26","nodeType":"YulIdentifier","src":"2635:3:26"},{"name":"length","nativeSrc":"2640:6:26","nodeType":"YulIdentifier","src":"2640:6:26"}],"functionName":{"name":"add","nativeSrc":"2631:3:26","nodeType":"YulIdentifier","src":"2631:3:26"},"nativeSrc":"2631:16:26","nodeType":"YulFunctionCall","src":"2631:16:26"},{"name":"end","nativeSrc":"2649:3:26","nodeType":"YulIdentifier","src":"2649:3:26"}],"functionName":{"name":"gt","nativeSrc":"2628:2:26","nodeType":"YulIdentifier","src":"2628:2:26"},"nativeSrc":"2628:25:26","nodeType":"YulFunctionCall","src":"2628:25:26"},"nativeSrc":"2625:112:26","nodeType":"YulIf","src":"2625:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2781:3:26","nodeType":"YulIdentifier","src":"2781:3:26"},{"name":"dst","nativeSrc":"2786:3:26","nodeType":"YulIdentifier","src":"2786:3:26"},{"name":"length","nativeSrc":"2791:6:26","nodeType":"YulIdentifier","src":"2791:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2746:34:26","nodeType":"YulIdentifier","src":"2746:34:26"},"nativeSrc":"2746:52:26","nodeType":"YulFunctionCall","src":"2746:52:26"},"nativeSrc":"2746:52:26","nodeType":"YulExpressionStatement","src":"2746:52:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nativeSrc":"2372:432:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2439:3:26","nodeType":"YulTypedName","src":"2439:3:26","type":""},{"name":"length","nativeSrc":"2444:6:26","nodeType":"YulTypedName","src":"2444:6:26","type":""},{"name":"end","nativeSrc":"2452:3:26","nodeType":"YulTypedName","src":"2452:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2460:5:26","nodeType":"YulTypedName","src":"2460:5:26","type":""}],"src":"2372:432:26"},{"body":{"nativeSrc":"2895:281:26","nodeType":"YulBlock","src":"2895:281:26","statements":[{"body":{"nativeSrc":"2944:83:26","nodeType":"YulBlock","src":"2944:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2946:77:26","nodeType":"YulIdentifier","src":"2946:77:26"},"nativeSrc":"2946:79:26","nodeType":"YulFunctionCall","src":"2946:79:26"},"nativeSrc":"2946:79:26","nodeType":"YulExpressionStatement","src":"2946:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2923:6:26","nodeType":"YulIdentifier","src":"2923:6:26"},{"kind":"number","nativeSrc":"2931:4:26","nodeType":"YulLiteral","src":"2931:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2919:3:26","nodeType":"YulIdentifier","src":"2919:3:26"},"nativeSrc":"2919:17:26","nodeType":"YulFunctionCall","src":"2919:17:26"},{"name":"end","nativeSrc":"2938:3:26","nodeType":"YulIdentifier","src":"2938:3:26"}],"functionName":{"name":"slt","nativeSrc":"2915:3:26","nodeType":"YulIdentifier","src":"2915:3:26"},"nativeSrc":"2915:27:26","nodeType":"YulFunctionCall","src":"2915:27:26"}],"functionName":{"name":"iszero","nativeSrc":"2908:6:26","nodeType":"YulIdentifier","src":"2908:6:26"},"nativeSrc":"2908:35:26","nodeType":"YulFunctionCall","src":"2908:35:26"},"nativeSrc":"2905:122:26","nodeType":"YulIf","src":"2905:122:26"},{"nativeSrc":"3036:27:26","nodeType":"YulVariableDeclaration","src":"3036:27:26","value":{"arguments":[{"name":"offset","nativeSrc":"3056:6:26","nodeType":"YulIdentifier","src":"3056:6:26"}],"functionName":{"name":"mload","nativeSrc":"3050:5:26","nodeType":"YulIdentifier","src":"3050:5:26"},"nativeSrc":"3050:13:26","nodeType":"YulFunctionCall","src":"3050:13:26"},"variables":[{"name":"length","nativeSrc":"3040:6:26","nodeType":"YulTypedName","src":"3040:6:26","type":""}]},{"nativeSrc":"3072:98:26","nodeType":"YulAssignment","src":"3072:98:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3143:6:26","nodeType":"YulIdentifier","src":"3143:6:26"},{"kind":"number","nativeSrc":"3151:4:26","nodeType":"YulLiteral","src":"3151:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3139:3:26","nodeType":"YulIdentifier","src":"3139:3:26"},"nativeSrc":"3139:17:26","nodeType":"YulFunctionCall","src":"3139:17:26"},{"name":"length","nativeSrc":"3158:6:26","nodeType":"YulIdentifier","src":"3158:6:26"},{"name":"end","nativeSrc":"3166:3:26","nodeType":"YulIdentifier","src":"3166:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nativeSrc":"3081:57:26","nodeType":"YulIdentifier","src":"3081:57:26"},"nativeSrc":"3081:89:26","nodeType":"YulFunctionCall","src":"3081:89:26"},"variableNames":[{"name":"array","nativeSrc":"3072:5:26","nodeType":"YulIdentifier","src":"3072:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nativeSrc":"2823:353:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2873:6:26","nodeType":"YulTypedName","src":"2873:6:26","type":""},{"name":"end","nativeSrc":"2881:3:26","nodeType":"YulTypedName","src":"2881:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2889:5:26","nodeType":"YulTypedName","src":"2889:5:26","type":""}],"src":"2823:353:26"},{"body":{"nativeSrc":"3285:575:26","nodeType":"YulBlock","src":"3285:575:26","statements":[{"body":{"nativeSrc":"3331:83:26","nodeType":"YulBlock","src":"3331:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3333:77:26","nodeType":"YulIdentifier","src":"3333:77:26"},"nativeSrc":"3333:79:26","nodeType":"YulFunctionCall","src":"3333:79:26"},"nativeSrc":"3333:79:26","nodeType":"YulExpressionStatement","src":"3333:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3306:7:26","nodeType":"YulIdentifier","src":"3306:7:26"},{"name":"headStart","nativeSrc":"3315:9:26","nodeType":"YulIdentifier","src":"3315:9:26"}],"functionName":{"name":"sub","nativeSrc":"3302:3:26","nodeType":"YulIdentifier","src":"3302:3:26"},"nativeSrc":"3302:23:26","nodeType":"YulFunctionCall","src":"3302:23:26"},{"kind":"number","nativeSrc":"3327:2:26","nodeType":"YulLiteral","src":"3327:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3298:3:26","nodeType":"YulIdentifier","src":"3298:3:26"},"nativeSrc":"3298:32:26","nodeType":"YulFunctionCall","src":"3298:32:26"},"nativeSrc":"3295:119:26","nodeType":"YulIf","src":"3295:119:26"},{"nativeSrc":"3424:128:26","nodeType":"YulBlock","src":"3424:128:26","statements":[{"nativeSrc":"3439:15:26","nodeType":"YulVariableDeclaration","src":"3439:15:26","value":{"kind":"number","nativeSrc":"3453:1:26","nodeType":"YulLiteral","src":"3453:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3443:6:26","nodeType":"YulTypedName","src":"3443:6:26","type":""}]},{"nativeSrc":"3468:74:26","nodeType":"YulAssignment","src":"3468:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3514:9:26","nodeType":"YulIdentifier","src":"3514:9:26"},{"name":"offset","nativeSrc":"3525:6:26","nodeType":"YulIdentifier","src":"3525:6:26"}],"functionName":{"name":"add","nativeSrc":"3510:3:26","nodeType":"YulIdentifier","src":"3510:3:26"},"nativeSrc":"3510:22:26","nodeType":"YulFunctionCall","src":"3510:22:26"},{"name":"dataEnd","nativeSrc":"3534:7:26","nodeType":"YulIdentifier","src":"3534:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"3478:31:26","nodeType":"YulIdentifier","src":"3478:31:26"},"nativeSrc":"3478:64:26","nodeType":"YulFunctionCall","src":"3478:64:26"},"variableNames":[{"name":"value0","nativeSrc":"3468:6:26","nodeType":"YulIdentifier","src":"3468:6:26"}]}]},{"nativeSrc":"3562:291:26","nodeType":"YulBlock","src":"3562:291:26","statements":[{"nativeSrc":"3577:39:26","nodeType":"YulVariableDeclaration","src":"3577:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3601:9:26","nodeType":"YulIdentifier","src":"3601:9:26"},{"kind":"number","nativeSrc":"3612:2:26","nodeType":"YulLiteral","src":"3612:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3597:3:26","nodeType":"YulIdentifier","src":"3597:3:26"},"nativeSrc":"3597:18:26","nodeType":"YulFunctionCall","src":"3597:18:26"}],"functionName":{"name":"mload","nativeSrc":"3591:5:26","nodeType":"YulIdentifier","src":"3591:5:26"},"nativeSrc":"3591:25:26","nodeType":"YulFunctionCall","src":"3591:25:26"},"variables":[{"name":"offset","nativeSrc":"3581:6:26","nodeType":"YulTypedName","src":"3581:6:26","type":""}]},{"body":{"nativeSrc":"3663:83:26","nodeType":"YulBlock","src":"3663:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3665:77:26","nodeType":"YulIdentifier","src":"3665:77:26"},"nativeSrc":"3665:79:26","nodeType":"YulFunctionCall","src":"3665:79:26"},"nativeSrc":"3665:79:26","nodeType":"YulExpressionStatement","src":"3665:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3635:6:26","nodeType":"YulIdentifier","src":"3635:6:26"},{"kind":"number","nativeSrc":"3643:18:26","nodeType":"YulLiteral","src":"3643:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3632:2:26","nodeType":"YulIdentifier","src":"3632:2:26"},"nativeSrc":"3632:30:26","nodeType":"YulFunctionCall","src":"3632:30:26"},"nativeSrc":"3629:117:26","nodeType":"YulIf","src":"3629:117:26"},{"nativeSrc":"3760:83:26","nodeType":"YulAssignment","src":"3760:83:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3815:9:26","nodeType":"YulIdentifier","src":"3815:9:26"},{"name":"offset","nativeSrc":"3826:6:26","nodeType":"YulIdentifier","src":"3826:6:26"}],"functionName":{"name":"add","nativeSrc":"3811:3:26","nodeType":"YulIdentifier","src":"3811:3:26"},"nativeSrc":"3811:22:26","nodeType":"YulFunctionCall","src":"3811:22:26"},{"name":"dataEnd","nativeSrc":"3835:7:26","nodeType":"YulIdentifier","src":"3835:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nativeSrc":"3770:40:26","nodeType":"YulIdentifier","src":"3770:40:26"},"nativeSrc":"3770:73:26","nodeType":"YulFunctionCall","src":"3770:73:26"},"variableNames":[{"name":"value1","nativeSrc":"3760:6:26","nodeType":"YulIdentifier","src":"3760:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory","nativeSrc":"3182:678:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3247:9:26","nodeType":"YulTypedName","src":"3247:9:26","type":""},{"name":"dataEnd","nativeSrc":"3258:7:26","nodeType":"YulTypedName","src":"3258:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3270:6:26","nodeType":"YulTypedName","src":"3270:6:26","type":""},{"name":"value1","nativeSrc":"3278:6:26","nodeType":"YulTypedName","src":"3278:6:26","type":""}],"src":"3182:678:26"},{"body":{"nativeSrc":"3931:53:26","nodeType":"YulBlock","src":"3931:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3948:3:26","nodeType":"YulIdentifier","src":"3948:3:26"},{"arguments":[{"name":"value","nativeSrc":"3971:5:26","nodeType":"YulIdentifier","src":"3971:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3953:17:26","nodeType":"YulIdentifier","src":"3953:17:26"},"nativeSrc":"3953:24:26","nodeType":"YulFunctionCall","src":"3953:24:26"}],"functionName":{"name":"mstore","nativeSrc":"3941:6:26","nodeType":"YulIdentifier","src":"3941:6:26"},"nativeSrc":"3941:37:26","nodeType":"YulFunctionCall","src":"3941:37:26"},"nativeSrc":"3941:37:26","nodeType":"YulExpressionStatement","src":"3941:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3866:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3919:5:26","nodeType":"YulTypedName","src":"3919:5:26","type":""},{"name":"pos","nativeSrc":"3926:3:26","nodeType":"YulTypedName","src":"3926:3:26","type":""}],"src":"3866:118:26"},{"body":{"nativeSrc":"4088:124:26","nodeType":"YulBlock","src":"4088:124:26","statements":[{"nativeSrc":"4098:26:26","nodeType":"YulAssignment","src":"4098:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"4110:9:26","nodeType":"YulIdentifier","src":"4110:9:26"},{"kind":"number","nativeSrc":"4121:2:26","nodeType":"YulLiteral","src":"4121:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4106:3:26","nodeType":"YulIdentifier","src":"4106:3:26"},"nativeSrc":"4106:18:26","nodeType":"YulFunctionCall","src":"4106:18:26"},"variableNames":[{"name":"tail","nativeSrc":"4098:4:26","nodeType":"YulIdentifier","src":"4098:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4178:6:26","nodeType":"YulIdentifier","src":"4178:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"4191:9:26","nodeType":"YulIdentifier","src":"4191:9:26"},{"kind":"number","nativeSrc":"4202:1:26","nodeType":"YulLiteral","src":"4202:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4187:3:26","nodeType":"YulIdentifier","src":"4187:3:26"},"nativeSrc":"4187:17:26","nodeType":"YulFunctionCall","src":"4187:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4134:43:26","nodeType":"YulIdentifier","src":"4134:43:26"},"nativeSrc":"4134:71:26","nodeType":"YulFunctionCall","src":"4134:71:26"},"nativeSrc":"4134:71:26","nodeType":"YulExpressionStatement","src":"4134:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3990:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4060:9:26","nodeType":"YulTypedName","src":"4060:9:26","type":""},{"name":"value0","nativeSrc":"4072:6:26","nodeType":"YulTypedName","src":"4072:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4083:4:26","nodeType":"YulTypedName","src":"4083:4:26","type":""}],"src":"3990:222:26"},{"body":{"nativeSrc":"4276:40:26","nodeType":"YulBlock","src":"4276:40:26","statements":[{"nativeSrc":"4287:22:26","nodeType":"YulAssignment","src":"4287:22:26","value":{"arguments":[{"name":"value","nativeSrc":"4303:5:26","nodeType":"YulIdentifier","src":"4303:5:26"}],"functionName":{"name":"mload","nativeSrc":"4297:5:26","nodeType":"YulIdentifier","src":"4297:5:26"},"nativeSrc":"4297:12:26","nodeType":"YulFunctionCall","src":"4297:12:26"},"variableNames":[{"name":"length","nativeSrc":"4287:6:26","nodeType":"YulIdentifier","src":"4287:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"4218:98:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4259:5:26","nodeType":"YulTypedName","src":"4259:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4269:6:26","nodeType":"YulTypedName","src":"4269:6:26","type":""}],"src":"4218:98:26"},{"body":{"nativeSrc":"4435:34:26","nodeType":"YulBlock","src":"4435:34:26","statements":[{"nativeSrc":"4445:18:26","nodeType":"YulAssignment","src":"4445:18:26","value":{"name":"pos","nativeSrc":"4460:3:26","nodeType":"YulIdentifier","src":"4460:3:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"4445:11:26","nodeType":"YulIdentifier","src":"4445:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4322:147:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4407:3:26","nodeType":"YulTypedName","src":"4407:3:26","type":""},{"name":"length","nativeSrc":"4412:6:26","nodeType":"YulTypedName","src":"4412:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4423:11:26","nodeType":"YulTypedName","src":"4423:11:26","type":""}],"src":"4322:147:26"},{"body":{"nativeSrc":"4583:278:26","nodeType":"YulBlock","src":"4583:278:26","statements":[{"nativeSrc":"4593:52:26","nodeType":"YulVariableDeclaration","src":"4593:52:26","value":{"arguments":[{"name":"value","nativeSrc":"4639:5:26","nodeType":"YulIdentifier","src":"4639:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"4607:31:26","nodeType":"YulIdentifier","src":"4607:31:26"},"nativeSrc":"4607:38:26","nodeType":"YulFunctionCall","src":"4607:38:26"},"variables":[{"name":"length","nativeSrc":"4597:6:26","nodeType":"YulTypedName","src":"4597:6:26","type":""}]},{"nativeSrc":"4654:95:26","nodeType":"YulAssignment","src":"4654:95:26","value":{"arguments":[{"name":"pos","nativeSrc":"4737:3:26","nodeType":"YulIdentifier","src":"4737:3:26"},{"name":"length","nativeSrc":"4742:6:26","nodeType":"YulIdentifier","src":"4742:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4661:75:26","nodeType":"YulIdentifier","src":"4661:75:26"},"nativeSrc":"4661:88:26","nodeType":"YulFunctionCall","src":"4661:88:26"},"variableNames":[{"name":"pos","nativeSrc":"4654:3:26","nodeType":"YulIdentifier","src":"4654:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4797:5:26","nodeType":"YulIdentifier","src":"4797:5:26"},{"kind":"number","nativeSrc":"4804:4:26","nodeType":"YulLiteral","src":"4804:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4793:3:26","nodeType":"YulIdentifier","src":"4793:3:26"},"nativeSrc":"4793:16:26","nodeType":"YulFunctionCall","src":"4793:16:26"},{"name":"pos","nativeSrc":"4811:3:26","nodeType":"YulIdentifier","src":"4811:3:26"},{"name":"length","nativeSrc":"4816:6:26","nodeType":"YulIdentifier","src":"4816:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4758:34:26","nodeType":"YulIdentifier","src":"4758:34:26"},"nativeSrc":"4758:65:26","nodeType":"YulFunctionCall","src":"4758:65:26"},"nativeSrc":"4758:65:26","nodeType":"YulExpressionStatement","src":"4758:65:26"},{"nativeSrc":"4832:23:26","nodeType":"YulAssignment","src":"4832:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"4843:3:26","nodeType":"YulIdentifier","src":"4843:3:26"},{"name":"length","nativeSrc":"4848:6:26","nodeType":"YulIdentifier","src":"4848:6:26"}],"functionName":{"name":"add","nativeSrc":"4839:3:26","nodeType":"YulIdentifier","src":"4839:3:26"},"nativeSrc":"4839:16:26","nodeType":"YulFunctionCall","src":"4839:16:26"},"variableNames":[{"name":"end","nativeSrc":"4832:3:26","nodeType":"YulIdentifier","src":"4832:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"4475:386:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:26","nodeType":"YulTypedName","src":"4564:5:26","type":""},{"name":"pos","nativeSrc":"4571:3:26","nodeType":"YulTypedName","src":"4571:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4579:3:26","nodeType":"YulTypedName","src":"4579:3:26","type":""}],"src":"4475:386:26"},{"body":{"nativeSrc":"5001:137:26","nodeType":"YulBlock","src":"5001:137:26","statements":[{"nativeSrc":"5012:100:26","nodeType":"YulAssignment","src":"5012:100:26","value":{"arguments":[{"name":"value0","nativeSrc":"5099:6:26","nodeType":"YulIdentifier","src":"5099:6:26"},{"name":"pos","nativeSrc":"5108:3:26","nodeType":"YulIdentifier","src":"5108:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"5019:79:26","nodeType":"YulIdentifier","src":"5019:79:26"},"nativeSrc":"5019:93:26","nodeType":"YulFunctionCall","src":"5019:93:26"},"variableNames":[{"name":"pos","nativeSrc":"5012:3:26","nodeType":"YulIdentifier","src":"5012:3:26"}]},{"nativeSrc":"5122:10:26","nodeType":"YulAssignment","src":"5122:10:26","value":{"name":"pos","nativeSrc":"5129:3:26","nodeType":"YulIdentifier","src":"5129:3:26"},"variableNames":[{"name":"end","nativeSrc":"5122:3:26","nodeType":"YulIdentifier","src":"5122:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"4867:271:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4980:3:26","nodeType":"YulTypedName","src":"4980:3:26","type":""},{"name":"value0","nativeSrc":"4986:6:26","nodeType":"YulTypedName","src":"4986:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4997:3:26","nodeType":"YulTypedName","src":"4997:3:26","type":""}],"src":"4867:271:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220efb0453644e06fc30c00e319e2a4f2c1a809d39eca9642ae9d97060ab802f30a64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB0 GASLIMIT CALLDATASIZE PREVRANDAO 0xE0 PUSH16 0xC30C00E319E2A4F2C1A809D39ECA9642 0xAE SWAP14 SWAP8 MOD EXP 0xB8 MUL RETURN EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"599:1116:1:-:0;;;1080:133;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1154:52;1184:14;1200:5;1154:29;;;:52;;:::i;:::-;1080:133;;599:1116;;2779:335:2;2870:37;2889:17;2870:18;;;:37;;:::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;;;:53;;:::i;:::-;;2960:148;;;3079:18;:16;;;:18;;:::i;:::-;2960:148;2779:335;;:::o;2186:281::-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;;;:47;;:::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:7:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;;;:55;;:::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:2:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;1684:190:9:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;4625:582:7:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;;;:19;;:::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:26;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:307::-;1868:4;1958:18;1950:6;1947:30;1944:56;;;1980:18;;:::i;:::-;1944:56;2018:29;2040:6;2018:29;:::i;:::-;2010:37;;2102:4;2096;2092:15;2084:23;;1807:307;;;:::o;2120:246::-;2201:1;2211:113;2225:6;2222:1;2219:13;2211:113;;;2310:1;2305:3;2301:11;2295:18;2291:1;2286:3;2282:11;2275:39;2247:2;2244:1;2240:10;2235:15;;2211:113;;;2358:1;2349:6;2344:3;2340:16;2333:27;2182:184;2120:246;;;:::o;2372:432::-;2460:5;2485:65;2501:48;2542:6;2501:48;:::i;:::-;2485:65;:::i;:::-;2476:74;;2573:6;2566:5;2559:21;2611:4;2604:5;2600:16;2649:3;2640:6;2635:3;2631:16;2628:25;2625:112;;;2656:79;;:::i;:::-;2625:112;2746:52;2791:6;2786:3;2781;2746:52;:::i;:::-;2466:338;2372:432;;;;;:::o;2823:353::-;2889:5;2938:3;2931:4;2923:6;2919:17;2915:27;2905:122;;2946:79;;:::i;:::-;2905:122;3056:6;3050:13;3081:89;3166:3;3158:6;3151:4;3143:6;3139:17;3081:89;:::i;:::-;3072:98;;2895:281;2823:353;;;;:::o;3182:678::-;3270:6;3278;3327:2;3315:9;3306:7;3302:23;3298:32;3295:119;;;3333:79;;:::i;:::-;3295:119;3453:1;3478:64;3534:7;3525:6;3514:9;3510:22;3478:64;:::i;:::-;3468:74;;3424:128;3612:2;3601:9;3597:18;3591:25;3643:18;3635:6;3632:30;3629:117;;;3665:79;;:::i;:::-;3629:117;3770:73;3835:7;3826:6;3815:9;3811:22;3770:73;:::i;:::-;3760:83;;3562:291;3182:678;;;;;:::o;3866:118::-;3953:24;3971:5;3953:24;:::i;:::-;3948:3;3941:37;3866:118;;:::o;3990:222::-;4083:4;4121:2;4110:9;4106:18;4098:26;;4134:71;4202:1;4191:9;4187:17;4178:6;4134:71;:::i;:::-;3990:222;;;;:::o;4218:98::-;4269:6;4303:5;4297:12;4287:22;;4218:98;;;:::o;4322:147::-;4423:11;4460:3;4445:18;;4322:147;;;;:::o;4475:386::-;4579:3;4607:38;4639:5;4607:38;:::i;:::-;4661:88;4742:6;4737:3;4661:88;:::i;:::-;4654:95;;4758:65;4816:6;4811:3;4804:4;4797:5;4793:16;4758:65;:::i;:::-;4848:6;4843:3;4839:16;4832:23;;4583:278;4475:386;;;;:::o;4867:271::-;4997:3;5019:93;5108:3;5099:6;5019:93;:::i;:::-;5012:100;;5129:3;5122:10;;4867:271;;;;:::o;599:1116:1:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_385":{"entryPoint":null,"id":385,"parameterSlots":0,"returnSlots":0},"@_delegate_361":{"entryPoint":39,"id":361,"parameterSlots":1,"returnSlots":0},"@_fallback_377":{"entryPoint":12,"id":377,"parameterSlots":0,"returnSlots":0},"@_implementation_46":{"entryPoint":26,"id":46,"parameterSlots":0,"returnSlots":1},"@getAddressSlot_1204":{"entryPoint":161,"id":1204,"parameterSlots":1,"returnSlots":1},"@getImplementation_108":{"entryPoint":76,"id":108,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220efb0453644e06fc30c00e319e2a4f2c1a809d39eca9642ae9d97060ab802f30a64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB0 GASLIMIT CALLDATASIZE PREVRANDAO 0xE0 PUSH16 0xC30C00E319E2A4F2C1A809D39ECA9642 0xAE SWAP14 SWAP8 MOD EXP 0xB8 MUL RETURN EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"599:1116:1:-:0;;;2649:11:3;:9;:11::i;:::-;599:1116:1;2323:83:3;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;1581:132:1:-;1648:7;1674:32;:30;:32::i;:::-;1667:39;;1581:132;:::o;949:895:3:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1687:1;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;1957:138:2;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;1684:190:9:-;1745:21;1854:4;1844:14;;1684:190;;;:::o"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8bb2594312ba6747e81ed4a062f9b9161e7dba8a7bf25e3c3dc39d818cfe39e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xBB 0x25 SWAP5 BALANCE 0x2B 0xA6 PUSH21 0x7E81ED4A062F9B9161E7DBA8A7BF25E3C3DC39D818 0xCF 0xE3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b8bb2594312ba6747e81ed4a062f9b9161e7dba8a7bf25e3c3dc39d818cfe39e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xBB 0x25 SWAP5 BALANCE 0x2B 0xA6 PUSH21 0x7E81ED4A062F9B9161E7DBA8A7BF25E3C3DC39D818 0xCF 0xE3 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"449:6273:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203ef1cecb04d6d1af6bfa5999d57c0bca9393831517973b7dcee45c3febbe102564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CALL 0xCE 0xCB DIV 0xD6 0xD1 0xAF PUSH12 0xFA5999D57C0BCA9393831517 SWAP8 EXTCODESIZE PUSH30 0xCEE45C3FEBBE102564736F6C634300081800330000000000000000000000 ","sourceMap":"195:6066:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"},{"inputs":[],"name":"Create2FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"Create2InsufficientBalance","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204da62a3bc791935f46e811f8225acf9f11b97cb03abd37e8a58b1c2a87a5863064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xA6 0x2A EXTCODESIZE 0xC7 SWAP2 SWAP4 PUSH0 CHAINID 0xE8 GT 0xF8 0x22 GAS 0xCF SWAP16 GT 0xB9 PUSH29 0xB03ABD37E8A58B1C2A87A5863064736F6C634300081800330000000000 ","sourceMap":"495:3877:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204da62a3bc791935f46e811f8225acf9f11b97cb03abd37e8a58b1c2a87a5863064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D 0xA6 0x2A EXTCODESIZE 0xC7 SWAP2 SWAP4 PUSH0 CHAINID 0xE8 GT 0xF8 0x22 GAS 0xCF SWAP16 GT 0xB9 PUSH29 0xB03ABD37E8A58B1C2A87A5863064736F6C634300081800330000000000 ","sourceMap":"495:3877:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Create2FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"Create2InsufficientBalance\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}],\"Create2FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"Create2InsufficientBalance(uint256,uint256)\":[{\"details\":\"Not enough balance for performing a CREATE2 deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200d9d594500b0633db8c36b486b2e5bd19779e3026132b93582c791873a3dee9064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SWAP14 MSIZE GASLIMIT STOP 0xB0 PUSH4 0x3DB8C36B BASEFEE PUSH12 0x2E5BD19779E3026132B93582 0xC7 SWAP2 DUP8 GASPRICE RETURNDATASIZE 0xEE SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1245:2685:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122022ea8e82b761ff0f2c8fae5d36bcca20db5176a1081cc893147086b57be5cf8f64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xEA DUP15 DUP3 0xB7 PUSH2 0xFF0F 0x2C DUP16 0xAE TSTORE CALLDATASIZE 0xBC 0xCA KECCAK256 0xDB MLOAD PUSH23 0xA1081CC893147086B57BE5CF8F64736F6C634300081800 CALLER ","sourceMap":"251:2847:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a0f0af1e89f3ddbdff57fa81e414c48e503c1b1d880410ba3858747441326c1664736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 CREATE 0xAF 0x1E DUP10 RETURN 0xDD 0xBD SELFDESTRUCT JUMPI STATICCALL DUP2 0xE4 EQ 0xC4 DUP15 POP EXTCODECOPY SHL SAR DUP9 DIV LT 0xBA CODESIZE PC PUSH21 0x7441326C1664736F6C634300081800330000000000 ","sourceMap":"344:7386:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bdf6ac08341bc2c8c72c89b479b09c45d1cc23f4b55e7965962b8679a082214a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xF6 0xAC ADDMOD CALLVALUE SHL 0xC2 0xC8 0xC7 0x2C DUP10 0xB4 PUSH26 0xB09C45D1CC23F4B55E7965962B8679A082214A64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"521:3235:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205f1847e716d326528b8b9324e0228d1e4971145e5ba1173b4269248a23a4838564736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 XOR SELFBALANCE 0xE7 AND 0xD3 0x26 MSTORE DUP12 DUP12 SWAP4 0x24 0xE0 0x22 DUP14 0x1E BLOBHASH PUSH18 0x145E5BA1173B4269248A23A4838564736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"203:14914:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209275fb1eb703f1ada4f4ce7bacc8dfe6c85df9651d82c9adda1c7e92c94ddc8464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 PUSH22 0xFB1EB703F1ADA4F4CE7BACC8DFE6C85DF9651D82C9AD 0xDA SHR PUSH31 0x92C94DDC8464736F6C63430008180033000000000000000000000000000000 ","sourceMap":"216:1047:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"account-abstraction/contracts/core/BaseAccount.sol":{"BaseAccount":{"abi":[{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"entryPoint()":"b0d691fe","getNonce()":"d087d288","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"Basic account implementation. This contract provides the basic logic for implementing the IAccount interface - validateUserOp Specific account implementation should inherit it and provide the account-specific logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/core/BaseAccount.sol\":\"BaseAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"account-abstraction/contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"61010f610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146066578063ede31502146080575b600080fd5b6052609a565b604051605d919060c0565b60405180910390f35b606c609f565b6040516077919060c0565b60405180910390f35b608660a4565b6040516091919060c0565b60405180910390f35b602481565b601481565b603481565b6000819050919050565b60ba8160a9565b82525050565b600060208201905060d3600083018460b3565b9291505056fea26469706673582212202e28cdbade10737ba41f4c09f4eee18148cfe2f208bcbb6e0c6e515367be753364736f6c63430008180033","opcodes":"PUSH2 0x10F PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x66 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH1 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5D SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6C PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x77 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x91 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBA DUP2 PUSH1 0xA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x28 0xCD 0xBA 0xDE LT PUSH20 0x7BA41F4C09F4EEE18148CFE2F208BCBB6E0C6E51 MSTORE8 PUSH8 0xBE753364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"282:4714:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_3452":{"entryPoint":164,"id":3452,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_3449":{"entryPoint":154,"id":3449,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_3446":{"entryPoint":159,"id":3446,"parameterSlots":0,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack_library":{"entryPoint":179,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":192,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":169,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:463:26","nodeType":"YulBlock","src":"0:463:26","statements":[{"body":{"nativeSrc":"52:32:26","nodeType":"YulBlock","src":"52:32:26","statements":[{"nativeSrc":"62:16:26","nodeType":"YulAssignment","src":"62:16:26","value":{"name":"value","nativeSrc":"73:5:26","nodeType":"YulIdentifier","src":"73:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:26","nodeType":"YulIdentifier","src":"62:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:26","nodeType":"YulTypedName","src":"34:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:26","nodeType":"YulTypedName","src":"44:7:26","type":""}],"src":"7:77:26"},{"body":{"nativeSrc":"163:53:26","nodeType":"YulBlock","src":"163:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"180:3:26","nodeType":"YulIdentifier","src":"180:3:26"},{"arguments":[{"name":"value","nativeSrc":"203:5:26","nodeType":"YulIdentifier","src":"203:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"185:17:26","nodeType":"YulIdentifier","src":"185:17:26"},"nativeSrc":"185:24:26","nodeType":"YulFunctionCall","src":"185:24:26"}],"functionName":{"name":"mstore","nativeSrc":"173:6:26","nodeType":"YulIdentifier","src":"173:6:26"},"nativeSrc":"173:37:26","nodeType":"YulFunctionCall","src":"173:37:26"},"nativeSrc":"173:37:26","nodeType":"YulExpressionStatement","src":"173:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack_library","nativeSrc":"90:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"151:5:26","nodeType":"YulTypedName","src":"151:5:26","type":""},{"name":"pos","nativeSrc":"158:3:26","nodeType":"YulTypedName","src":"158:3:26","type":""}],"src":"90:126:26"},{"body":{"nativeSrc":"328:132:26","nodeType":"YulBlock","src":"328:132:26","statements":[{"nativeSrc":"338:26:26","nodeType":"YulAssignment","src":"338:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"350:9:26","nodeType":"YulIdentifier","src":"350:9:26"},{"kind":"number","nativeSrc":"361:2:26","nodeType":"YulLiteral","src":"361:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"346:3:26","nodeType":"YulIdentifier","src":"346:3:26"},"nativeSrc":"346:18:26","nodeType":"YulFunctionCall","src":"346:18:26"},"variableNames":[{"name":"tail","nativeSrc":"338:4:26","nodeType":"YulIdentifier","src":"338:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"426:6:26","nodeType":"YulIdentifier","src":"426:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"439:9:26","nodeType":"YulIdentifier","src":"439:9:26"},{"kind":"number","nativeSrc":"450:1:26","nodeType":"YulLiteral","src":"450:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"435:3:26","nodeType":"YulIdentifier","src":"435:3:26"},"nativeSrc":"435:17:26","nodeType":"YulFunctionCall","src":"435:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack_library","nativeSrc":"374:51:26","nodeType":"YulIdentifier","src":"374:51:26"},"nativeSrc":"374:79:26","nodeType":"YulFunctionCall","src":"374:79:26"},"nativeSrc":"374:79:26","nodeType":"YulExpressionStatement","src":"374:79:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"222:238:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"300:9:26","nodeType":"YulTypedName","src":"300:9:26","type":""},{"name":"value0","nativeSrc":"312:6:26","nodeType":"YulTypedName","src":"312:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"323:4:26","nodeType":"YulTypedName","src":"323:4:26","type":""}],"src":"222:238:26"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146066578063ede31502146080575b600080fd5b6052609a565b604051605d919060c0565b60405180910390f35b606c609f565b6040516077919060c0565b60405180910390f35b608660a4565b6040516091919060c0565b60405180910390f35b602481565b601481565b603481565b6000819050919050565b60ba8160a9565b82525050565b600060208201905060d3600083018460b3565b9291505056fea26469706673582212202e28cdbade10737ba41f4c09f4eee18148cfe2f208bcbb6e0c6e515367be753364736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x66 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x80 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x52 PUSH1 0x9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x5D SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x6C PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x77 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x86 PUSH1 0xA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x91 SWAP2 SWAP1 PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x34 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xBA DUP2 PUSH1 0xA9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xD3 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x28 0xCD 0xBA 0xDE LT PUSH20 0x7BA41F4C09F4EEE18148CFE2F208BCBB6E0C6E51 MSTORE8 PUSH8 0xBE753364736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ","sourceMap":"282:4714:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;314:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;442:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;380:56;434:2;380:56;:::o;314:60::-;372:2;314:60;:::o;442:50::-;490:2;442:50;:::o;7:77:26:-;44:7;73:5;62:16;;7:77;;;:::o;90:126::-;185:24;203:5;185:24;:::i;:::-;180:3;173:37;90:126;;:::o;222:238::-;323:4;361:2;350:9;346:18;338:26;;374:79;450:1;439:9;435:17;426:6;374:79;:::i;:::-;222:238;;;;:::o"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"account-abstraction/contracts/interfaces/IAccount.sol":{"IAccount":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/interfaces/IAccount.sol\":\"IAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]}},\"version\":1}"}},"account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]}},\"version\":1}"}},"contracts/SmartContractWallet.sol":{"SmartContractWallet":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"anEntryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"contract IEntryPoint","name":"entryPoint","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"SmartSample","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"addDeposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"checkBalance","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"anOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_data","type":"string"}],"name":"login","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_4238":{"entryPoint":null,"id":4238,"parameterSlots":1,"returnSlots":0},"@_disableInitializers_618":{"entryPoint":181,"id":618,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_649":{"entryPoint":447,"id":649,"parameterSlots":0,"returnSlots":1},"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory":{"entryPoint":590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory":{"entryPoint":613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":700,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":524,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$4028":{"entryPoint":544,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":492,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":663,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":487,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$4028":{"entryPoint":564,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1893:26","nodeType":"YulBlock","src":"0:1893:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"633:51:26","nodeType":"YulBlock","src":"633:51:26","statements":[{"nativeSrc":"643:35:26","nodeType":"YulAssignment","src":"643:35:26","value":{"arguments":[{"name":"value","nativeSrc":"672:5:26","nodeType":"YulIdentifier","src":"672:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"654:17:26","nodeType":"YulIdentifier","src":"654:17:26"},"nativeSrc":"654:24:26","nodeType":"YulFunctionCall","src":"654:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"643:7:26","nodeType":"YulIdentifier","src":"643:7:26"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$4028","nativeSrc":"568:116:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"615:5:26","nodeType":"YulTypedName","src":"615:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"625:7:26","nodeType":"YulTypedName","src":"625:7:26","type":""}],"src":"568:116:26"},{"body":{"nativeSrc":"753:99:26","nodeType":"YulBlock","src":"753:99:26","statements":[{"body":{"nativeSrc":"830:16:26","nodeType":"YulBlock","src":"830:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"839:1:26","nodeType":"YulLiteral","src":"839:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"842:1:26","nodeType":"YulLiteral","src":"842:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"832:6:26","nodeType":"YulIdentifier","src":"832:6:26"},"nativeSrc":"832:12:26","nodeType":"YulFunctionCall","src":"832:12:26"},"nativeSrc":"832:12:26","nodeType":"YulExpressionStatement","src":"832:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"776:5:26","nodeType":"YulIdentifier","src":"776:5:26"},{"arguments":[{"name":"value","nativeSrc":"821:5:26","nodeType":"YulIdentifier","src":"821:5:26"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$4028","nativeSrc":"783:37:26","nodeType":"YulIdentifier","src":"783:37:26"},"nativeSrc":"783:44:26","nodeType":"YulFunctionCall","src":"783:44:26"}],"functionName":{"name":"eq","nativeSrc":"773:2:26","nodeType":"YulIdentifier","src":"773:2:26"},"nativeSrc":"773:55:26","nodeType":"YulFunctionCall","src":"773:55:26"}],"functionName":{"name":"iszero","nativeSrc":"766:6:26","nodeType":"YulIdentifier","src":"766:6:26"},"nativeSrc":"766:63:26","nodeType":"YulFunctionCall","src":"766:63:26"},"nativeSrc":"763:83:26","nodeType":"YulIf","src":"763:83:26"}]},"name":"validator_revert_t_contract$_IEntryPoint_$4028","nativeSrc":"690:162:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"746:5:26","nodeType":"YulTypedName","src":"746:5:26","type":""}],"src":"690:162:26"},{"body":{"nativeSrc":"941:100:26","nodeType":"YulBlock","src":"941:100:26","statements":[{"nativeSrc":"951:22:26","nodeType":"YulAssignment","src":"951:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"966:6:26","nodeType":"YulIdentifier","src":"966:6:26"}],"functionName":{"name":"mload","nativeSrc":"960:5:26","nodeType":"YulIdentifier","src":"960:5:26"},"nativeSrc":"960:13:26","nodeType":"YulFunctionCall","src":"960:13:26"},"variableNames":[{"name":"value","nativeSrc":"951:5:26","nodeType":"YulIdentifier","src":"951:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1029:5:26","nodeType":"YulIdentifier","src":"1029:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$4028","nativeSrc":"982:46:26","nodeType":"YulIdentifier","src":"982:46:26"},"nativeSrc":"982:53:26","nodeType":"YulFunctionCall","src":"982:53:26"},"nativeSrc":"982:53:26","nodeType":"YulExpressionStatement","src":"982:53:26"}]},"name":"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"858:183:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"919:6:26","nodeType":"YulTypedName","src":"919:6:26","type":""},{"name":"end","nativeSrc":"927:3:26","nodeType":"YulTypedName","src":"927:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"935:5:26","nodeType":"YulTypedName","src":"935:5:26","type":""}],"src":"858:183:26"},{"body":{"nativeSrc":"1144:294:26","nodeType":"YulBlock","src":"1144:294:26","statements":[{"body":{"nativeSrc":"1190:83:26","nodeType":"YulBlock","src":"1190:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1192:77:26","nodeType":"YulIdentifier","src":"1192:77:26"},"nativeSrc":"1192:79:26","nodeType":"YulFunctionCall","src":"1192:79:26"},"nativeSrc":"1192:79:26","nodeType":"YulExpressionStatement","src":"1192:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1165:7:26","nodeType":"YulIdentifier","src":"1165:7:26"},{"name":"headStart","nativeSrc":"1174:9:26","nodeType":"YulIdentifier","src":"1174:9:26"}],"functionName":{"name":"sub","nativeSrc":"1161:3:26","nodeType":"YulIdentifier","src":"1161:3:26"},"nativeSrc":"1161:23:26","nodeType":"YulFunctionCall","src":"1161:23:26"},{"kind":"number","nativeSrc":"1186:2:26","nodeType":"YulLiteral","src":"1186:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1157:3:26","nodeType":"YulIdentifier","src":"1157:3:26"},"nativeSrc":"1157:32:26","nodeType":"YulFunctionCall","src":"1157:32:26"},"nativeSrc":"1154:119:26","nodeType":"YulIf","src":"1154:119:26"},{"nativeSrc":"1283:148:26","nodeType":"YulBlock","src":"1283:148:26","statements":[{"nativeSrc":"1298:15:26","nodeType":"YulVariableDeclaration","src":"1298:15:26","value":{"kind":"number","nativeSrc":"1312:1:26","nodeType":"YulLiteral","src":"1312:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1302:6:26","nodeType":"YulTypedName","src":"1302:6:26","type":""}]},{"nativeSrc":"1327:94:26","nodeType":"YulAssignment","src":"1327:94:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1393:9:26","nodeType":"YulIdentifier","src":"1393:9:26"},{"name":"offset","nativeSrc":"1404:6:26","nodeType":"YulIdentifier","src":"1404:6:26"}],"functionName":{"name":"add","nativeSrc":"1389:3:26","nodeType":"YulIdentifier","src":"1389:3:26"},"nativeSrc":"1389:22:26","nodeType":"YulFunctionCall","src":"1389:22:26"},{"name":"dataEnd","nativeSrc":"1413:7:26","nodeType":"YulIdentifier","src":"1413:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"1337:51:26","nodeType":"YulIdentifier","src":"1337:51:26"},"nativeSrc":"1337:84:26","nodeType":"YulFunctionCall","src":"1337:84:26"},"variableNames":[{"name":"value0","nativeSrc":"1327:6:26","nodeType":"YulIdentifier","src":"1327:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"1047:391:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1114:9:26","nodeType":"YulTypedName","src":"1114:9:26","type":""},{"name":"dataEnd","nativeSrc":"1125:7:26","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1137:6:26","nodeType":"YulTypedName","src":"1137:6:26","type":""}],"src":"1047:391:26"},{"body":{"nativeSrc":"1488:57:26","nodeType":"YulBlock","src":"1488:57:26","statements":[{"nativeSrc":"1498:41:26","nodeType":"YulAssignment","src":"1498:41:26","value":{"arguments":[{"name":"value","nativeSrc":"1513:5:26","nodeType":"YulIdentifier","src":"1513:5:26"},{"kind":"number","nativeSrc":"1520:18:26","nodeType":"YulLiteral","src":"1520:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1509:3:26","nodeType":"YulIdentifier","src":"1509:3:26"},"nativeSrc":"1509:30:26","nodeType":"YulFunctionCall","src":"1509:30:26"},"variableNames":[{"name":"cleaned","nativeSrc":"1498:7:26","nodeType":"YulIdentifier","src":"1498:7:26"}]}]},"name":"cleanup_t_uint64","nativeSrc":"1444:101:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1470:5:26","nodeType":"YulTypedName","src":"1470:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1480:7:26","nodeType":"YulTypedName","src":"1480:7:26","type":""}],"src":"1444:101:26"},{"body":{"nativeSrc":"1614:52:26","nodeType":"YulBlock","src":"1614:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1631:3:26","nodeType":"YulIdentifier","src":"1631:3:26"},{"arguments":[{"name":"value","nativeSrc":"1653:5:26","nodeType":"YulIdentifier","src":"1653:5:26"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"1636:16:26","nodeType":"YulIdentifier","src":"1636:16:26"},"nativeSrc":"1636:23:26","nodeType":"YulFunctionCall","src":"1636:23:26"}],"functionName":{"name":"mstore","nativeSrc":"1624:6:26","nodeType":"YulIdentifier","src":"1624:6:26"},"nativeSrc":"1624:36:26","nodeType":"YulFunctionCall","src":"1624:36:26"},"nativeSrc":"1624:36:26","nodeType":"YulExpressionStatement","src":"1624:36:26"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"1551:115:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1602:5:26","nodeType":"YulTypedName","src":"1602:5:26","type":""},{"name":"pos","nativeSrc":"1609:3:26","nodeType":"YulTypedName","src":"1609:3:26","type":""}],"src":"1551:115:26"},{"body":{"nativeSrc":"1768:122:26","nodeType":"YulBlock","src":"1768:122:26","statements":[{"nativeSrc":"1778:26:26","nodeType":"YulAssignment","src":"1778:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1790:9:26","nodeType":"YulIdentifier","src":"1790:9:26"},{"kind":"number","nativeSrc":"1801:2:26","nodeType":"YulLiteral","src":"1801:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1786:3:26","nodeType":"YulIdentifier","src":"1786:3:26"},"nativeSrc":"1786:18:26","nodeType":"YulFunctionCall","src":"1786:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1778:4:26","nodeType":"YulIdentifier","src":"1778:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1856:6:26","nodeType":"YulIdentifier","src":"1856:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"1869:9:26","nodeType":"YulIdentifier","src":"1869:9:26"},{"kind":"number","nativeSrc":"1880:1:26","nodeType":"YulLiteral","src":"1880:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1865:3:26","nodeType":"YulIdentifier","src":"1865:3:26"},"nativeSrc":"1865:17:26","nodeType":"YulFunctionCall","src":"1865:17:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"1814:41:26","nodeType":"YulIdentifier","src":"1814:41:26"},"nativeSrc":"1814:69:26","nodeType":"YulFunctionCall","src":"1814:69:26"},"nativeSrc":"1814:69:26","nodeType":"YulExpressionStatement","src":"1814:69:26"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"1672:218:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1740:9:26","nodeType":"YulTypedName","src":"1740:9:26","type":""},{"name":"value0","nativeSrc":"1752:6:26","nodeType":"YulTypedName","src":"1752:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1763:4:26","nodeType":"YulTypedName","src":"1763:4:26","type":""}],"src":"1672:218:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$4028(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$4028(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$4028(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$4028_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$4028(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$4028_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620021573803806200215783398181016040528101906200006a919062000265565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b50620002d9565b6000620000c7620001bf60201b60201c565b90508060000160089054906101000a900460ff161562000113576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001bc5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001b39190620002bc565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021982620001ec565b9050919050565b60006200022d826200020c565b9050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b6000602082840312156200027e576200027d620001e7565b5b60006200028e848285016200024e565b91505092915050565b600067ffffffffffffffff82169050919050565b620002b68162000297565b82525050565b6000602082019050620002d36000830184620002ab565b92915050565b60805160a05160c051611e396200031e60003960006102f90152600081816104850152610c7401526000818161093e015281816109930152610b4e0152611e396000f3fe6080604052600436106100ab5760003560e01c8063ad3cb1cc11610064578063ad3cb1cc14610199578063b0d691fe146101c4578063c399ec88146101ef578063c4d66de81461021a578063c71daccb14610243578063d087d2881461026e576100b2565b806319822f7c146100b75780633a7d280c146100f45780634a58db191461011d5780634f1ef2861461012757806352d1902d146101435780638da5cb5b1461016e576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d9919061148f565b610299565b6040516100eb919061150d565b60405180910390f35b34801561010057600080fd5b5061011b6004803603810190610116919061166e565b6102cc565b005b61012561035d565b005b610141600480360381019061013c91906117b6565b6103d2565b005b34801561014f57600080fd5b506101586103f1565b6040516101659190611821565b60405180910390f35b34801561017a57600080fd5b50610183610424565b604051610190919061184b565b60405180910390f35b3480156101a557600080fd5b506101ae610448565b6040516101bb91906118e5565b60405180910390f35b3480156101d057600080fd5b506101d9610481565b6040516101e69190611966565b60405180910390f35b3480156101fb57600080fd5b506102046104a9565b604051610211919061150d565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611981565b610531565b005b34801561024f57600080fd5b506102586106c0565b604051610265919061184b565b60405180910390f35b34801561027a57600080fd5b506102836106c8565b604051610290919061150d565b60405180910390f35b60006102a3610753565b6102ad84846107ca565b90506102bc846020013561089d565b6102c5826108a0565b9392505050565b6000816040516020016102df91906118e5565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000008114610359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610350906119fa565b60405180910390fd5b5050565b610365610481565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161039e919061184b565b6000604051808303818588803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b5050505050565b6103da61093c565b6103e382610a22565b6103ed8282610a2d565b5050565b60006103fb610b4c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006104b3610481565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104eb919061184b565b602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611a2f565b905090565b600061053b610bd3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156105895750825b9050600060018367ffffffffffffffff161480156105be575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156105cc575080155b15610603576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106535760018560000160086101000a81548160ff0219169083151502179055505b61065c86610bfb565b83156106b85760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516106af9190611aab565b60405180910390a15b505050505050565b600030905090565b60006106d2610481565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b815260040161070d929190611b25565b602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190611a2f565b905090565b61075b610481565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90611b9a565b60405180910390fd5b565b6000806107d683610cd8565b905061083581858061010001906107ed9190611bc9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d0e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610891576001915050610897565b60009150505b92915050565b50565b600081146109395760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516108f090611c5d565b600060405180830381858888f193505050503d806000811461092e576040519150601f19603f3d011682016040523d82523d6000602084013e610933565b606091505b50509050505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806109e957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109d0610d3a565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610a20576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a2a610d91565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a9557506040513d601f19601f82011682018060405250810190610a929190611c87565b60015b610ad657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610acd919061184b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610b3d57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610b349190611821565b60405180910390fd5b610b478383610e57565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f1b5fc86b82922371dc8e7cb464044750968531a041b9ea4b8ca5bfac41f8c26960405160405180910390a350565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610d1e8686610eca565b925092509250610d2e8282610f26565b82935050505092915050565b6000610d687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e1657503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d00565b60405180910390fd5b565b610e6082611094565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ebd57610eb78282611161565b50610ec6565b610ec56111e5565b5b5050565b60008060006041845103610f0f5760008060006020870151925060408701519150606087015160001a9050610f0188828585611222565b955095509550505050610f1f565b60006002855160001b9250925092505b9250925092565b60006003811115610f3a57610f39611d20565b5b826003811115610f4d57610f4c611d20565b5b03156110865760016003811115610f6757610f66611d20565b5b826003811115610f7a57610f79611d20565b5b03610fb1576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610fc557610fc4611d20565b5b826003811115610fd857610fd7611d20565b5b0361101d578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611014919061150d565b60405180910390fd5b6003808111156110305761102f611d20565b5b82600381111561104357611042611d20565b5b0361108557806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161107c9190611821565b60405180910390fd5b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036110f057806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016110e7919061184b565b60405180910390fd5b8061111d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161118b9190611d8b565b600060405180830381855af49150503d80600081146111c6576040519150601f19603f3d011682016040523d82523d6000602084013e6111cb565b606091505b50915091506111db858383611316565b9250505092915050565b6000341115611220576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561126257600060038592509250925061130c565b6000600188888888604051600081526020016040526040516112879493929190611dbe565b6020604051602081039080840390855afa1580156112a9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112fd57600060016000801b9350935093505061130c565b8060008060001b935093509350505b9450945094915050565b60608261132b57611326826113a5565b61139d565b60008251148015611353575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561139557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161138c919061184b565b60405180910390fd5b81905061139e565b5b9392505050565b6000815111156113b85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b6000610120828403121561141a576114196113fe565b5b81905092915050565b6000819050919050565b61143681611423565b811461144157600080fd5b50565b6000813590506114538161142d565b92915050565b6000819050919050565b61146c81611459565b811461147757600080fd5b50565b60008135905061148981611463565b92915050565b6000806000606084860312156114a8576114a76113f4565b5b600084013567ffffffffffffffff8111156114c6576114c56113f9565b5b6114d286828701611403565b93505060206114e386828701611444565b92505060406114f48682870161147a565b9150509250925092565b61150781611459565b82525050565b600060208201905061152260008301846114fe565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157b82611532565b810181811067ffffffffffffffff8211171561159a57611599611543565b5b80604052505050565b60006115ad6113ea565b90506115b98282611572565b919050565b600067ffffffffffffffff8211156115d9576115d8611543565b5b6115e282611532565b9050602081019050919050565b82818337600083830152505050565b600061161161160c846115be565b6115a3565b90508281526020810184848401111561162d5761162c61152d565b5b6116388482856115ef565b509392505050565b600082601f83011261165557611654611528565b5b81356116658482602086016115fe565b91505092915050565b600060208284031215611684576116836113f4565b5b600082013567ffffffffffffffff8111156116a2576116a16113f9565b5b6116ae84828501611640565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116e2826116b7565b9050919050565b6116f2816116d7565b81146116fd57600080fd5b50565b60008135905061170f816116e9565b92915050565b600067ffffffffffffffff8211156117305761172f611543565b5b61173982611532565b9050602081019050919050565b600061175961175484611715565b6115a3565b9050828152602081018484840111156117755761177461152d565b5b6117808482856115ef565b509392505050565b600082601f83011261179d5761179c611528565b5b81356117ad848260208601611746565b91505092915050565b600080604083850312156117cd576117cc6113f4565b5b60006117db85828601611700565b925050602083013567ffffffffffffffff8111156117fc576117fb6113f9565b5b61180885828601611788565b9150509250929050565b61181b81611423565b82525050565b60006020820190506118366000830184611812565b92915050565b611845816116d7565b82525050565b6000602082019050611860600083018461183c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118a0578082015181840152602081019050611885565b60008484015250505050565b60006118b782611866565b6118c18185611871565b93506118d1818560208601611882565b6118da81611532565b840191505092915050565b600060208201905081810360008301526118ff81846118ac565b905092915050565b6000819050919050565b600061192c611927611922846116b7565b611907565b6116b7565b9050919050565b600061193e82611911565b9050919050565b600061195082611933565b9050919050565b61196081611945565b82525050565b600060208201905061197b6000830184611957565b92915050565b600060208284031215611997576119966113f4565b5b60006119a584828501611700565b91505092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006119e4601583611871565b91506119ef826119ae565b602082019050919050565b60006020820190508181036000830152611a13816119d7565b9050919050565b600081519050611a2981611463565b92915050565b600060208284031215611a4557611a446113f4565b5b6000611a5384828501611a1a565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611a95611a90611a8b84611a5c565b611907565b611a66565b9050919050565b611aa581611a7a565b82525050565b6000602082019050611ac06000830184611a9c565b92915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0f611b0a611b0584611ac6565b611907565b611ad0565b9050919050565b611b1f81611af4565b82525050565b6000604082019050611b3a600083018561183c565b611b476020830184611b16565b9392505050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000611b84601c83611871565b9150611b8f82611b4e565b602082019050919050565b60006020820190508181036000830152611bb381611b77565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611be657611be5611bba565b5b80840192508235915067ffffffffffffffff821115611c0857611c07611bbf565b5b602083019250600182023603831315611c2457611c23611bc4565b5b509250929050565b600081905092915050565b50565b6000611c47600083611c2c565b9150611c5282611c37565b600082019050919050565b6000611c6882611c3a565b9150819050919050565b600081519050611c818161142d565b92915050565b600060208284031215611c9d57611c9c6113f4565b5b6000611cab84828501611c72565b91505092915050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000611cea600a83611871565b9150611cf582611cb4565b602082019050919050565b60006020820190508181036000830152611d1981611cdd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b6000611d6582611d4f565b611d6f8185611c2c565b9350611d7f818560208601611882565b80840191505092915050565b6000611d978284611d5a565b915081905092915050565b600060ff82169050919050565b611db881611da2565b82525050565b6000608082019050611dd36000830187611812565b611de06020830186611daf565b611ded6040830185611812565b611dfa6060830184611812565b9594505050505056fea264697066735822122009632364e0d500d05a2d6f3b504352e5cd8030e89619232e5f2a07f80daed44664736f6c63430008180033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2157 CODESIZE SUB DUP1 PUSH3 0x2157 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xAE PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC7 PUSH3 0x1BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1BC JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP3 PUSH3 0x1EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP3 PUSH3 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x1E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28E DUP5 DUP3 DUP6 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B6 DUP2 PUSH3 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1E39 PUSH3 0x31E PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2F9 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x485 ADD MSTORE PUSH2 0xC74 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x93E ADD MSTORE DUP2 DUP2 PUSH2 0x993 ADD MSTORE PUSH2 0xB4E ADD MSTORE PUSH2 0x1E39 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x26E JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3A7D280C EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x2A3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x2AD DUP5 DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP PUSH2 0x2BC DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2C5 DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x365 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3DA PUSH2 0x93C JUMP JUMPDEST PUSH2 0x3E3 DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP3 PUSH2 0xA2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB PUSH2 0xB4C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B PUSH2 0xBD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x589 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5BE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x653 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65C DUP7 PUSH2 0xBFB JUMP JUMPDEST DUP4 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D2 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP3 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D6 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x835 DUP2 DUP6 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xD0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x891 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x939 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x933 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9E9 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9D0 PUSH2 0xD3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xD91 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA95 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAD6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0xB3D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB47 DUP4 DUP4 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B5FC86B82922371DC8E7CB464044750968531A041B9EA4B8CA5BFAC41F8C269 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD1E DUP7 DUP7 PUSH2 0xECA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD2E DUP3 DUP3 PUSH2 0xF26 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE16 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE60 DUP3 PUSH2 0x1094 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEB7 DUP3 DUP3 PUSH2 0x1161 JUMP JUMPDEST POP PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xF01 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1222 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF4D JUMPI PUSH2 0xF4C PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1086 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF66 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH2 0xFC4 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFD8 JUMPI PUSH2 0xFD7 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x101D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1085 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107C SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x10F0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x111D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11DB DUP6 DUP4 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x130C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1287 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FD JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x130C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x132B JUMPI PUSH2 0x1326 DUP3 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x139D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1353 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1395 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x139E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13B8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1453 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146C DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A7 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1444 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F4 DUP7 DUP3 DUP8 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x1532 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH2 0x15B9 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x15E2 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 PUSH2 0x160C DUP5 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1638 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1665 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170F DUP2 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x1739 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 PUSH2 0x1754 DUP5 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1780 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP6 DUP3 DUP7 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1788 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1836 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x183C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x18C1 DUP2 DUP6 PUSH2 0x1871 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FF DUP2 DUP5 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192C PUSH2 0x1927 PUSH2 0x1922 DUP5 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP3 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1950 DUP3 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1960 DUP2 PUSH2 0x1945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E4 PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A13 DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A95 PUSH2 0x1A90 PUSH2 0x1A8B DUP5 PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA5 DUP2 PUSH2 0x1A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0F PUSH2 0x1B0A PUSH2 0x1B05 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x1B47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B84 PUSH1 0x1C DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB3 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1BE6 JUMPI PUSH2 0x1BE5 PUSH2 0x1BBA JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1C24 JUMPI PUSH2 0x1C23 PUSH2 0x1BC4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x0 DUP4 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C81 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CAB DUP5 DUP3 DUP6 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEA PUSH1 0xA DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF5 DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D19 DUP2 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 DUP3 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1D6F DUP2 DUP6 PUSH2 0x1C2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP3 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB8 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DD3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DE0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1DED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DFA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH4 0x2364E0D5 STOP 0xD0 GAS 0x2D PUSH16 0x3B504352E5CD8030E89619232E5F2A07 0xF8 0xD 0xAE 0xD4 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1066:5131:24:-:0;;;1060:4:6;1017:48;;;;;;;;;1639:113:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:12;1687:26;;;;;;;;;;1723:22;:20;;;:22;;:::i;:::-;1639:113;1066:5131;;7711:422:5;7826:30;7859:26;:24;;;:26;;:::i;:::-;7826:59;;7900:1;:15;;;;;;;;;;;;7896:76;;;7938:23;;;;;;;;;;;;;;7896:76;8003:16;7985:34;;:1;:14;;;;;;;;;;;;:34;;;7981:146;;8052:16;8035:1;:14;;;:33;;;;;;;;;;;;;;;;;;8087:29;8099:16;8087:29;;;;;;:::i;:::-;;;;;;;;7981:146;7760:373;7711:422::o;8737:170::-;8795:30;8870:21;8860:31;;8737:170;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:101::-;1480:7;1520:18;1513:5;1509:30;1498:41;;1444:101;;;:::o;1551:115::-;1636:23;1653:5;1636:23;:::i;:::-;1631:3;1624:36;1551:115;;:::o;1672:218::-;1763:4;1801:2;1790:9;1786:18;1778:26;;1814:69;1880:1;1869:9;1865:17;1856:6;1814:69;:::i;:::-;1672:218;;;;:::o;1066:5131:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_670":{"entryPoint":1096,"id":670,"parameterSlots":0,"returnSlots":0},"@_4224":{"entryPoint":null,"id":4224,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_4444":{"entryPoint":2594,"id":4444,"parameterSlots":1,"returnSlots":0},"@_checkNonPayable_349":{"entryPoint":4581,"id":349,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_764":{"entryPoint":2892,"id":764,"parameterSlots":0,"returnSlots":0},"@_checkProxy_748":{"entryPoint":2364,"id":748,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_649":{"entryPoint":3027,"id":649,"parameterSlots":0,"returnSlots":1},"@_initialize_4319":{"entryPoint":3067,"id":4319,"parameterSlots":1,"returnSlots":0},"@_onlyOwner_4258":{"entryPoint":3473,"id":4258,"parameterSlots":0,"returnSlots":0},"@_payPrefund_3256":{"entryPoint":2208,"id":3256,"parameterSlots":1,"returnSlots":0},"@_requireFromEntryPoint_3205":{"entryPoint":1875,"id":3205,"parameterSlots":0,"returnSlots":0},"@_revert_1068":{"entryPoint":5029,"id":1068,"parameterSlots":1,"returnSlots":0},"@_setImplementation_135":{"entryPoint":4244,"id":135,"parameterSlots":1,"returnSlots":0},"@_throwError_1884":{"entryPoint":3878,"id":1884,"parameterSlots":2,"returnSlots":0},"@_upgradeToAndCallUUPS_815":{"entryPoint":2605,"id":815,"parameterSlots":2,"returnSlots":0},"@_validateNonce_3223":{"entryPoint":2205,"id":3223,"parameterSlots":1,"returnSlots":0},"@_validateSignature_4373":{"entryPoint":1994,"id":4373,"parameterSlots":2,"returnSlots":1},"@addDeposit_4431":{"entryPoint":861,"id":4431,"parameterSlots":0,"returnSlots":0},"@checkBalance_4291":{"entryPoint":1728,"id":4291,"parameterSlots":0,"returnSlots":1},"@entryPoint_4220":{"entryPoint":1153,"id":4220,"parameterSlots":0,"returnSlots":1},"@functionDelegateCall_988":{"entryPoint":4449,"id":988,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_1204":{"entryPoint":4234,"id":1204,"parameterSlots":1,"returnSlots":1},"@getDeposit_4414":{"entryPoint":1193,"id":4414,"parameterSlots":0,"returnSlots":1},"@getImplementation_108":{"entryPoint":3386,"id":108,"parameterSlots":0,"returnSlots":1},"@getNonce_3147":{"entryPoint":1736,"id":3147,"parameterSlots":0,"returnSlots":1},"@initialize_4304":{"entryPoint":1329,"id":4304,"parameterSlots":1,"returnSlots":0},"@login_4280":{"entryPoint":716,"id":4280,"parameterSlots":1,"returnSlots":0},"@owner_4190":{"entryPoint":1060,"id":4190,"parameterSlots":0,"returnSlots":0},"@proxiableUUID_706":{"entryPoint":1009,"id":706,"parameterSlots":0,"returnSlots":1},"@recover_1641":{"entryPoint":3342,"id":1641,"parameterSlots":2,"returnSlots":1},"@toEthSignedMessageHash_1900":{"entryPoint":3288,"id":1900,"parameterSlots":1,"returnSlots":1},"@tryRecover_1611":{"entryPoint":3786,"id":1611,"parameterSlots":2,"returnSlots":3},"@tryRecover_1799":{"entryPoint":4642,"id":1799,"parameterSlots":4,"returnSlots":3},"@upgradeToAndCall_169":{"entryPoint":3671,"id":169,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_726":{"entryPoint":978,"id":726,"parameterSlots":2,"returnSlots":0},"@validateUserOp_3188":{"entryPoint":665,"id":3188,"parameterSlots":3,"returnSlots":1},"@verifyCallResultFromTarget_1028":{"entryPoint":4886,"id":1028,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":5958,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":5630,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5188,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":7282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":5696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_PackedUserOperation_$4173_calldata_ptr":{"entryPoint":5123,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":6682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6070,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":7303,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":5742,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_PackedUserOperation_$4173_calldata_ptrt_bytes32t_uint256":{"entryPoint":5263,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6703,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack":{"entryPoint":6487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack":{"entryPoint":6934,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":6812,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack":{"entryPoint":6615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack":{"entryPoint":7389,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7226,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack":{"entryPoint":7031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":7599,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7261,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed":{"entryPoint":6949,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7614,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed":{"entryPoint":6502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":6827,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6650,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7424,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7066,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5389,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":7113,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":5539,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5098,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":5909,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":5566,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7503,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6246,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7212,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6257,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5847,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5155,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_0_by_1":{"entryPoint":6854,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":6748,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5815,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint192":{"entryPoint":6864,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5209,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":6758,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":7586,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$4028_to_t_address":{"entryPoint":6469,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_0_by_1_to_t_uint192":{"entryPoint":6900,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":6778,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6451,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6417,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":5615,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6274,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":5490,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":6407,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":7456,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5443,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5416,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a":{"entryPoint":7103,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":5118,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad":{"entryPoint":7098,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e":{"entryPoint":7108,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5421,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5113,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5108,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5426,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc":{"entryPoint":6574,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367":{"entryPoint":7348,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":7223,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50":{"entryPoint":6990,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5865,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5165,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5219,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:20345:26","nodeType":"YulBlock","src":"0:20345:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"423:28:26","nodeType":"YulBlock","src":"423:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:26","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"443:1:26","nodeType":"YulLiteral","src":"443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"433:6:26","nodeType":"YulIdentifier","src":"433:6:26"},"nativeSrc":"433:12:26","nodeType":"YulFunctionCall","src":"433:12:26"},"nativeSrc":"433:12:26","nodeType":"YulExpressionStatement","src":"433:12:26"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"334:117:26","nodeType":"YulFunctionDefinition","src":"334:117:26"},{"body":{"nativeSrc":"582:153:26","nodeType":"YulBlock","src":"582:153:26","statements":[{"body":{"nativeSrc":"622:83:26","nodeType":"YulBlock","src":"622:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nativeSrc":"624:77:26","nodeType":"YulIdentifier","src":"624:77:26"},"nativeSrc":"624:79:26","nodeType":"YulFunctionCall","src":"624:79:26"},"nativeSrc":"624:79:26","nodeType":"YulExpressionStatement","src":"624:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"603:3:26","nodeType":"YulIdentifier","src":"603:3:26"},{"name":"offset","nativeSrc":"608:6:26","nodeType":"YulIdentifier","src":"608:6:26"}],"functionName":{"name":"sub","nativeSrc":"599:3:26","nodeType":"YulIdentifier","src":"599:3:26"},"nativeSrc":"599:16:26","nodeType":"YulFunctionCall","src":"599:16:26"},{"kind":"number","nativeSrc":"617:3:26","nodeType":"YulLiteral","src":"617:3:26","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"595:3:26","nodeType":"YulIdentifier","src":"595:3:26"},"nativeSrc":"595:26:26","nodeType":"YulFunctionCall","src":"595:26:26"},"nativeSrc":"592:113:26","nodeType":"YulIf","src":"592:113:26"},{"nativeSrc":"714:15:26","nodeType":"YulAssignment","src":"714:15:26","value":{"name":"offset","nativeSrc":"723:6:26","nodeType":"YulIdentifier","src":"723:6:26"},"variableNames":[{"name":"value","nativeSrc":"714:5:26","nodeType":"YulIdentifier","src":"714:5:26"}]}]},"name":"abi_decode_t_struct$_PackedUserOperation_$4173_calldata_ptr","nativeSrc":"491:244:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"560:6:26","nodeType":"YulTypedName","src":"560:6:26","type":""},{"name":"end","nativeSrc":"568:3:26","nodeType":"YulTypedName","src":"568:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"576:5:26","nodeType":"YulTypedName","src":"576:5:26","type":""}],"src":"491:244:26"},{"body":{"nativeSrc":"786:32:26","nodeType":"YulBlock","src":"786:32:26","statements":[{"nativeSrc":"796:16:26","nodeType":"YulAssignment","src":"796:16:26","value":{"name":"value","nativeSrc":"807:5:26","nodeType":"YulIdentifier","src":"807:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"796:7:26","nodeType":"YulIdentifier","src":"796:7:26"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"741:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"768:5:26","nodeType":"YulTypedName","src":"768:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"778:7:26","nodeType":"YulTypedName","src":"778:7:26","type":""}],"src":"741:77:26"},{"body":{"nativeSrc":"867:79:26","nodeType":"YulBlock","src":"867:79:26","statements":[{"body":{"nativeSrc":"924:16:26","nodeType":"YulBlock","src":"924:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"933:1:26","nodeType":"YulLiteral","src":"933:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"936:1:26","nodeType":"YulLiteral","src":"936:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"926:6:26","nodeType":"YulIdentifier","src":"926:6:26"},"nativeSrc":"926:12:26","nodeType":"YulFunctionCall","src":"926:12:26"},"nativeSrc":"926:12:26","nodeType":"YulExpressionStatement","src":"926:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"890:5:26","nodeType":"YulIdentifier","src":"890:5:26"},{"arguments":[{"name":"value","nativeSrc":"915:5:26","nodeType":"YulIdentifier","src":"915:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"897:17:26","nodeType":"YulIdentifier","src":"897:17:26"},"nativeSrc":"897:24:26","nodeType":"YulFunctionCall","src":"897:24:26"}],"functionName":{"name":"eq","nativeSrc":"887:2:26","nodeType":"YulIdentifier","src":"887:2:26"},"nativeSrc":"887:35:26","nodeType":"YulFunctionCall","src":"887:35:26"}],"functionName":{"name":"iszero","nativeSrc":"880:6:26","nodeType":"YulIdentifier","src":"880:6:26"},"nativeSrc":"880:43:26","nodeType":"YulFunctionCall","src":"880:43:26"},"nativeSrc":"877:63:26","nodeType":"YulIf","src":"877:63:26"}]},"name":"validator_revert_t_bytes32","nativeSrc":"824:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"860:5:26","nodeType":"YulTypedName","src":"860:5:26","type":""}],"src":"824:122:26"},{"body":{"nativeSrc":"1004:87:26","nodeType":"YulBlock","src":"1004:87:26","statements":[{"nativeSrc":"1014:29:26","nodeType":"YulAssignment","src":"1014:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1036:6:26","nodeType":"YulIdentifier","src":"1036:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1023:12:26","nodeType":"YulIdentifier","src":"1023:12:26"},"nativeSrc":"1023:20:26","nodeType":"YulFunctionCall","src":"1023:20:26"},"variableNames":[{"name":"value","nativeSrc":"1014:5:26","nodeType":"YulIdentifier","src":"1014:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1079:5:26","nodeType":"YulIdentifier","src":"1079:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1052:26:26","nodeType":"YulIdentifier","src":"1052:26:26"},"nativeSrc":"1052:33:26","nodeType":"YulFunctionCall","src":"1052:33:26"},"nativeSrc":"1052:33:26","nodeType":"YulExpressionStatement","src":"1052:33:26"}]},"name":"abi_decode_t_bytes32","nativeSrc":"952:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"982:6:26","nodeType":"YulTypedName","src":"982:6:26","type":""},{"name":"end","nativeSrc":"990:3:26","nodeType":"YulTypedName","src":"990:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"998:5:26","nodeType":"YulTypedName","src":"998:5:26","type":""}],"src":"952:139:26"},{"body":{"nativeSrc":"1142:32:26","nodeType":"YulBlock","src":"1142:32:26","statements":[{"nativeSrc":"1152:16:26","nodeType":"YulAssignment","src":"1152:16:26","value":{"name":"value","nativeSrc":"1163:5:26","nodeType":"YulIdentifier","src":"1163:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"1152:7:26","nodeType":"YulIdentifier","src":"1152:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1097:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1124:5:26","nodeType":"YulTypedName","src":"1124:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1134:7:26","nodeType":"YulTypedName","src":"1134:7:26","type":""}],"src":"1097:77:26"},{"body":{"nativeSrc":"1223:79:26","nodeType":"YulBlock","src":"1223:79:26","statements":[{"body":{"nativeSrc":"1280:16:26","nodeType":"YulBlock","src":"1280:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1289:1:26","nodeType":"YulLiteral","src":"1289:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1292:1:26","nodeType":"YulLiteral","src":"1292:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1282:6:26","nodeType":"YulIdentifier","src":"1282:6:26"},"nativeSrc":"1282:12:26","nodeType":"YulFunctionCall","src":"1282:12:26"},"nativeSrc":"1282:12:26","nodeType":"YulExpressionStatement","src":"1282:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1246:5:26","nodeType":"YulIdentifier","src":"1246:5:26"},{"arguments":[{"name":"value","nativeSrc":"1271:5:26","nodeType":"YulIdentifier","src":"1271:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1253:17:26","nodeType":"YulIdentifier","src":"1253:17:26"},"nativeSrc":"1253:24:26","nodeType":"YulFunctionCall","src":"1253:24:26"}],"functionName":{"name":"eq","nativeSrc":"1243:2:26","nodeType":"YulIdentifier","src":"1243:2:26"},"nativeSrc":"1243:35:26","nodeType":"YulFunctionCall","src":"1243:35:26"}],"functionName":{"name":"iszero","nativeSrc":"1236:6:26","nodeType":"YulIdentifier","src":"1236:6:26"},"nativeSrc":"1236:43:26","nodeType":"YulFunctionCall","src":"1236:43:26"},"nativeSrc":"1233:63:26","nodeType":"YulIf","src":"1233:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"1180:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1216:5:26","nodeType":"YulTypedName","src":"1216:5:26","type":""}],"src":"1180:122:26"},{"body":{"nativeSrc":"1360:87:26","nodeType":"YulBlock","src":"1360:87:26","statements":[{"nativeSrc":"1370:29:26","nodeType":"YulAssignment","src":"1370:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1392:6:26","nodeType":"YulIdentifier","src":"1392:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1379:12:26","nodeType":"YulIdentifier","src":"1379:12:26"},"nativeSrc":"1379:20:26","nodeType":"YulFunctionCall","src":"1379:20:26"},"variableNames":[{"name":"value","nativeSrc":"1370:5:26","nodeType":"YulIdentifier","src":"1370:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1435:5:26","nodeType":"YulIdentifier","src":"1435:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1408:26:26","nodeType":"YulIdentifier","src":"1408:26:26"},"nativeSrc":"1408:33:26","nodeType":"YulFunctionCall","src":"1408:33:26"},"nativeSrc":"1408:33:26","nodeType":"YulExpressionStatement","src":"1408:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"1308:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1338:6:26","nodeType":"YulTypedName","src":"1338:6:26","type":""},{"name":"end","nativeSrc":"1346:3:26","nodeType":"YulTypedName","src":"1346:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1354:5:26","nodeType":"YulTypedName","src":"1354:5:26","type":""}],"src":"1308:139:26"},{"body":{"nativeSrc":"1592:718:26","nodeType":"YulBlock","src":"1592:718:26","statements":[{"body":{"nativeSrc":"1638:83:26","nodeType":"YulBlock","src":"1638:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1640:77:26","nodeType":"YulIdentifier","src":"1640:77:26"},"nativeSrc":"1640:79:26","nodeType":"YulFunctionCall","src":"1640:79:26"},"nativeSrc":"1640:79:26","nodeType":"YulExpressionStatement","src":"1640:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1613:7:26","nodeType":"YulIdentifier","src":"1613:7:26"},{"name":"headStart","nativeSrc":"1622:9:26","nodeType":"YulIdentifier","src":"1622:9:26"}],"functionName":{"name":"sub","nativeSrc":"1609:3:26","nodeType":"YulIdentifier","src":"1609:3:26"},"nativeSrc":"1609:23:26","nodeType":"YulFunctionCall","src":"1609:23:26"},{"kind":"number","nativeSrc":"1634:2:26","nodeType":"YulLiteral","src":"1634:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1605:3:26","nodeType":"YulIdentifier","src":"1605:3:26"},"nativeSrc":"1605:32:26","nodeType":"YulFunctionCall","src":"1605:32:26"},"nativeSrc":"1602:119:26","nodeType":"YulIf","src":"1602:119:26"},{"nativeSrc":"1731:316:26","nodeType":"YulBlock","src":"1731:316:26","statements":[{"nativeSrc":"1746:45:26","nodeType":"YulVariableDeclaration","src":"1746:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1777:9:26","nodeType":"YulIdentifier","src":"1777:9:26"},{"kind":"number","nativeSrc":"1788:1:26","nodeType":"YulLiteral","src":"1788:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1773:3:26","nodeType":"YulIdentifier","src":"1773:3:26"},"nativeSrc":"1773:17:26","nodeType":"YulFunctionCall","src":"1773:17:26"}],"functionName":{"name":"calldataload","nativeSrc":"1760:12:26","nodeType":"YulIdentifier","src":"1760:12:26"},"nativeSrc":"1760:31:26","nodeType":"YulFunctionCall","src":"1760:31:26"},"variables":[{"name":"offset","nativeSrc":"1750:6:26","nodeType":"YulTypedName","src":"1750:6:26","type":""}]},{"body":{"nativeSrc":"1838:83:26","nodeType":"YulBlock","src":"1838:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1840:77:26","nodeType":"YulIdentifier","src":"1840:77:26"},"nativeSrc":"1840:79:26","nodeType":"YulFunctionCall","src":"1840:79:26"},"nativeSrc":"1840:79:26","nodeType":"YulExpressionStatement","src":"1840:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1810:6:26","nodeType":"YulIdentifier","src":"1810:6:26"},{"kind":"number","nativeSrc":"1818:18:26","nodeType":"YulLiteral","src":"1818:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1807:2:26","nodeType":"YulIdentifier","src":"1807:2:26"},"nativeSrc":"1807:30:26","nodeType":"YulFunctionCall","src":"1807:30:26"},"nativeSrc":"1804:117:26","nodeType":"YulIf","src":"1804:117:26"},{"nativeSrc":"1935:102:26","nodeType":"YulAssignment","src":"1935:102:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2009:9:26","nodeType":"YulIdentifier","src":"2009:9:26"},{"name":"offset","nativeSrc":"2020:6:26","nodeType":"YulIdentifier","src":"2020:6:26"}],"functionName":{"name":"add","nativeSrc":"2005:3:26","nodeType":"YulIdentifier","src":"2005:3:26"},"nativeSrc":"2005:22:26","nodeType":"YulFunctionCall","src":"2005:22:26"},{"name":"dataEnd","nativeSrc":"2029:7:26","nodeType":"YulIdentifier","src":"2029:7:26"}],"functionName":{"name":"abi_decode_t_struct$_PackedUserOperation_$4173_calldata_ptr","nativeSrc":"1945:59:26","nodeType":"YulIdentifier","src":"1945:59:26"},"nativeSrc":"1945:92:26","nodeType":"YulFunctionCall","src":"1945:92:26"},"variableNames":[{"name":"value0","nativeSrc":"1935:6:26","nodeType":"YulIdentifier","src":"1935:6:26"}]}]},{"nativeSrc":"2057:118:26","nodeType":"YulBlock","src":"2057:118:26","statements":[{"nativeSrc":"2072:16:26","nodeType":"YulVariableDeclaration","src":"2072:16:26","value":{"kind":"number","nativeSrc":"2086:2:26","nodeType":"YulLiteral","src":"2086:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2076:6:26","nodeType":"YulTypedName","src":"2076:6:26","type":""}]},{"nativeSrc":"2102:63:26","nodeType":"YulAssignment","src":"2102:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2137:9:26","nodeType":"YulIdentifier","src":"2137:9:26"},{"name":"offset","nativeSrc":"2148:6:26","nodeType":"YulIdentifier","src":"2148:6:26"}],"functionName":{"name":"add","nativeSrc":"2133:3:26","nodeType":"YulIdentifier","src":"2133:3:26"},"nativeSrc":"2133:22:26","nodeType":"YulFunctionCall","src":"2133:22:26"},{"name":"dataEnd","nativeSrc":"2157:7:26","nodeType":"YulIdentifier","src":"2157:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"2112:20:26","nodeType":"YulIdentifier","src":"2112:20:26"},"nativeSrc":"2112:53:26","nodeType":"YulFunctionCall","src":"2112:53:26"},"variableNames":[{"name":"value1","nativeSrc":"2102:6:26","nodeType":"YulIdentifier","src":"2102:6:26"}]}]},{"nativeSrc":"2185:118:26","nodeType":"YulBlock","src":"2185:118:26","statements":[{"nativeSrc":"2200:16:26","nodeType":"YulVariableDeclaration","src":"2200:16:26","value":{"kind":"number","nativeSrc":"2214:2:26","nodeType":"YulLiteral","src":"2214:2:26","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2204:6:26","nodeType":"YulTypedName","src":"2204:6:26","type":""}]},{"nativeSrc":"2230:63:26","nodeType":"YulAssignment","src":"2230:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2265:9:26","nodeType":"YulIdentifier","src":"2265:9:26"},{"name":"offset","nativeSrc":"2276:6:26","nodeType":"YulIdentifier","src":"2276:6:26"}],"functionName":{"name":"add","nativeSrc":"2261:3:26","nodeType":"YulIdentifier","src":"2261:3:26"},"nativeSrc":"2261:22:26","nodeType":"YulFunctionCall","src":"2261:22:26"},{"name":"dataEnd","nativeSrc":"2285:7:26","nodeType":"YulIdentifier","src":"2285:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2240:20:26","nodeType":"YulIdentifier","src":"2240:20:26"},"nativeSrc":"2240:53:26","nodeType":"YulFunctionCall","src":"2240:53:26"},"variableNames":[{"name":"value2","nativeSrc":"2230:6:26","nodeType":"YulIdentifier","src":"2230:6:26"}]}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$4173_calldata_ptrt_bytes32t_uint256","nativeSrc":"1453:857:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1546:9:26","nodeType":"YulTypedName","src":"1546:9:26","type":""},{"name":"dataEnd","nativeSrc":"1557:7:26","nodeType":"YulTypedName","src":"1557:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1569:6:26","nodeType":"YulTypedName","src":"1569:6:26","type":""},{"name":"value1","nativeSrc":"1577:6:26","nodeType":"YulTypedName","src":"1577:6:26","type":""},{"name":"value2","nativeSrc":"1585:6:26","nodeType":"YulTypedName","src":"1585:6:26","type":""}],"src":"1453:857:26"},{"body":{"nativeSrc":"2381:53:26","nodeType":"YulBlock","src":"2381:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2398:3:26","nodeType":"YulIdentifier","src":"2398:3:26"},{"arguments":[{"name":"value","nativeSrc":"2421:5:26","nodeType":"YulIdentifier","src":"2421:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2403:17:26","nodeType":"YulIdentifier","src":"2403:17:26"},"nativeSrc":"2403:24:26","nodeType":"YulFunctionCall","src":"2403:24:26"}],"functionName":{"name":"mstore","nativeSrc":"2391:6:26","nodeType":"YulIdentifier","src":"2391:6:26"},"nativeSrc":"2391:37:26","nodeType":"YulFunctionCall","src":"2391:37:26"},"nativeSrc":"2391:37:26","nodeType":"YulExpressionStatement","src":"2391:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2316:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2369:5:26","nodeType":"YulTypedName","src":"2369:5:26","type":""},{"name":"pos","nativeSrc":"2376:3:26","nodeType":"YulTypedName","src":"2376:3:26","type":""}],"src":"2316:118:26"},{"body":{"nativeSrc":"2538:124:26","nodeType":"YulBlock","src":"2538:124:26","statements":[{"nativeSrc":"2548:26:26","nodeType":"YulAssignment","src":"2548:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2560:9:26","nodeType":"YulIdentifier","src":"2560:9:26"},{"kind":"number","nativeSrc":"2571:2:26","nodeType":"YulLiteral","src":"2571:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2556:3:26","nodeType":"YulIdentifier","src":"2556:3:26"},"nativeSrc":"2556:18:26","nodeType":"YulFunctionCall","src":"2556:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2548:4:26","nodeType":"YulIdentifier","src":"2548:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2628:6:26","nodeType":"YulIdentifier","src":"2628:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"2641:9:26","nodeType":"YulIdentifier","src":"2641:9:26"},{"kind":"number","nativeSrc":"2652:1:26","nodeType":"YulLiteral","src":"2652:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2637:3:26","nodeType":"YulIdentifier","src":"2637:3:26"},"nativeSrc":"2637:17:26","nodeType":"YulFunctionCall","src":"2637:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2584:43:26","nodeType":"YulIdentifier","src":"2584:43:26"},"nativeSrc":"2584:71:26","nodeType":"YulFunctionCall","src":"2584:71:26"},"nativeSrc":"2584:71:26","nodeType":"YulExpressionStatement","src":"2584:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2440:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2510:9:26","nodeType":"YulTypedName","src":"2510:9:26","type":""},{"name":"value0","nativeSrc":"2522:6:26","nodeType":"YulTypedName","src":"2522:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2533:4:26","nodeType":"YulTypedName","src":"2533:4:26","type":""}],"src":"2440:222:26"},{"body":{"nativeSrc":"2757:28:26","nodeType":"YulBlock","src":"2757:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2774:1:26","nodeType":"YulLiteral","src":"2774:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2777:1:26","nodeType":"YulLiteral","src":"2777:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2767:6:26","nodeType":"YulIdentifier","src":"2767:6:26"},"nativeSrc":"2767:12:26","nodeType":"YulFunctionCall","src":"2767:12:26"},"nativeSrc":"2767:12:26","nodeType":"YulExpressionStatement","src":"2767:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2668:117:26","nodeType":"YulFunctionDefinition","src":"2668:117:26"},{"body":{"nativeSrc":"2880:28:26","nodeType":"YulBlock","src":"2880:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2897:1:26","nodeType":"YulLiteral","src":"2897:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"2900:1:26","nodeType":"YulLiteral","src":"2900:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2890:6:26","nodeType":"YulIdentifier","src":"2890:6:26"},"nativeSrc":"2890:12:26","nodeType":"YulFunctionCall","src":"2890:12:26"},"nativeSrc":"2890:12:26","nodeType":"YulExpressionStatement","src":"2890:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2791:117:26","nodeType":"YulFunctionDefinition","src":"2791:117:26"},{"body":{"nativeSrc":"2962:54:26","nodeType":"YulBlock","src":"2962:54:26","statements":[{"nativeSrc":"2972:38:26","nodeType":"YulAssignment","src":"2972:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2990:5:26","nodeType":"YulIdentifier","src":"2990:5:26"},{"kind":"number","nativeSrc":"2997:2:26","nodeType":"YulLiteral","src":"2997:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2986:3:26","nodeType":"YulIdentifier","src":"2986:3:26"},"nativeSrc":"2986:14:26","nodeType":"YulFunctionCall","src":"2986:14:26"},{"arguments":[{"kind":"number","nativeSrc":"3006:2:26","nodeType":"YulLiteral","src":"3006:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3002:3:26","nodeType":"YulIdentifier","src":"3002:3:26"},"nativeSrc":"3002:7:26","nodeType":"YulFunctionCall","src":"3002:7:26"}],"functionName":{"name":"and","nativeSrc":"2982:3:26","nodeType":"YulIdentifier","src":"2982:3:26"},"nativeSrc":"2982:28:26","nodeType":"YulFunctionCall","src":"2982:28:26"},"variableNames":[{"name":"result","nativeSrc":"2972:6:26","nodeType":"YulIdentifier","src":"2972:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2914:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2945:5:26","nodeType":"YulTypedName","src":"2945:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2955:6:26","nodeType":"YulTypedName","src":"2955:6:26","type":""}],"src":"2914:102:26"},{"body":{"nativeSrc":"3050:152:26","nodeType":"YulBlock","src":"3050:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3067:1:26","nodeType":"YulLiteral","src":"3067:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3070:77:26","nodeType":"YulLiteral","src":"3070:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3060:6:26","nodeType":"YulIdentifier","src":"3060:6:26"},"nativeSrc":"3060:88:26","nodeType":"YulFunctionCall","src":"3060:88:26"},"nativeSrc":"3060:88:26","nodeType":"YulExpressionStatement","src":"3060:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3164:1:26","nodeType":"YulLiteral","src":"3164:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"3167:4:26","nodeType":"YulLiteral","src":"3167:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3157:6:26","nodeType":"YulIdentifier","src":"3157:6:26"},"nativeSrc":"3157:15:26","nodeType":"YulFunctionCall","src":"3157:15:26"},"nativeSrc":"3157:15:26","nodeType":"YulExpressionStatement","src":"3157:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3188:1:26","nodeType":"YulLiteral","src":"3188:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"3191:4:26","nodeType":"YulLiteral","src":"3191:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3181:6:26","nodeType":"YulIdentifier","src":"3181:6:26"},"nativeSrc":"3181:15:26","nodeType":"YulFunctionCall","src":"3181:15:26"},"nativeSrc":"3181:15:26","nodeType":"YulExpressionStatement","src":"3181:15:26"}]},"name":"panic_error_0x41","nativeSrc":"3022:180:26","nodeType":"YulFunctionDefinition","src":"3022:180:26"},{"body":{"nativeSrc":"3251:238:26","nodeType":"YulBlock","src":"3251:238:26","statements":[{"nativeSrc":"3261:58:26","nodeType":"YulVariableDeclaration","src":"3261:58:26","value":{"arguments":[{"name":"memPtr","nativeSrc":"3283:6:26","nodeType":"YulIdentifier","src":"3283:6:26"},{"arguments":[{"name":"size","nativeSrc":"3313:4:26","nodeType":"YulIdentifier","src":"3313:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3291:21:26","nodeType":"YulIdentifier","src":"3291:21:26"},"nativeSrc":"3291:27:26","nodeType":"YulFunctionCall","src":"3291:27:26"}],"functionName":{"name":"add","nativeSrc":"3279:3:26","nodeType":"YulIdentifier","src":"3279:3:26"},"nativeSrc":"3279:40:26","nodeType":"YulFunctionCall","src":"3279:40:26"},"variables":[{"name":"newFreePtr","nativeSrc":"3265:10:26","nodeType":"YulTypedName","src":"3265:10:26","type":""}]},{"body":{"nativeSrc":"3430:22:26","nodeType":"YulBlock","src":"3430:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3432:16:26","nodeType":"YulIdentifier","src":"3432:16:26"},"nativeSrc":"3432:18:26","nodeType":"YulFunctionCall","src":"3432:18:26"},"nativeSrc":"3432:18:26","nodeType":"YulExpressionStatement","src":"3432:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3373:10:26","nodeType":"YulIdentifier","src":"3373:10:26"},{"kind":"number","nativeSrc":"3385:18:26","nodeType":"YulLiteral","src":"3385:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3370:2:26","nodeType":"YulIdentifier","src":"3370:2:26"},"nativeSrc":"3370:34:26","nodeType":"YulFunctionCall","src":"3370:34:26"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3409:10:26","nodeType":"YulIdentifier","src":"3409:10:26"},{"name":"memPtr","nativeSrc":"3421:6:26","nodeType":"YulIdentifier","src":"3421:6:26"}],"functionName":{"name":"lt","nativeSrc":"3406:2:26","nodeType":"YulIdentifier","src":"3406:2:26"},"nativeSrc":"3406:22:26","nodeType":"YulFunctionCall","src":"3406:22:26"}],"functionName":{"name":"or","nativeSrc":"3367:2:26","nodeType":"YulIdentifier","src":"3367:2:26"},"nativeSrc":"3367:62:26","nodeType":"YulFunctionCall","src":"3367:62:26"},"nativeSrc":"3364:88:26","nodeType":"YulIf","src":"3364:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3468:2:26","nodeType":"YulLiteral","src":"3468:2:26","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3472:10:26","nodeType":"YulIdentifier","src":"3472:10:26"}],"functionName":{"name":"mstore","nativeSrc":"3461:6:26","nodeType":"YulIdentifier","src":"3461:6:26"},"nativeSrc":"3461:22:26","nodeType":"YulFunctionCall","src":"3461:22:26"},"nativeSrc":"3461:22:26","nodeType":"YulExpressionStatement","src":"3461:22:26"}]},"name":"finalize_allocation","nativeSrc":"3208:281:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3237:6:26","nodeType":"YulTypedName","src":"3237:6:26","type":""},{"name":"size","nativeSrc":"3245:4:26","nodeType":"YulTypedName","src":"3245:4:26","type":""}],"src":"3208:281:26"},{"body":{"nativeSrc":"3536:88:26","nodeType":"YulBlock","src":"3536:88:26","statements":[{"nativeSrc":"3546:30:26","nodeType":"YulAssignment","src":"3546:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"3556:18:26","nodeType":"YulIdentifier","src":"3556:18:26"},"nativeSrc":"3556:20:26","nodeType":"YulFunctionCall","src":"3556:20:26"},"variableNames":[{"name":"memPtr","nativeSrc":"3546:6:26","nodeType":"YulIdentifier","src":"3546:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3605:6:26","nodeType":"YulIdentifier","src":"3605:6:26"},{"name":"size","nativeSrc":"3613:4:26","nodeType":"YulIdentifier","src":"3613:4:26"}],"functionName":{"name":"finalize_allocation","nativeSrc":"3585:19:26","nodeType":"YulIdentifier","src":"3585:19:26"},"nativeSrc":"3585:33:26","nodeType":"YulFunctionCall","src":"3585:33:26"},"nativeSrc":"3585:33:26","nodeType":"YulExpressionStatement","src":"3585:33:26"}]},"name":"allocate_memory","nativeSrc":"3495:129:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"3520:4:26","nodeType":"YulTypedName","src":"3520:4:26","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"3529:6:26","nodeType":"YulTypedName","src":"3529:6:26","type":""}],"src":"3495:129:26"},{"body":{"nativeSrc":"3697:241:26","nodeType":"YulBlock","src":"3697:241:26","statements":[{"body":{"nativeSrc":"3802:22:26","nodeType":"YulBlock","src":"3802:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3804:16:26","nodeType":"YulIdentifier","src":"3804:16:26"},"nativeSrc":"3804:18:26","nodeType":"YulFunctionCall","src":"3804:18:26"},"nativeSrc":"3804:18:26","nodeType":"YulExpressionStatement","src":"3804:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3774:6:26","nodeType":"YulIdentifier","src":"3774:6:26"},{"kind":"number","nativeSrc":"3782:18:26","nodeType":"YulLiteral","src":"3782:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3771:2:26","nodeType":"YulIdentifier","src":"3771:2:26"},"nativeSrc":"3771:30:26","nodeType":"YulFunctionCall","src":"3771:30:26"},"nativeSrc":"3768:56:26","nodeType":"YulIf","src":"3768:56:26"},{"nativeSrc":"3834:37:26","nodeType":"YulAssignment","src":"3834:37:26","value":{"arguments":[{"name":"length","nativeSrc":"3864:6:26","nodeType":"YulIdentifier","src":"3864:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3842:21:26","nodeType":"YulIdentifier","src":"3842:21:26"},"nativeSrc":"3842:29:26","nodeType":"YulFunctionCall","src":"3842:29:26"},"variableNames":[{"name":"size","nativeSrc":"3834:4:26","nodeType":"YulIdentifier","src":"3834:4:26"}]},{"nativeSrc":"3908:23:26","nodeType":"YulAssignment","src":"3908:23:26","value":{"arguments":[{"name":"size","nativeSrc":"3920:4:26","nodeType":"YulIdentifier","src":"3920:4:26"},{"kind":"number","nativeSrc":"3926:4:26","nodeType":"YulLiteral","src":"3926:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3916:3:26","nodeType":"YulIdentifier","src":"3916:3:26"},"nativeSrc":"3916:15:26","nodeType":"YulFunctionCall","src":"3916:15:26"},"variableNames":[{"name":"size","nativeSrc":"3908:4:26","nodeType":"YulIdentifier","src":"3908:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"3630:308:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3681:6:26","nodeType":"YulTypedName","src":"3681:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3692:4:26","nodeType":"YulTypedName","src":"3692:4:26","type":""}],"src":"3630:308:26"},{"body":{"nativeSrc":"4008:82:26","nodeType":"YulBlock","src":"4008:82:26","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4031:3:26","nodeType":"YulIdentifier","src":"4031:3:26"},{"name":"src","nativeSrc":"4036:3:26","nodeType":"YulIdentifier","src":"4036:3:26"},{"name":"length","nativeSrc":"4041:6:26","nodeType":"YulIdentifier","src":"4041:6:26"}],"functionName":{"name":"calldatacopy","nativeSrc":"4018:12:26","nodeType":"YulIdentifier","src":"4018:12:26"},"nativeSrc":"4018:30:26","nodeType":"YulFunctionCall","src":"4018:30:26"},"nativeSrc":"4018:30:26","nodeType":"YulExpressionStatement","src":"4018:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4068:3:26","nodeType":"YulIdentifier","src":"4068:3:26"},{"name":"length","nativeSrc":"4073:6:26","nodeType":"YulIdentifier","src":"4073:6:26"}],"functionName":{"name":"add","nativeSrc":"4064:3:26","nodeType":"YulIdentifier","src":"4064:3:26"},"nativeSrc":"4064:16:26","nodeType":"YulFunctionCall","src":"4064:16:26"},{"kind":"number","nativeSrc":"4082:1:26","nodeType":"YulLiteral","src":"4082:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4057:6:26","nodeType":"YulIdentifier","src":"4057:6:26"},"nativeSrc":"4057:27:26","nodeType":"YulFunctionCall","src":"4057:27:26"},"nativeSrc":"4057:27:26","nodeType":"YulExpressionStatement","src":"4057:27:26"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"3944:146:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3990:3:26","nodeType":"YulTypedName","src":"3990:3:26","type":""},{"name":"dst","nativeSrc":"3995:3:26","nodeType":"YulTypedName","src":"3995:3:26","type":""},{"name":"length","nativeSrc":"4000:6:26","nodeType":"YulTypedName","src":"4000:6:26","type":""}],"src":"3944:146:26"},{"body":{"nativeSrc":"4180:341:26","nodeType":"YulBlock","src":"4180:341:26","statements":[{"nativeSrc":"4190:75:26","nodeType":"YulAssignment","src":"4190:75:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4257:6:26","nodeType":"YulIdentifier","src":"4257:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4215:41:26","nodeType":"YulIdentifier","src":"4215:41:26"},"nativeSrc":"4215:49:26","nodeType":"YulFunctionCall","src":"4215:49:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"4199:15:26","nodeType":"YulIdentifier","src":"4199:15:26"},"nativeSrc":"4199:66:26","nodeType":"YulFunctionCall","src":"4199:66:26"},"variableNames":[{"name":"array","nativeSrc":"4190:5:26","nodeType":"YulIdentifier","src":"4190:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4281:5:26","nodeType":"YulIdentifier","src":"4281:5:26"},{"name":"length","nativeSrc":"4288:6:26","nodeType":"YulIdentifier","src":"4288:6:26"}],"functionName":{"name":"mstore","nativeSrc":"4274:6:26","nodeType":"YulIdentifier","src":"4274:6:26"},"nativeSrc":"4274:21:26","nodeType":"YulFunctionCall","src":"4274:21:26"},"nativeSrc":"4274:21:26","nodeType":"YulExpressionStatement","src":"4274:21:26"},{"nativeSrc":"4304:27:26","nodeType":"YulVariableDeclaration","src":"4304:27:26","value":{"arguments":[{"name":"array","nativeSrc":"4319:5:26","nodeType":"YulIdentifier","src":"4319:5:26"},{"kind":"number","nativeSrc":"4326:4:26","nodeType":"YulLiteral","src":"4326:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4315:3:26","nodeType":"YulIdentifier","src":"4315:3:26"},"nativeSrc":"4315:16:26","nodeType":"YulFunctionCall","src":"4315:16:26"},"variables":[{"name":"dst","nativeSrc":"4308:3:26","nodeType":"YulTypedName","src":"4308:3:26","type":""}]},{"body":{"nativeSrc":"4369:83:26","nodeType":"YulBlock","src":"4369:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4371:77:26","nodeType":"YulIdentifier","src":"4371:77:26"},"nativeSrc":"4371:79:26","nodeType":"YulFunctionCall","src":"4371:79:26"},"nativeSrc":"4371:79:26","nodeType":"YulExpressionStatement","src":"4371:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4350:3:26","nodeType":"YulIdentifier","src":"4350:3:26"},{"name":"length","nativeSrc":"4355:6:26","nodeType":"YulIdentifier","src":"4355:6:26"}],"functionName":{"name":"add","nativeSrc":"4346:3:26","nodeType":"YulIdentifier","src":"4346:3:26"},"nativeSrc":"4346:16:26","nodeType":"YulFunctionCall","src":"4346:16:26"},{"name":"end","nativeSrc":"4364:3:26","nodeType":"YulIdentifier","src":"4364:3:26"}],"functionName":{"name":"gt","nativeSrc":"4343:2:26","nodeType":"YulIdentifier","src":"4343:2:26"},"nativeSrc":"4343:25:26","nodeType":"YulFunctionCall","src":"4343:25:26"},"nativeSrc":"4340:112:26","nodeType":"YulIf","src":"4340:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"4498:3:26","nodeType":"YulIdentifier","src":"4498:3:26"},{"name":"dst","nativeSrc":"4503:3:26","nodeType":"YulIdentifier","src":"4503:3:26"},{"name":"length","nativeSrc":"4508:6:26","nodeType":"YulIdentifier","src":"4508:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4461:36:26","nodeType":"YulIdentifier","src":"4461:36:26"},"nativeSrc":"4461:54:26","nodeType":"YulFunctionCall","src":"4461:54:26"},"nativeSrc":"4461:54:26","nodeType":"YulExpressionStatement","src":"4461:54:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4096:425:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4153:3:26","nodeType":"YulTypedName","src":"4153:3:26","type":""},{"name":"length","nativeSrc":"4158:6:26","nodeType":"YulTypedName","src":"4158:6:26","type":""},{"name":"end","nativeSrc":"4166:3:26","nodeType":"YulTypedName","src":"4166:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4174:5:26","nodeType":"YulTypedName","src":"4174:5:26","type":""}],"src":"4096:425:26"},{"body":{"nativeSrc":"4603:278:26","nodeType":"YulBlock","src":"4603:278:26","statements":[{"body":{"nativeSrc":"4652:83:26","nodeType":"YulBlock","src":"4652:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"4654:77:26","nodeType":"YulIdentifier","src":"4654:77:26"},"nativeSrc":"4654:79:26","nodeType":"YulFunctionCall","src":"4654:79:26"},"nativeSrc":"4654:79:26","nodeType":"YulExpressionStatement","src":"4654:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4631:6:26","nodeType":"YulIdentifier","src":"4631:6:26"},{"kind":"number","nativeSrc":"4639:4:26","nodeType":"YulLiteral","src":"4639:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4627:3:26","nodeType":"YulIdentifier","src":"4627:3:26"},"nativeSrc":"4627:17:26","nodeType":"YulFunctionCall","src":"4627:17:26"},{"name":"end","nativeSrc":"4646:3:26","nodeType":"YulIdentifier","src":"4646:3:26"}],"functionName":{"name":"slt","nativeSrc":"4623:3:26","nodeType":"YulIdentifier","src":"4623:3:26"},"nativeSrc":"4623:27:26","nodeType":"YulFunctionCall","src":"4623:27:26"}],"functionName":{"name":"iszero","nativeSrc":"4616:6:26","nodeType":"YulIdentifier","src":"4616:6:26"},"nativeSrc":"4616:35:26","nodeType":"YulFunctionCall","src":"4616:35:26"},"nativeSrc":"4613:122:26","nodeType":"YulIf","src":"4613:122:26"},{"nativeSrc":"4744:34:26","nodeType":"YulVariableDeclaration","src":"4744:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"4771:6:26","nodeType":"YulIdentifier","src":"4771:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"4758:12:26","nodeType":"YulIdentifier","src":"4758:12:26"},"nativeSrc":"4758:20:26","nodeType":"YulFunctionCall","src":"4758:20:26"},"variables":[{"name":"length","nativeSrc":"4748:6:26","nodeType":"YulTypedName","src":"4748:6:26","type":""}]},{"nativeSrc":"4787:88:26","nodeType":"YulAssignment","src":"4787:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4848:6:26","nodeType":"YulIdentifier","src":"4848:6:26"},{"kind":"number","nativeSrc":"4856:4:26","nodeType":"YulLiteral","src":"4856:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4844:3:26","nodeType":"YulIdentifier","src":"4844:3:26"},"nativeSrc":"4844:17:26","nodeType":"YulFunctionCall","src":"4844:17:26"},{"name":"length","nativeSrc":"4863:6:26","nodeType":"YulIdentifier","src":"4863:6:26"},{"name":"end","nativeSrc":"4871:3:26","nodeType":"YulIdentifier","src":"4871:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4796:47:26","nodeType":"YulIdentifier","src":"4796:47:26"},"nativeSrc":"4796:79:26","nodeType":"YulFunctionCall","src":"4796:79:26"},"variableNames":[{"name":"array","nativeSrc":"4787:5:26","nodeType":"YulIdentifier","src":"4787:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"4541:340:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4581:6:26","nodeType":"YulTypedName","src":"4581:6:26","type":""},{"name":"end","nativeSrc":"4589:3:26","nodeType":"YulTypedName","src":"4589:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4597:5:26","nodeType":"YulTypedName","src":"4597:5:26","type":""}],"src":"4541:340:26"},{"body":{"nativeSrc":"4963:433:26","nodeType":"YulBlock","src":"4963:433:26","statements":[{"body":{"nativeSrc":"5009:83:26","nodeType":"YulBlock","src":"5009:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5011:77:26","nodeType":"YulIdentifier","src":"5011:77:26"},"nativeSrc":"5011:79:26","nodeType":"YulFunctionCall","src":"5011:79:26"},"nativeSrc":"5011:79:26","nodeType":"YulExpressionStatement","src":"5011:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4984:7:26","nodeType":"YulIdentifier","src":"4984:7:26"},{"name":"headStart","nativeSrc":"4993:9:26","nodeType":"YulIdentifier","src":"4993:9:26"}],"functionName":{"name":"sub","nativeSrc":"4980:3:26","nodeType":"YulIdentifier","src":"4980:3:26"},"nativeSrc":"4980:23:26","nodeType":"YulFunctionCall","src":"4980:23:26"},{"kind":"number","nativeSrc":"5005:2:26","nodeType":"YulLiteral","src":"5005:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4976:3:26","nodeType":"YulIdentifier","src":"4976:3:26"},"nativeSrc":"4976:32:26","nodeType":"YulFunctionCall","src":"4976:32:26"},"nativeSrc":"4973:119:26","nodeType":"YulIf","src":"4973:119:26"},{"nativeSrc":"5102:287:26","nodeType":"YulBlock","src":"5102:287:26","statements":[{"nativeSrc":"5117:45:26","nodeType":"YulVariableDeclaration","src":"5117:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5148:9:26","nodeType":"YulIdentifier","src":"5148:9:26"},{"kind":"number","nativeSrc":"5159:1:26","nodeType":"YulLiteral","src":"5159:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5144:3:26","nodeType":"YulIdentifier","src":"5144:3:26"},"nativeSrc":"5144:17:26","nodeType":"YulFunctionCall","src":"5144:17:26"}],"functionName":{"name":"calldataload","nativeSrc":"5131:12:26","nodeType":"YulIdentifier","src":"5131:12:26"},"nativeSrc":"5131:31:26","nodeType":"YulFunctionCall","src":"5131:31:26"},"variables":[{"name":"offset","nativeSrc":"5121:6:26","nodeType":"YulTypedName","src":"5121:6:26","type":""}]},{"body":{"nativeSrc":"5209:83:26","nodeType":"YulBlock","src":"5209:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"5211:77:26","nodeType":"YulIdentifier","src":"5211:77:26"},"nativeSrc":"5211:79:26","nodeType":"YulFunctionCall","src":"5211:79:26"},"nativeSrc":"5211:79:26","nodeType":"YulExpressionStatement","src":"5211:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5181:6:26","nodeType":"YulIdentifier","src":"5181:6:26"},{"kind":"number","nativeSrc":"5189:18:26","nodeType":"YulLiteral","src":"5189:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5178:2:26","nodeType":"YulIdentifier","src":"5178:2:26"},"nativeSrc":"5178:30:26","nodeType":"YulFunctionCall","src":"5178:30:26"},"nativeSrc":"5175:117:26","nodeType":"YulIf","src":"5175:117:26"},{"nativeSrc":"5306:73:26","nodeType":"YulAssignment","src":"5306:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5351:9:26","nodeType":"YulIdentifier","src":"5351:9:26"},{"name":"offset","nativeSrc":"5362:6:26","nodeType":"YulIdentifier","src":"5362:6:26"}],"functionName":{"name":"add","nativeSrc":"5347:3:26","nodeType":"YulIdentifier","src":"5347:3:26"},"nativeSrc":"5347:22:26","nodeType":"YulFunctionCall","src":"5347:22:26"},{"name":"dataEnd","nativeSrc":"5371:7:26","nodeType":"YulIdentifier","src":"5371:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5316:30:26","nodeType":"YulIdentifier","src":"5316:30:26"},"nativeSrc":"5316:63:26","nodeType":"YulFunctionCall","src":"5316:63:26"},"variableNames":[{"name":"value0","nativeSrc":"5306:6:26","nodeType":"YulIdentifier","src":"5306:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"4887:509:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4933:9:26","nodeType":"YulTypedName","src":"4933:9:26","type":""},{"name":"dataEnd","nativeSrc":"4944:7:26","nodeType":"YulTypedName","src":"4944:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4956:6:26","nodeType":"YulTypedName","src":"4956:6:26","type":""}],"src":"4887:509:26"},{"body":{"nativeSrc":"5447:81:26","nodeType":"YulBlock","src":"5447:81:26","statements":[{"nativeSrc":"5457:65:26","nodeType":"YulAssignment","src":"5457:65:26","value":{"arguments":[{"name":"value","nativeSrc":"5472:5:26","nodeType":"YulIdentifier","src":"5472:5:26"},{"kind":"number","nativeSrc":"5479:42:26","nodeType":"YulLiteral","src":"5479:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5468:3:26","nodeType":"YulIdentifier","src":"5468:3:26"},"nativeSrc":"5468:54:26","nodeType":"YulFunctionCall","src":"5468:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"5457:7:26","nodeType":"YulIdentifier","src":"5457:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5402:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5429:5:26","nodeType":"YulTypedName","src":"5429:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5439:7:26","nodeType":"YulTypedName","src":"5439:7:26","type":""}],"src":"5402:126:26"},{"body":{"nativeSrc":"5579:51:26","nodeType":"YulBlock","src":"5579:51:26","statements":[{"nativeSrc":"5589:35:26","nodeType":"YulAssignment","src":"5589:35:26","value":{"arguments":[{"name":"value","nativeSrc":"5618:5:26","nodeType":"YulIdentifier","src":"5618:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5600:17:26","nodeType":"YulIdentifier","src":"5600:17:26"},"nativeSrc":"5600:24:26","nodeType":"YulFunctionCall","src":"5600:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"5589:7:26","nodeType":"YulIdentifier","src":"5589:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"5534:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5561:5:26","nodeType":"YulTypedName","src":"5561:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5571:7:26","nodeType":"YulTypedName","src":"5571:7:26","type":""}],"src":"5534:96:26"},{"body":{"nativeSrc":"5679:79:26","nodeType":"YulBlock","src":"5679:79:26","statements":[{"body":{"nativeSrc":"5736:16:26","nodeType":"YulBlock","src":"5736:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5745:1:26","nodeType":"YulLiteral","src":"5745:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"5748:1:26","nodeType":"YulLiteral","src":"5748:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5738:6:26","nodeType":"YulIdentifier","src":"5738:6:26"},"nativeSrc":"5738:12:26","nodeType":"YulFunctionCall","src":"5738:12:26"},"nativeSrc":"5738:12:26","nodeType":"YulExpressionStatement","src":"5738:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5702:5:26","nodeType":"YulIdentifier","src":"5702:5:26"},{"arguments":[{"name":"value","nativeSrc":"5727:5:26","nodeType":"YulIdentifier","src":"5727:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5709:17:26","nodeType":"YulIdentifier","src":"5709:17:26"},"nativeSrc":"5709:24:26","nodeType":"YulFunctionCall","src":"5709:24:26"}],"functionName":{"name":"eq","nativeSrc":"5699:2:26","nodeType":"YulIdentifier","src":"5699:2:26"},"nativeSrc":"5699:35:26","nodeType":"YulFunctionCall","src":"5699:35:26"}],"functionName":{"name":"iszero","nativeSrc":"5692:6:26","nodeType":"YulIdentifier","src":"5692:6:26"},"nativeSrc":"5692:43:26","nodeType":"YulFunctionCall","src":"5692:43:26"},"nativeSrc":"5689:63:26","nodeType":"YulIf","src":"5689:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"5636:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5672:5:26","nodeType":"YulTypedName","src":"5672:5:26","type":""}],"src":"5636:122:26"},{"body":{"nativeSrc":"5816:87:26","nodeType":"YulBlock","src":"5816:87:26","statements":[{"nativeSrc":"5826:29:26","nodeType":"YulAssignment","src":"5826:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"5848:6:26","nodeType":"YulIdentifier","src":"5848:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"5835:12:26","nodeType":"YulIdentifier","src":"5835:12:26"},"nativeSrc":"5835:20:26","nodeType":"YulFunctionCall","src":"5835:20:26"},"variableNames":[{"name":"value","nativeSrc":"5826:5:26","nodeType":"YulIdentifier","src":"5826:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5891:5:26","nodeType":"YulIdentifier","src":"5891:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"5864:26:26","nodeType":"YulIdentifier","src":"5864:26:26"},"nativeSrc":"5864:33:26","nodeType":"YulFunctionCall","src":"5864:33:26"},"nativeSrc":"5864:33:26","nodeType":"YulExpressionStatement","src":"5864:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"5764:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5794:6:26","nodeType":"YulTypedName","src":"5794:6:26","type":""},{"name":"end","nativeSrc":"5802:3:26","nodeType":"YulTypedName","src":"5802:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5810:5:26","nodeType":"YulTypedName","src":"5810:5:26","type":""}],"src":"5764:139:26"},{"body":{"nativeSrc":"5975:241:26","nodeType":"YulBlock","src":"5975:241:26","statements":[{"body":{"nativeSrc":"6080:22:26","nodeType":"YulBlock","src":"6080:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6082:16:26","nodeType":"YulIdentifier","src":"6082:16:26"},"nativeSrc":"6082:18:26","nodeType":"YulFunctionCall","src":"6082:18:26"},"nativeSrc":"6082:18:26","nodeType":"YulExpressionStatement","src":"6082:18:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6052:6:26","nodeType":"YulIdentifier","src":"6052:6:26"},{"kind":"number","nativeSrc":"6060:18:26","nodeType":"YulLiteral","src":"6060:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6049:2:26","nodeType":"YulIdentifier","src":"6049:2:26"},"nativeSrc":"6049:30:26","nodeType":"YulFunctionCall","src":"6049:30:26"},"nativeSrc":"6046:56:26","nodeType":"YulIf","src":"6046:56:26"},{"nativeSrc":"6112:37:26","nodeType":"YulAssignment","src":"6112:37:26","value":{"arguments":[{"name":"length","nativeSrc":"6142:6:26","nodeType":"YulIdentifier","src":"6142:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6120:21:26","nodeType":"YulIdentifier","src":"6120:21:26"},"nativeSrc":"6120:29:26","nodeType":"YulFunctionCall","src":"6120:29:26"},"variableNames":[{"name":"size","nativeSrc":"6112:4:26","nodeType":"YulIdentifier","src":"6112:4:26"}]},{"nativeSrc":"6186:23:26","nodeType":"YulAssignment","src":"6186:23:26","value":{"arguments":[{"name":"size","nativeSrc":"6198:4:26","nodeType":"YulIdentifier","src":"6198:4:26"},{"kind":"number","nativeSrc":"6204:4:26","nodeType":"YulLiteral","src":"6204:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6194:3:26","nodeType":"YulIdentifier","src":"6194:3:26"},"nativeSrc":"6194:15:26","nodeType":"YulFunctionCall","src":"6194:15:26"},"variableNames":[{"name":"size","nativeSrc":"6186:4:26","nodeType":"YulIdentifier","src":"6186:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"5909:307:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"5959:6:26","nodeType":"YulTypedName","src":"5959:6:26","type":""}],"returnVariables":[{"name":"size","nativeSrc":"5970:4:26","nodeType":"YulTypedName","src":"5970:4:26","type":""}],"src":"5909:307:26"},{"body":{"nativeSrc":"6305:340:26","nodeType":"YulBlock","src":"6305:340:26","statements":[{"nativeSrc":"6315:74:26","nodeType":"YulAssignment","src":"6315:74:26","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6381:6:26","nodeType":"YulIdentifier","src":"6381:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"6340:40:26","nodeType":"YulIdentifier","src":"6340:40:26"},"nativeSrc":"6340:48:26","nodeType":"YulFunctionCall","src":"6340:48:26"}],"functionName":{"name":"allocate_memory","nativeSrc":"6324:15:26","nodeType":"YulIdentifier","src":"6324:15:26"},"nativeSrc":"6324:65:26","nodeType":"YulFunctionCall","src":"6324:65:26"},"variableNames":[{"name":"array","nativeSrc":"6315:5:26","nodeType":"YulIdentifier","src":"6315:5:26"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6405:5:26","nodeType":"YulIdentifier","src":"6405:5:26"},{"name":"length","nativeSrc":"6412:6:26","nodeType":"YulIdentifier","src":"6412:6:26"}],"functionName":{"name":"mstore","nativeSrc":"6398:6:26","nodeType":"YulIdentifier","src":"6398:6:26"},"nativeSrc":"6398:21:26","nodeType":"YulFunctionCall","src":"6398:21:26"},"nativeSrc":"6398:21:26","nodeType":"YulExpressionStatement","src":"6398:21:26"},{"nativeSrc":"6428:27:26","nodeType":"YulVariableDeclaration","src":"6428:27:26","value":{"arguments":[{"name":"array","nativeSrc":"6443:5:26","nodeType":"YulIdentifier","src":"6443:5:26"},{"kind":"number","nativeSrc":"6450:4:26","nodeType":"YulLiteral","src":"6450:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6439:3:26","nodeType":"YulIdentifier","src":"6439:3:26"},"nativeSrc":"6439:16:26","nodeType":"YulFunctionCall","src":"6439:16:26"},"variables":[{"name":"dst","nativeSrc":"6432:3:26","nodeType":"YulTypedName","src":"6432:3:26","type":""}]},{"body":{"nativeSrc":"6493:83:26","nodeType":"YulBlock","src":"6493:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6495:77:26","nodeType":"YulIdentifier","src":"6495:77:26"},"nativeSrc":"6495:79:26","nodeType":"YulFunctionCall","src":"6495:79:26"},"nativeSrc":"6495:79:26","nodeType":"YulExpressionStatement","src":"6495:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6474:3:26","nodeType":"YulIdentifier","src":"6474:3:26"},{"name":"length","nativeSrc":"6479:6:26","nodeType":"YulIdentifier","src":"6479:6:26"}],"functionName":{"name":"add","nativeSrc":"6470:3:26","nodeType":"YulIdentifier","src":"6470:3:26"},"nativeSrc":"6470:16:26","nodeType":"YulFunctionCall","src":"6470:16:26"},{"name":"end","nativeSrc":"6488:3:26","nodeType":"YulIdentifier","src":"6488:3:26"}],"functionName":{"name":"gt","nativeSrc":"6467:2:26","nodeType":"YulIdentifier","src":"6467:2:26"},"nativeSrc":"6467:25:26","nodeType":"YulFunctionCall","src":"6467:25:26"},"nativeSrc":"6464:112:26","nodeType":"YulIf","src":"6464:112:26"},{"expression":{"arguments":[{"name":"src","nativeSrc":"6622:3:26","nodeType":"YulIdentifier","src":"6622:3:26"},{"name":"dst","nativeSrc":"6627:3:26","nodeType":"YulIdentifier","src":"6627:3:26"},{"name":"length","nativeSrc":"6632:6:26","nodeType":"YulIdentifier","src":"6632:6:26"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"6585:36:26","nodeType":"YulIdentifier","src":"6585:36:26"},"nativeSrc":"6585:54:26","nodeType":"YulFunctionCall","src":"6585:54:26"},"nativeSrc":"6585:54:26","nodeType":"YulExpressionStatement","src":"6585:54:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6222:423:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6278:3:26","nodeType":"YulTypedName","src":"6278:3:26","type":""},{"name":"length","nativeSrc":"6283:6:26","nodeType":"YulTypedName","src":"6283:6:26","type":""},{"name":"end","nativeSrc":"6291:3:26","nodeType":"YulTypedName","src":"6291:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6299:5:26","nodeType":"YulTypedName","src":"6299:5:26","type":""}],"src":"6222:423:26"},{"body":{"nativeSrc":"6725:277:26","nodeType":"YulBlock","src":"6725:277:26","statements":[{"body":{"nativeSrc":"6774:83:26","nodeType":"YulBlock","src":"6774:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6776:77:26","nodeType":"YulIdentifier","src":"6776:77:26"},"nativeSrc":"6776:79:26","nodeType":"YulFunctionCall","src":"6776:79:26"},"nativeSrc":"6776:79:26","nodeType":"YulExpressionStatement","src":"6776:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6753:6:26","nodeType":"YulIdentifier","src":"6753:6:26"},{"kind":"number","nativeSrc":"6761:4:26","nodeType":"YulLiteral","src":"6761:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6749:3:26","nodeType":"YulIdentifier","src":"6749:3:26"},"nativeSrc":"6749:17:26","nodeType":"YulFunctionCall","src":"6749:17:26"},{"name":"end","nativeSrc":"6768:3:26","nodeType":"YulIdentifier","src":"6768:3:26"}],"functionName":{"name":"slt","nativeSrc":"6745:3:26","nodeType":"YulIdentifier","src":"6745:3:26"},"nativeSrc":"6745:27:26","nodeType":"YulFunctionCall","src":"6745:27:26"}],"functionName":{"name":"iszero","nativeSrc":"6738:6:26","nodeType":"YulIdentifier","src":"6738:6:26"},"nativeSrc":"6738:35:26","nodeType":"YulFunctionCall","src":"6738:35:26"},"nativeSrc":"6735:122:26","nodeType":"YulIf","src":"6735:122:26"},{"nativeSrc":"6866:34:26","nodeType":"YulVariableDeclaration","src":"6866:34:26","value":{"arguments":[{"name":"offset","nativeSrc":"6893:6:26","nodeType":"YulIdentifier","src":"6893:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"6880:12:26","nodeType":"YulIdentifier","src":"6880:12:26"},"nativeSrc":"6880:20:26","nodeType":"YulFunctionCall","src":"6880:20:26"},"variables":[{"name":"length","nativeSrc":"6870:6:26","nodeType":"YulTypedName","src":"6870:6:26","type":""}]},{"nativeSrc":"6909:87:26","nodeType":"YulAssignment","src":"6909:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6969:6:26","nodeType":"YulIdentifier","src":"6969:6:26"},{"kind":"number","nativeSrc":"6977:4:26","nodeType":"YulLiteral","src":"6977:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6965:3:26","nodeType":"YulIdentifier","src":"6965:3:26"},"nativeSrc":"6965:17:26","nodeType":"YulFunctionCall","src":"6965:17:26"},{"name":"length","nativeSrc":"6984:6:26","nodeType":"YulIdentifier","src":"6984:6:26"},{"name":"end","nativeSrc":"6992:3:26","nodeType":"YulIdentifier","src":"6992:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"6918:46:26","nodeType":"YulIdentifier","src":"6918:46:26"},"nativeSrc":"6918:78:26","nodeType":"YulFunctionCall","src":"6918:78:26"},"variableNames":[{"name":"array","nativeSrc":"6909:5:26","nodeType":"YulIdentifier","src":"6909:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"6664:338:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6703:6:26","nodeType":"YulTypedName","src":"6703:6:26","type":""},{"name":"end","nativeSrc":"6711:3:26","nodeType":"YulTypedName","src":"6711:3:26","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6719:5:26","nodeType":"YulTypedName","src":"6719:5:26","type":""}],"src":"6664:338:26"},{"body":{"nativeSrc":"7100:560:26","nodeType":"YulBlock","src":"7100:560:26","statements":[{"body":{"nativeSrc":"7146:83:26","nodeType":"YulBlock","src":"7146:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7148:77:26","nodeType":"YulIdentifier","src":"7148:77:26"},"nativeSrc":"7148:79:26","nodeType":"YulFunctionCall","src":"7148:79:26"},"nativeSrc":"7148:79:26","nodeType":"YulExpressionStatement","src":"7148:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7121:7:26","nodeType":"YulIdentifier","src":"7121:7:26"},{"name":"headStart","nativeSrc":"7130:9:26","nodeType":"YulIdentifier","src":"7130:9:26"}],"functionName":{"name":"sub","nativeSrc":"7117:3:26","nodeType":"YulIdentifier","src":"7117:3:26"},"nativeSrc":"7117:23:26","nodeType":"YulFunctionCall","src":"7117:23:26"},{"kind":"number","nativeSrc":"7142:2:26","nodeType":"YulLiteral","src":"7142:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7113:3:26","nodeType":"YulIdentifier","src":"7113:3:26"},"nativeSrc":"7113:32:26","nodeType":"YulFunctionCall","src":"7113:32:26"},"nativeSrc":"7110:119:26","nodeType":"YulIf","src":"7110:119:26"},{"nativeSrc":"7239:117:26","nodeType":"YulBlock","src":"7239:117:26","statements":[{"nativeSrc":"7254:15:26","nodeType":"YulVariableDeclaration","src":"7254:15:26","value":{"kind":"number","nativeSrc":"7268:1:26","nodeType":"YulLiteral","src":"7268:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7258:6:26","nodeType":"YulTypedName","src":"7258:6:26","type":""}]},{"nativeSrc":"7283:63:26","nodeType":"YulAssignment","src":"7283:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7318:9:26","nodeType":"YulIdentifier","src":"7318:9:26"},{"name":"offset","nativeSrc":"7329:6:26","nodeType":"YulIdentifier","src":"7329:6:26"}],"functionName":{"name":"add","nativeSrc":"7314:3:26","nodeType":"YulIdentifier","src":"7314:3:26"},"nativeSrc":"7314:22:26","nodeType":"YulFunctionCall","src":"7314:22:26"},{"name":"dataEnd","nativeSrc":"7338:7:26","nodeType":"YulIdentifier","src":"7338:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7293:20:26","nodeType":"YulIdentifier","src":"7293:20:26"},"nativeSrc":"7293:53:26","nodeType":"YulFunctionCall","src":"7293:53:26"},"variableNames":[{"name":"value0","nativeSrc":"7283:6:26","nodeType":"YulIdentifier","src":"7283:6:26"}]}]},{"nativeSrc":"7366:287:26","nodeType":"YulBlock","src":"7366:287:26","statements":[{"nativeSrc":"7381:46:26","nodeType":"YulVariableDeclaration","src":"7381:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7412:9:26","nodeType":"YulIdentifier","src":"7412:9:26"},{"kind":"number","nativeSrc":"7423:2:26","nodeType":"YulLiteral","src":"7423:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7408:3:26","nodeType":"YulIdentifier","src":"7408:3:26"},"nativeSrc":"7408:18:26","nodeType":"YulFunctionCall","src":"7408:18:26"}],"functionName":{"name":"calldataload","nativeSrc":"7395:12:26","nodeType":"YulIdentifier","src":"7395:12:26"},"nativeSrc":"7395:32:26","nodeType":"YulFunctionCall","src":"7395:32:26"},"variables":[{"name":"offset","nativeSrc":"7385:6:26","nodeType":"YulTypedName","src":"7385:6:26","type":""}]},{"body":{"nativeSrc":"7474:83:26","nodeType":"YulBlock","src":"7474:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"7476:77:26","nodeType":"YulIdentifier","src":"7476:77:26"},"nativeSrc":"7476:79:26","nodeType":"YulFunctionCall","src":"7476:79:26"},"nativeSrc":"7476:79:26","nodeType":"YulExpressionStatement","src":"7476:79:26"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"7446:6:26","nodeType":"YulIdentifier","src":"7446:6:26"},{"kind":"number","nativeSrc":"7454:18:26","nodeType":"YulLiteral","src":"7454:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7443:2:26","nodeType":"YulIdentifier","src":"7443:2:26"},"nativeSrc":"7443:30:26","nodeType":"YulFunctionCall","src":"7443:30:26"},"nativeSrc":"7440:117:26","nodeType":"YulIf","src":"7440:117:26"},{"nativeSrc":"7571:72:26","nodeType":"YulAssignment","src":"7571:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7615:9:26","nodeType":"YulIdentifier","src":"7615:9:26"},{"name":"offset","nativeSrc":"7626:6:26","nodeType":"YulIdentifier","src":"7626:6:26"}],"functionName":{"name":"add","nativeSrc":"7611:3:26","nodeType":"YulIdentifier","src":"7611:3:26"},"nativeSrc":"7611:22:26","nodeType":"YulFunctionCall","src":"7611:22:26"},{"name":"dataEnd","nativeSrc":"7635:7:26","nodeType":"YulIdentifier","src":"7635:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"7581:29:26","nodeType":"YulIdentifier","src":"7581:29:26"},"nativeSrc":"7581:62:26","nodeType":"YulFunctionCall","src":"7581:62:26"},"variableNames":[{"name":"value1","nativeSrc":"7571:6:26","nodeType":"YulIdentifier","src":"7571:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"7008:652:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7062:9:26","nodeType":"YulTypedName","src":"7062:9:26","type":""},{"name":"dataEnd","nativeSrc":"7073:7:26","nodeType":"YulTypedName","src":"7073:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7085:6:26","nodeType":"YulTypedName","src":"7085:6:26","type":""},{"name":"value1","nativeSrc":"7093:6:26","nodeType":"YulTypedName","src":"7093:6:26","type":""}],"src":"7008:652:26"},{"body":{"nativeSrc":"7731:53:26","nodeType":"YulBlock","src":"7731:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7748:3:26","nodeType":"YulIdentifier","src":"7748:3:26"},{"arguments":[{"name":"value","nativeSrc":"7771:5:26","nodeType":"YulIdentifier","src":"7771:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"7753:17:26","nodeType":"YulIdentifier","src":"7753:17:26"},"nativeSrc":"7753:24:26","nodeType":"YulFunctionCall","src":"7753:24:26"}],"functionName":{"name":"mstore","nativeSrc":"7741:6:26","nodeType":"YulIdentifier","src":"7741:6:26"},"nativeSrc":"7741:37:26","nodeType":"YulFunctionCall","src":"7741:37:26"},"nativeSrc":"7741:37:26","nodeType":"YulExpressionStatement","src":"7741:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7666:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7719:5:26","nodeType":"YulTypedName","src":"7719:5:26","type":""},{"name":"pos","nativeSrc":"7726:3:26","nodeType":"YulTypedName","src":"7726:3:26","type":""}],"src":"7666:118:26"},{"body":{"nativeSrc":"7888:124:26","nodeType":"YulBlock","src":"7888:124:26","statements":[{"nativeSrc":"7898:26:26","nodeType":"YulAssignment","src":"7898:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"7910:9:26","nodeType":"YulIdentifier","src":"7910:9:26"},{"kind":"number","nativeSrc":"7921:2:26","nodeType":"YulLiteral","src":"7921:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7906:3:26","nodeType":"YulIdentifier","src":"7906:3:26"},"nativeSrc":"7906:18:26","nodeType":"YulFunctionCall","src":"7906:18:26"},"variableNames":[{"name":"tail","nativeSrc":"7898:4:26","nodeType":"YulIdentifier","src":"7898:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7978:6:26","nodeType":"YulIdentifier","src":"7978:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"7991:9:26","nodeType":"YulIdentifier","src":"7991:9:26"},{"kind":"number","nativeSrc":"8002:1:26","nodeType":"YulLiteral","src":"8002:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7987:3:26","nodeType":"YulIdentifier","src":"7987:3:26"},"nativeSrc":"7987:17:26","nodeType":"YulFunctionCall","src":"7987:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"7934:43:26","nodeType":"YulIdentifier","src":"7934:43:26"},"nativeSrc":"7934:71:26","nodeType":"YulFunctionCall","src":"7934:71:26"},"nativeSrc":"7934:71:26","nodeType":"YulExpressionStatement","src":"7934:71:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"7790:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7860:9:26","nodeType":"YulTypedName","src":"7860:9:26","type":""},{"name":"value0","nativeSrc":"7872:6:26","nodeType":"YulTypedName","src":"7872:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7883:4:26","nodeType":"YulTypedName","src":"7883:4:26","type":""}],"src":"7790:222:26"},{"body":{"nativeSrc":"8083:53:26","nodeType":"YulBlock","src":"8083:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8100:3:26","nodeType":"YulIdentifier","src":"8100:3:26"},{"arguments":[{"name":"value","nativeSrc":"8123:5:26","nodeType":"YulIdentifier","src":"8123:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"8105:17:26","nodeType":"YulIdentifier","src":"8105:17:26"},"nativeSrc":"8105:24:26","nodeType":"YulFunctionCall","src":"8105:24:26"}],"functionName":{"name":"mstore","nativeSrc":"8093:6:26","nodeType":"YulIdentifier","src":"8093:6:26"},"nativeSrc":"8093:37:26","nodeType":"YulFunctionCall","src":"8093:37:26"},"nativeSrc":"8093:37:26","nodeType":"YulExpressionStatement","src":"8093:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8018:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8071:5:26","nodeType":"YulTypedName","src":"8071:5:26","type":""},{"name":"pos","nativeSrc":"8078:3:26","nodeType":"YulTypedName","src":"8078:3:26","type":""}],"src":"8018:118:26"},{"body":{"nativeSrc":"8240:124:26","nodeType":"YulBlock","src":"8240:124:26","statements":[{"nativeSrc":"8250:26:26","nodeType":"YulAssignment","src":"8250:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"8262:9:26","nodeType":"YulIdentifier","src":"8262:9:26"},{"kind":"number","nativeSrc":"8273:2:26","nodeType":"YulLiteral","src":"8273:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8258:3:26","nodeType":"YulIdentifier","src":"8258:3:26"},"nativeSrc":"8258:18:26","nodeType":"YulFunctionCall","src":"8258:18:26"},"variableNames":[{"name":"tail","nativeSrc":"8250:4:26","nodeType":"YulIdentifier","src":"8250:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8330:6:26","nodeType":"YulIdentifier","src":"8330:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"8343:9:26","nodeType":"YulIdentifier","src":"8343:9:26"},{"kind":"number","nativeSrc":"8354:1:26","nodeType":"YulLiteral","src":"8354:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8339:3:26","nodeType":"YulIdentifier","src":"8339:3:26"},"nativeSrc":"8339:17:26","nodeType":"YulFunctionCall","src":"8339:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8286:43:26","nodeType":"YulIdentifier","src":"8286:43:26"},"nativeSrc":"8286:71:26","nodeType":"YulFunctionCall","src":"8286:71:26"},"nativeSrc":"8286:71:26","nodeType":"YulExpressionStatement","src":"8286:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8142:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8212:9:26","nodeType":"YulTypedName","src":"8212:9:26","type":""},{"name":"value0","nativeSrc":"8224:6:26","nodeType":"YulTypedName","src":"8224:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8235:4:26","nodeType":"YulTypedName","src":"8235:4:26","type":""}],"src":"8142:222:26"},{"body":{"nativeSrc":"8429:40:26","nodeType":"YulBlock","src":"8429:40:26","statements":[{"nativeSrc":"8440:22:26","nodeType":"YulAssignment","src":"8440:22:26","value":{"arguments":[{"name":"value","nativeSrc":"8456:5:26","nodeType":"YulIdentifier","src":"8456:5:26"}],"functionName":{"name":"mload","nativeSrc":"8450:5:26","nodeType":"YulIdentifier","src":"8450:5:26"},"nativeSrc":"8450:12:26","nodeType":"YulFunctionCall","src":"8450:12:26"},"variableNames":[{"name":"length","nativeSrc":"8440:6:26","nodeType":"YulIdentifier","src":"8440:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"8370:99:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8412:5:26","nodeType":"YulTypedName","src":"8412:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8422:6:26","nodeType":"YulTypedName","src":"8422:6:26","type":""}],"src":"8370:99:26"},{"body":{"nativeSrc":"8571:73:26","nodeType":"YulBlock","src":"8571:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8588:3:26","nodeType":"YulIdentifier","src":"8588:3:26"},{"name":"length","nativeSrc":"8593:6:26","nodeType":"YulIdentifier","src":"8593:6:26"}],"functionName":{"name":"mstore","nativeSrc":"8581:6:26","nodeType":"YulIdentifier","src":"8581:6:26"},"nativeSrc":"8581:19:26","nodeType":"YulFunctionCall","src":"8581:19:26"},"nativeSrc":"8581:19:26","nodeType":"YulExpressionStatement","src":"8581:19:26"},{"nativeSrc":"8609:29:26","nodeType":"YulAssignment","src":"8609:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"8628:3:26","nodeType":"YulIdentifier","src":"8628:3:26"},{"kind":"number","nativeSrc":"8633:4:26","nodeType":"YulLiteral","src":"8633:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8624:3:26","nodeType":"YulIdentifier","src":"8624:3:26"},"nativeSrc":"8624:14:26","nodeType":"YulFunctionCall","src":"8624:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"8609:11:26","nodeType":"YulIdentifier","src":"8609:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8475:169:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8543:3:26","nodeType":"YulTypedName","src":"8543:3:26","type":""},{"name":"length","nativeSrc":"8548:6:26","nodeType":"YulTypedName","src":"8548:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8559:11:26","nodeType":"YulTypedName","src":"8559:11:26","type":""}],"src":"8475:169:26"},{"body":{"nativeSrc":"8712:184:26","nodeType":"YulBlock","src":"8712:184:26","statements":[{"nativeSrc":"8722:10:26","nodeType":"YulVariableDeclaration","src":"8722:10:26","value":{"kind":"number","nativeSrc":"8731:1:26","nodeType":"YulLiteral","src":"8731:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8726:1:26","nodeType":"YulTypedName","src":"8726:1:26","type":""}]},{"body":{"nativeSrc":"8791:63:26","nodeType":"YulBlock","src":"8791:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8816:3:26","nodeType":"YulIdentifier","src":"8816:3:26"},{"name":"i","nativeSrc":"8821:1:26","nodeType":"YulIdentifier","src":"8821:1:26"}],"functionName":{"name":"add","nativeSrc":"8812:3:26","nodeType":"YulIdentifier","src":"8812:3:26"},"nativeSrc":"8812:11:26","nodeType":"YulFunctionCall","src":"8812:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8835:3:26","nodeType":"YulIdentifier","src":"8835:3:26"},{"name":"i","nativeSrc":"8840:1:26","nodeType":"YulIdentifier","src":"8840:1:26"}],"functionName":{"name":"add","nativeSrc":"8831:3:26","nodeType":"YulIdentifier","src":"8831:3:26"},"nativeSrc":"8831:11:26","nodeType":"YulFunctionCall","src":"8831:11:26"}],"functionName":{"name":"mload","nativeSrc":"8825:5:26","nodeType":"YulIdentifier","src":"8825:5:26"},"nativeSrc":"8825:18:26","nodeType":"YulFunctionCall","src":"8825:18:26"}],"functionName":{"name":"mstore","nativeSrc":"8805:6:26","nodeType":"YulIdentifier","src":"8805:6:26"},"nativeSrc":"8805:39:26","nodeType":"YulFunctionCall","src":"8805:39:26"},"nativeSrc":"8805:39:26","nodeType":"YulExpressionStatement","src":"8805:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8752:1:26","nodeType":"YulIdentifier","src":"8752:1:26"},{"name":"length","nativeSrc":"8755:6:26","nodeType":"YulIdentifier","src":"8755:6:26"}],"functionName":{"name":"lt","nativeSrc":"8749:2:26","nodeType":"YulIdentifier","src":"8749:2:26"},"nativeSrc":"8749:13:26","nodeType":"YulFunctionCall","src":"8749:13:26"},"nativeSrc":"8741:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"8763:19:26","nodeType":"YulBlock","src":"8763:19:26","statements":[{"nativeSrc":"8765:15:26","nodeType":"YulAssignment","src":"8765:15:26","value":{"arguments":[{"name":"i","nativeSrc":"8774:1:26","nodeType":"YulIdentifier","src":"8774:1:26"},{"kind":"number","nativeSrc":"8777:2:26","nodeType":"YulLiteral","src":"8777:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8770:3:26","nodeType":"YulIdentifier","src":"8770:3:26"},"nativeSrc":"8770:10:26","nodeType":"YulFunctionCall","src":"8770:10:26"},"variableNames":[{"name":"i","nativeSrc":"8765:1:26","nodeType":"YulIdentifier","src":"8765:1:26"}]}]},"pre":{"nativeSrc":"8745:3:26","nodeType":"YulBlock","src":"8745:3:26","statements":[]},"src":"8741:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8874:3:26","nodeType":"YulIdentifier","src":"8874:3:26"},{"name":"length","nativeSrc":"8879:6:26","nodeType":"YulIdentifier","src":"8879:6:26"}],"functionName":{"name":"add","nativeSrc":"8870:3:26","nodeType":"YulIdentifier","src":"8870:3:26"},"nativeSrc":"8870:16:26","nodeType":"YulFunctionCall","src":"8870:16:26"},{"kind":"number","nativeSrc":"8888:1:26","nodeType":"YulLiteral","src":"8888:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8863:6:26","nodeType":"YulIdentifier","src":"8863:6:26"},"nativeSrc":"8863:27:26","nodeType":"YulFunctionCall","src":"8863:27:26"},"nativeSrc":"8863:27:26","nodeType":"YulExpressionStatement","src":"8863:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8650:246:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8694:3:26","nodeType":"YulTypedName","src":"8694:3:26","type":""},{"name":"dst","nativeSrc":"8699:3:26","nodeType":"YulTypedName","src":"8699:3:26","type":""},{"name":"length","nativeSrc":"8704:6:26","nodeType":"YulTypedName","src":"8704:6:26","type":""}],"src":"8650:246:26"},{"body":{"nativeSrc":"8994:285:26","nodeType":"YulBlock","src":"8994:285:26","statements":[{"nativeSrc":"9004:53:26","nodeType":"YulVariableDeclaration","src":"9004:53:26","value":{"arguments":[{"name":"value","nativeSrc":"9051:5:26","nodeType":"YulIdentifier","src":"9051:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"9018:32:26","nodeType":"YulIdentifier","src":"9018:32:26"},"nativeSrc":"9018:39:26","nodeType":"YulFunctionCall","src":"9018:39:26"},"variables":[{"name":"length","nativeSrc":"9008:6:26","nodeType":"YulTypedName","src":"9008:6:26","type":""}]},{"nativeSrc":"9066:78:26","nodeType":"YulAssignment","src":"9066:78:26","value":{"arguments":[{"name":"pos","nativeSrc":"9132:3:26","nodeType":"YulIdentifier","src":"9132:3:26"},{"name":"length","nativeSrc":"9137:6:26","nodeType":"YulIdentifier","src":"9137:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9073:58:26","nodeType":"YulIdentifier","src":"9073:58:26"},"nativeSrc":"9073:71:26","nodeType":"YulFunctionCall","src":"9073:71:26"},"variableNames":[{"name":"pos","nativeSrc":"9066:3:26","nodeType":"YulIdentifier","src":"9066:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9192:5:26","nodeType":"YulIdentifier","src":"9192:5:26"},{"kind":"number","nativeSrc":"9199:4:26","nodeType":"YulLiteral","src":"9199:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9188:3:26","nodeType":"YulIdentifier","src":"9188:3:26"},"nativeSrc":"9188:16:26","nodeType":"YulFunctionCall","src":"9188:16:26"},{"name":"pos","nativeSrc":"9206:3:26","nodeType":"YulIdentifier","src":"9206:3:26"},{"name":"length","nativeSrc":"9211:6:26","nodeType":"YulIdentifier","src":"9211:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9153:34:26","nodeType":"YulIdentifier","src":"9153:34:26"},"nativeSrc":"9153:65:26","nodeType":"YulFunctionCall","src":"9153:65:26"},"nativeSrc":"9153:65:26","nodeType":"YulExpressionStatement","src":"9153:65:26"},{"nativeSrc":"9227:46:26","nodeType":"YulAssignment","src":"9227:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"9238:3:26","nodeType":"YulIdentifier","src":"9238:3:26"},{"arguments":[{"name":"length","nativeSrc":"9265:6:26","nodeType":"YulIdentifier","src":"9265:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9243:21:26","nodeType":"YulIdentifier","src":"9243:21:26"},"nativeSrc":"9243:29:26","nodeType":"YulFunctionCall","src":"9243:29:26"}],"functionName":{"name":"add","nativeSrc":"9234:3:26","nodeType":"YulIdentifier","src":"9234:3:26"},"nativeSrc":"9234:39:26","nodeType":"YulFunctionCall","src":"9234:39:26"},"variableNames":[{"name":"end","nativeSrc":"9227:3:26","nodeType":"YulIdentifier","src":"9227:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8902:377:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8975:5:26","nodeType":"YulTypedName","src":"8975:5:26","type":""},{"name":"pos","nativeSrc":"8982:3:26","nodeType":"YulTypedName","src":"8982:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8990:3:26","nodeType":"YulTypedName","src":"8990:3:26","type":""}],"src":"8902:377:26"},{"body":{"nativeSrc":"9403:195:26","nodeType":"YulBlock","src":"9403:195:26","statements":[{"nativeSrc":"9413:26:26","nodeType":"YulAssignment","src":"9413:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"9425:9:26","nodeType":"YulIdentifier","src":"9425:9:26"},{"kind":"number","nativeSrc":"9436:2:26","nodeType":"YulLiteral","src":"9436:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9421:3:26","nodeType":"YulIdentifier","src":"9421:3:26"},"nativeSrc":"9421:18:26","nodeType":"YulFunctionCall","src":"9421:18:26"},"variableNames":[{"name":"tail","nativeSrc":"9413:4:26","nodeType":"YulIdentifier","src":"9413:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9460:9:26","nodeType":"YulIdentifier","src":"9460:9:26"},{"kind":"number","nativeSrc":"9471:1:26","nodeType":"YulLiteral","src":"9471:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9456:3:26","nodeType":"YulIdentifier","src":"9456:3:26"},"nativeSrc":"9456:17:26","nodeType":"YulFunctionCall","src":"9456:17:26"},{"arguments":[{"name":"tail","nativeSrc":"9479:4:26","nodeType":"YulIdentifier","src":"9479:4:26"},{"name":"headStart","nativeSrc":"9485:9:26","nodeType":"YulIdentifier","src":"9485:9:26"}],"functionName":{"name":"sub","nativeSrc":"9475:3:26","nodeType":"YulIdentifier","src":"9475:3:26"},"nativeSrc":"9475:20:26","nodeType":"YulFunctionCall","src":"9475:20:26"}],"functionName":{"name":"mstore","nativeSrc":"9449:6:26","nodeType":"YulIdentifier","src":"9449:6:26"},"nativeSrc":"9449:47:26","nodeType":"YulFunctionCall","src":"9449:47:26"},"nativeSrc":"9449:47:26","nodeType":"YulExpressionStatement","src":"9449:47:26"},{"nativeSrc":"9505:86:26","nodeType":"YulAssignment","src":"9505:86:26","value":{"arguments":[{"name":"value0","nativeSrc":"9577:6:26","nodeType":"YulIdentifier","src":"9577:6:26"},{"name":"tail","nativeSrc":"9586:4:26","nodeType":"YulIdentifier","src":"9586:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9513:63:26","nodeType":"YulIdentifier","src":"9513:63:26"},"nativeSrc":"9513:78:26","nodeType":"YulFunctionCall","src":"9513:78:26"},"variableNames":[{"name":"tail","nativeSrc":"9505:4:26","nodeType":"YulIdentifier","src":"9505:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9285:313:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9375:9:26","nodeType":"YulTypedName","src":"9375:9:26","type":""},{"name":"value0","nativeSrc":"9387:6:26","nodeType":"YulTypedName","src":"9387:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9398:4:26","nodeType":"YulTypedName","src":"9398:4:26","type":""}],"src":"9285:313:26"},{"body":{"nativeSrc":"9636:28:26","nodeType":"YulBlock","src":"9636:28:26","statements":[{"nativeSrc":"9646:12:26","nodeType":"YulAssignment","src":"9646:12:26","value":{"name":"value","nativeSrc":"9653:5:26","nodeType":"YulIdentifier","src":"9653:5:26"},"variableNames":[{"name":"ret","nativeSrc":"9646:3:26","nodeType":"YulIdentifier","src":"9646:3:26"}]}]},"name":"identity","nativeSrc":"9604:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9622:5:26","nodeType":"YulTypedName","src":"9622:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"9632:3:26","nodeType":"YulTypedName","src":"9632:3:26","type":""}],"src":"9604:60:26"},{"body":{"nativeSrc":"9730:82:26","nodeType":"YulBlock","src":"9730:82:26","statements":[{"nativeSrc":"9740:66:26","nodeType":"YulAssignment","src":"9740:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9798:5:26","nodeType":"YulIdentifier","src":"9798:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9780:17:26","nodeType":"YulIdentifier","src":"9780:17:26"},"nativeSrc":"9780:24:26","nodeType":"YulFunctionCall","src":"9780:24:26"}],"functionName":{"name":"identity","nativeSrc":"9771:8:26","nodeType":"YulIdentifier","src":"9771:8:26"},"nativeSrc":"9771:34:26","nodeType":"YulFunctionCall","src":"9771:34:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"9753:17:26","nodeType":"YulIdentifier","src":"9753:17:26"},"nativeSrc":"9753:53:26","nodeType":"YulFunctionCall","src":"9753:53:26"},"variableNames":[{"name":"converted","nativeSrc":"9740:9:26","nodeType":"YulIdentifier","src":"9740:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"9670:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9710:5:26","nodeType":"YulTypedName","src":"9710:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9720:9:26","nodeType":"YulTypedName","src":"9720:9:26","type":""}],"src":"9670:142:26"},{"body":{"nativeSrc":"9878:66:26","nodeType":"YulBlock","src":"9878:66:26","statements":[{"nativeSrc":"9888:50:26","nodeType":"YulAssignment","src":"9888:50:26","value":{"arguments":[{"name":"value","nativeSrc":"9932:5:26","nodeType":"YulIdentifier","src":"9932:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"9901:30:26","nodeType":"YulIdentifier","src":"9901:30:26"},"nativeSrc":"9901:37:26","nodeType":"YulFunctionCall","src":"9901:37:26"},"variableNames":[{"name":"converted","nativeSrc":"9888:9:26","nodeType":"YulIdentifier","src":"9888:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"9818:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9858:5:26","nodeType":"YulTypedName","src":"9858:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"9868:9:26","nodeType":"YulTypedName","src":"9868:9:26","type":""}],"src":"9818:126:26"},{"body":{"nativeSrc":"10030:66:26","nodeType":"YulBlock","src":"10030:66:26","statements":[{"nativeSrc":"10040:50:26","nodeType":"YulAssignment","src":"10040:50:26","value":{"arguments":[{"name":"value","nativeSrc":"10084:5:26","nodeType":"YulIdentifier","src":"10084:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"10053:30:26","nodeType":"YulIdentifier","src":"10053:30:26"},"nativeSrc":"10053:37:26","nodeType":"YulFunctionCall","src":"10053:37:26"},"variableNames":[{"name":"converted","nativeSrc":"10040:9:26","nodeType":"YulIdentifier","src":"10040:9:26"}]}]},"name":"convert_t_contract$_IEntryPoint_$4028_to_t_address","nativeSrc":"9950:146:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10010:5:26","nodeType":"YulTypedName","src":"10010:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"10020:9:26","nodeType":"YulTypedName","src":"10020:9:26","type":""}],"src":"9950:146:26"},{"body":{"nativeSrc":"10187:86:26","nodeType":"YulBlock","src":"10187:86:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10204:3:26","nodeType":"YulIdentifier","src":"10204:3:26"},{"arguments":[{"name":"value","nativeSrc":"10260:5:26","nodeType":"YulIdentifier","src":"10260:5:26"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$4028_to_t_address","nativeSrc":"10209:50:26","nodeType":"YulIdentifier","src":"10209:50:26"},"nativeSrc":"10209:57:26","nodeType":"YulFunctionCall","src":"10209:57:26"}],"functionName":{"name":"mstore","nativeSrc":"10197:6:26","nodeType":"YulIdentifier","src":"10197:6:26"},"nativeSrc":"10197:70:26","nodeType":"YulFunctionCall","src":"10197:70:26"},"nativeSrc":"10197:70:26","nodeType":"YulExpressionStatement","src":"10197:70:26"}]},"name":"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack","nativeSrc":"10102:171:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10175:5:26","nodeType":"YulTypedName","src":"10175:5:26","type":""},{"name":"pos","nativeSrc":"10182:3:26","nodeType":"YulTypedName","src":"10182:3:26","type":""}],"src":"10102:171:26"},{"body":{"nativeSrc":"10397:144:26","nodeType":"YulBlock","src":"10397:144:26","statements":[{"nativeSrc":"10407:26:26","nodeType":"YulAssignment","src":"10407:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"10419:9:26","nodeType":"YulIdentifier","src":"10419:9:26"},{"kind":"number","nativeSrc":"10430:2:26","nodeType":"YulLiteral","src":"10430:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10415:3:26","nodeType":"YulIdentifier","src":"10415:3:26"},"nativeSrc":"10415:18:26","nodeType":"YulFunctionCall","src":"10415:18:26"},"variableNames":[{"name":"tail","nativeSrc":"10407:4:26","nodeType":"YulIdentifier","src":"10407:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10507:6:26","nodeType":"YulIdentifier","src":"10507:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"10520:9:26","nodeType":"YulIdentifier","src":"10520:9:26"},{"kind":"number","nativeSrc":"10531:1:26","nodeType":"YulLiteral","src":"10531:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10516:3:26","nodeType":"YulIdentifier","src":"10516:3:26"},"nativeSrc":"10516:17:26","nodeType":"YulFunctionCall","src":"10516:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack","nativeSrc":"10443:63:26","nodeType":"YulIdentifier","src":"10443:63:26"},"nativeSrc":"10443:91:26","nodeType":"YulFunctionCall","src":"10443:91:26"},"nativeSrc":"10443:91:26","nodeType":"YulExpressionStatement","src":"10443:91:26"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed","nativeSrc":"10279:262:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10369:9:26","nodeType":"YulTypedName","src":"10369:9:26","type":""},{"name":"value0","nativeSrc":"10381:6:26","nodeType":"YulTypedName","src":"10381:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10392:4:26","nodeType":"YulTypedName","src":"10392:4:26","type":""}],"src":"10279:262:26"},{"body":{"nativeSrc":"10613:263:26","nodeType":"YulBlock","src":"10613:263:26","statements":[{"body":{"nativeSrc":"10659:83:26","nodeType":"YulBlock","src":"10659:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10661:77:26","nodeType":"YulIdentifier","src":"10661:77:26"},"nativeSrc":"10661:79:26","nodeType":"YulFunctionCall","src":"10661:79:26"},"nativeSrc":"10661:79:26","nodeType":"YulExpressionStatement","src":"10661:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10634:7:26","nodeType":"YulIdentifier","src":"10634:7:26"},{"name":"headStart","nativeSrc":"10643:9:26","nodeType":"YulIdentifier","src":"10643:9:26"}],"functionName":{"name":"sub","nativeSrc":"10630:3:26","nodeType":"YulIdentifier","src":"10630:3:26"},"nativeSrc":"10630:23:26","nodeType":"YulFunctionCall","src":"10630:23:26"},{"kind":"number","nativeSrc":"10655:2:26","nodeType":"YulLiteral","src":"10655:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10626:3:26","nodeType":"YulIdentifier","src":"10626:3:26"},"nativeSrc":"10626:32:26","nodeType":"YulFunctionCall","src":"10626:32:26"},"nativeSrc":"10623:119:26","nodeType":"YulIf","src":"10623:119:26"},{"nativeSrc":"10752:117:26","nodeType":"YulBlock","src":"10752:117:26","statements":[{"nativeSrc":"10767:15:26","nodeType":"YulVariableDeclaration","src":"10767:15:26","value":{"kind":"number","nativeSrc":"10781:1:26","nodeType":"YulLiteral","src":"10781:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10771:6:26","nodeType":"YulTypedName","src":"10771:6:26","type":""}]},{"nativeSrc":"10796:63:26","nodeType":"YulAssignment","src":"10796:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10831:9:26","nodeType":"YulIdentifier","src":"10831:9:26"},{"name":"offset","nativeSrc":"10842:6:26","nodeType":"YulIdentifier","src":"10842:6:26"}],"functionName":{"name":"add","nativeSrc":"10827:3:26","nodeType":"YulIdentifier","src":"10827:3:26"},"nativeSrc":"10827:22:26","nodeType":"YulFunctionCall","src":"10827:22:26"},{"name":"dataEnd","nativeSrc":"10851:7:26","nodeType":"YulIdentifier","src":"10851:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10806:20:26","nodeType":"YulIdentifier","src":"10806:20:26"},"nativeSrc":"10806:53:26","nodeType":"YulFunctionCall","src":"10806:53:26"},"variableNames":[{"name":"value0","nativeSrc":"10796:6:26","nodeType":"YulIdentifier","src":"10796:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"10547:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10583:9:26","nodeType":"YulTypedName","src":"10583:9:26","type":""},{"name":"dataEnd","nativeSrc":"10594:7:26","nodeType":"YulTypedName","src":"10594:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10606:6:26","nodeType":"YulTypedName","src":"10606:6:26","type":""}],"src":"10547:329:26"},{"body":{"nativeSrc":"10988:65:26","nodeType":"YulBlock","src":"10988:65:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11010:6:26","nodeType":"YulIdentifier","src":"11010:6:26"},{"kind":"number","nativeSrc":"11018:1:26","nodeType":"YulLiteral","src":"11018:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11006:3:26","nodeType":"YulIdentifier","src":"11006:3:26"},"nativeSrc":"11006:14:26","nodeType":"YulFunctionCall","src":"11006:14:26"},{"hexValue":"596f7520617265206e6f7420746865206f776e6572","kind":"string","nativeSrc":"11022:23:26","nodeType":"YulLiteral","src":"11022:23:26","type":"","value":"You are not the owner"}],"functionName":{"name":"mstore","nativeSrc":"10999:6:26","nodeType":"YulIdentifier","src":"10999:6:26"},"nativeSrc":"10999:47:26","nodeType":"YulFunctionCall","src":"10999:47:26"},"nativeSrc":"10999:47:26","nodeType":"YulExpressionStatement","src":"10999:47:26"}]},"name":"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","nativeSrc":"10882:171:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10980:6:26","nodeType":"YulTypedName","src":"10980:6:26","type":""}],"src":"10882:171:26"},{"body":{"nativeSrc":"11205:220:26","nodeType":"YulBlock","src":"11205:220:26","statements":[{"nativeSrc":"11215:74:26","nodeType":"YulAssignment","src":"11215:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"11281:3:26","nodeType":"YulIdentifier","src":"11281:3:26"},{"kind":"number","nativeSrc":"11286:2:26","nodeType":"YulLiteral","src":"11286:2:26","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11222:58:26","nodeType":"YulIdentifier","src":"11222:58:26"},"nativeSrc":"11222:67:26","nodeType":"YulFunctionCall","src":"11222:67:26"},"variableNames":[{"name":"pos","nativeSrc":"11215:3:26","nodeType":"YulIdentifier","src":"11215:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11387:3:26","nodeType":"YulIdentifier","src":"11387:3:26"}],"functionName":{"name":"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc","nativeSrc":"11298:88:26","nodeType":"YulIdentifier","src":"11298:88:26"},"nativeSrc":"11298:93:26","nodeType":"YulFunctionCall","src":"11298:93:26"},"nativeSrc":"11298:93:26","nodeType":"YulExpressionStatement","src":"11298:93:26"},{"nativeSrc":"11400:19:26","nodeType":"YulAssignment","src":"11400:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"11411:3:26","nodeType":"YulIdentifier","src":"11411:3:26"},{"kind":"number","nativeSrc":"11416:2:26","nodeType":"YulLiteral","src":"11416:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11407:3:26","nodeType":"YulIdentifier","src":"11407:3:26"},"nativeSrc":"11407:12:26","nodeType":"YulFunctionCall","src":"11407:12:26"},"variableNames":[{"name":"end","nativeSrc":"11400:3:26","nodeType":"YulIdentifier","src":"11400:3:26"}]}]},"name":"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack","nativeSrc":"11059:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11193:3:26","nodeType":"YulTypedName","src":"11193:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11201:3:26","nodeType":"YulTypedName","src":"11201:3:26","type":""}],"src":"11059:366:26"},{"body":{"nativeSrc":"11602:248:26","nodeType":"YulBlock","src":"11602:248:26","statements":[{"nativeSrc":"11612:26:26","nodeType":"YulAssignment","src":"11612:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"11624:9:26","nodeType":"YulIdentifier","src":"11624:9:26"},{"kind":"number","nativeSrc":"11635:2:26","nodeType":"YulLiteral","src":"11635:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11620:3:26","nodeType":"YulIdentifier","src":"11620:3:26"},"nativeSrc":"11620:18:26","nodeType":"YulFunctionCall","src":"11620:18:26"},"variableNames":[{"name":"tail","nativeSrc":"11612:4:26","nodeType":"YulIdentifier","src":"11612:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11659:9:26","nodeType":"YulIdentifier","src":"11659:9:26"},{"kind":"number","nativeSrc":"11670:1:26","nodeType":"YulLiteral","src":"11670:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11655:3:26","nodeType":"YulIdentifier","src":"11655:3:26"},"nativeSrc":"11655:17:26","nodeType":"YulFunctionCall","src":"11655:17:26"},{"arguments":[{"name":"tail","nativeSrc":"11678:4:26","nodeType":"YulIdentifier","src":"11678:4:26"},{"name":"headStart","nativeSrc":"11684:9:26","nodeType":"YulIdentifier","src":"11684:9:26"}],"functionName":{"name":"sub","nativeSrc":"11674:3:26","nodeType":"YulIdentifier","src":"11674:3:26"},"nativeSrc":"11674:20:26","nodeType":"YulFunctionCall","src":"11674:20:26"}],"functionName":{"name":"mstore","nativeSrc":"11648:6:26","nodeType":"YulIdentifier","src":"11648:6:26"},"nativeSrc":"11648:47:26","nodeType":"YulFunctionCall","src":"11648:47:26"},"nativeSrc":"11648:47:26","nodeType":"YulExpressionStatement","src":"11648:47:26"},{"nativeSrc":"11704:139:26","nodeType":"YulAssignment","src":"11704:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"11838:4:26","nodeType":"YulIdentifier","src":"11838:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack","nativeSrc":"11712:124:26","nodeType":"YulIdentifier","src":"11712:124:26"},"nativeSrc":"11712:131:26","nodeType":"YulFunctionCall","src":"11712:131:26"},"variableNames":[{"name":"tail","nativeSrc":"11704:4:26","nodeType":"YulIdentifier","src":"11704:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11431:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11582:9:26","nodeType":"YulTypedName","src":"11582:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11597:4:26","nodeType":"YulTypedName","src":"11597:4:26","type":""}],"src":"11431:419:26"},{"body":{"nativeSrc":"11919:80:26","nodeType":"YulBlock","src":"11919:80:26","statements":[{"nativeSrc":"11929:22:26","nodeType":"YulAssignment","src":"11929:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"11944:6:26","nodeType":"YulIdentifier","src":"11944:6:26"}],"functionName":{"name":"mload","nativeSrc":"11938:5:26","nodeType":"YulIdentifier","src":"11938:5:26"},"nativeSrc":"11938:13:26","nodeType":"YulFunctionCall","src":"11938:13:26"},"variableNames":[{"name":"value","nativeSrc":"11929:5:26","nodeType":"YulIdentifier","src":"11929:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11987:5:26","nodeType":"YulIdentifier","src":"11987:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"11960:26:26","nodeType":"YulIdentifier","src":"11960:26:26"},"nativeSrc":"11960:33:26","nodeType":"YulFunctionCall","src":"11960:33:26"},"nativeSrc":"11960:33:26","nodeType":"YulExpressionStatement","src":"11960:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"11856:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11897:6:26","nodeType":"YulTypedName","src":"11897:6:26","type":""},{"name":"end","nativeSrc":"11905:3:26","nodeType":"YulTypedName","src":"11905:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11913:5:26","nodeType":"YulTypedName","src":"11913:5:26","type":""}],"src":"11856:143:26"},{"body":{"nativeSrc":"12082:274:26","nodeType":"YulBlock","src":"12082:274:26","statements":[{"body":{"nativeSrc":"12128:83:26","nodeType":"YulBlock","src":"12128:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12130:77:26","nodeType":"YulIdentifier","src":"12130:77:26"},"nativeSrc":"12130:79:26","nodeType":"YulFunctionCall","src":"12130:79:26"},"nativeSrc":"12130:79:26","nodeType":"YulExpressionStatement","src":"12130:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12103:7:26","nodeType":"YulIdentifier","src":"12103:7:26"},{"name":"headStart","nativeSrc":"12112:9:26","nodeType":"YulIdentifier","src":"12112:9:26"}],"functionName":{"name":"sub","nativeSrc":"12099:3:26","nodeType":"YulIdentifier","src":"12099:3:26"},"nativeSrc":"12099:23:26","nodeType":"YulFunctionCall","src":"12099:23:26"},{"kind":"number","nativeSrc":"12124:2:26","nodeType":"YulLiteral","src":"12124:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12095:3:26","nodeType":"YulIdentifier","src":"12095:3:26"},"nativeSrc":"12095:32:26","nodeType":"YulFunctionCall","src":"12095:32:26"},"nativeSrc":"12092:119:26","nodeType":"YulIf","src":"12092:119:26"},{"nativeSrc":"12221:128:26","nodeType":"YulBlock","src":"12221:128:26","statements":[{"nativeSrc":"12236:15:26","nodeType":"YulVariableDeclaration","src":"12236:15:26","value":{"kind":"number","nativeSrc":"12250:1:26","nodeType":"YulLiteral","src":"12250:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12240:6:26","nodeType":"YulTypedName","src":"12240:6:26","type":""}]},{"nativeSrc":"12265:74:26","nodeType":"YulAssignment","src":"12265:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12311:9:26","nodeType":"YulIdentifier","src":"12311:9:26"},{"name":"offset","nativeSrc":"12322:6:26","nodeType":"YulIdentifier","src":"12322:6:26"}],"functionName":{"name":"add","nativeSrc":"12307:3:26","nodeType":"YulIdentifier","src":"12307:3:26"},"nativeSrc":"12307:22:26","nodeType":"YulFunctionCall","src":"12307:22:26"},{"name":"dataEnd","nativeSrc":"12331:7:26","nodeType":"YulIdentifier","src":"12331:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"12275:31:26","nodeType":"YulIdentifier","src":"12275:31:26"},"nativeSrc":"12275:64:26","nodeType":"YulFunctionCall","src":"12275:64:26"},"variableNames":[{"name":"value0","nativeSrc":"12265:6:26","nodeType":"YulIdentifier","src":"12265:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"12005:351:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12052:9:26","nodeType":"YulTypedName","src":"12052:9:26","type":""},{"name":"dataEnd","nativeSrc":"12063:7:26","nodeType":"YulTypedName","src":"12063:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12075:6:26","nodeType":"YulTypedName","src":"12075:6:26","type":""}],"src":"12005:351:26"},{"body":{"nativeSrc":"12415:32:26","nodeType":"YulBlock","src":"12415:32:26","statements":[{"nativeSrc":"12425:16:26","nodeType":"YulAssignment","src":"12425:16:26","value":{"name":"value","nativeSrc":"12436:5:26","nodeType":"YulIdentifier","src":"12436:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"12425:7:26","nodeType":"YulIdentifier","src":"12425:7:26"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"12362:85:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12397:5:26","nodeType":"YulTypedName","src":"12397:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12407:7:26","nodeType":"YulTypedName","src":"12407:7:26","type":""}],"src":"12362:85:26"},{"body":{"nativeSrc":"12497:57:26","nodeType":"YulBlock","src":"12497:57:26","statements":[{"nativeSrc":"12507:41:26","nodeType":"YulAssignment","src":"12507:41:26","value":{"arguments":[{"name":"value","nativeSrc":"12522:5:26","nodeType":"YulIdentifier","src":"12522:5:26"},{"kind":"number","nativeSrc":"12529:18:26","nodeType":"YulLiteral","src":"12529:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"12518:3:26","nodeType":"YulIdentifier","src":"12518:3:26"},"nativeSrc":"12518:30:26","nodeType":"YulFunctionCall","src":"12518:30:26"},"variableNames":[{"name":"cleaned","nativeSrc":"12507:7:26","nodeType":"YulIdentifier","src":"12507:7:26"}]}]},"name":"cleanup_t_uint64","nativeSrc":"12453:101:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12479:5:26","nodeType":"YulTypedName","src":"12479:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"12489:7:26","nodeType":"YulTypedName","src":"12489:7:26","type":""}],"src":"12453:101:26"},{"body":{"nativeSrc":"12627:89:26","nodeType":"YulBlock","src":"12627:89:26","statements":[{"nativeSrc":"12637:73:26","nodeType":"YulAssignment","src":"12637:73:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12702:5:26","nodeType":"YulIdentifier","src":"12702:5:26"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"12676:25:26","nodeType":"YulIdentifier","src":"12676:25:26"},"nativeSrc":"12676:32:26","nodeType":"YulFunctionCall","src":"12676:32:26"}],"functionName":{"name":"identity","nativeSrc":"12667:8:26","nodeType":"YulIdentifier","src":"12667:8:26"},"nativeSrc":"12667:42:26","nodeType":"YulFunctionCall","src":"12667:42:26"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"12650:16:26","nodeType":"YulIdentifier","src":"12650:16:26"},"nativeSrc":"12650:60:26","nodeType":"YulFunctionCall","src":"12650:60:26"},"variableNames":[{"name":"converted","nativeSrc":"12637:9:26","nodeType":"YulIdentifier","src":"12637:9:26"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"12560:156:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12607:5:26","nodeType":"YulTypedName","src":"12607:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"12617:9:26","nodeType":"YulTypedName","src":"12617:9:26","type":""}],"src":"12560:156:26"},{"body":{"nativeSrc":"12794:73:26","nodeType":"YulBlock","src":"12794:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12811:3:26","nodeType":"YulIdentifier","src":"12811:3:26"},{"arguments":[{"name":"value","nativeSrc":"12854:5:26","nodeType":"YulIdentifier","src":"12854:5:26"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"12816:37:26","nodeType":"YulIdentifier","src":"12816:37:26"},"nativeSrc":"12816:44:26","nodeType":"YulFunctionCall","src":"12816:44:26"}],"functionName":{"name":"mstore","nativeSrc":"12804:6:26","nodeType":"YulIdentifier","src":"12804:6:26"},"nativeSrc":"12804:57:26","nodeType":"YulFunctionCall","src":"12804:57:26"},"nativeSrc":"12804:57:26","nodeType":"YulExpressionStatement","src":"12804:57:26"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"12722:145:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12782:5:26","nodeType":"YulTypedName","src":"12782:5:26","type":""},{"name":"pos","nativeSrc":"12789:3:26","nodeType":"YulTypedName","src":"12789:3:26","type":""}],"src":"12722:145:26"},{"body":{"nativeSrc":"12978:131:26","nodeType":"YulBlock","src":"12978:131:26","statements":[{"nativeSrc":"12988:26:26","nodeType":"YulAssignment","src":"12988:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"13000:9:26","nodeType":"YulIdentifier","src":"13000:9:26"},{"kind":"number","nativeSrc":"13011:2:26","nodeType":"YulLiteral","src":"13011:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12996:3:26","nodeType":"YulIdentifier","src":"12996:3:26"},"nativeSrc":"12996:18:26","nodeType":"YulFunctionCall","src":"12996:18:26"},"variableNames":[{"name":"tail","nativeSrc":"12988:4:26","nodeType":"YulIdentifier","src":"12988:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13075:6:26","nodeType":"YulIdentifier","src":"13075:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"13088:9:26","nodeType":"YulIdentifier","src":"13088:9:26"},{"kind":"number","nativeSrc":"13099:1:26","nodeType":"YulLiteral","src":"13099:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13084:3:26","nodeType":"YulIdentifier","src":"13084:3:26"},"nativeSrc":"13084:17:26","nodeType":"YulFunctionCall","src":"13084:17:26"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"13024:50:26","nodeType":"YulIdentifier","src":"13024:50:26"},"nativeSrc":"13024:78:26","nodeType":"YulFunctionCall","src":"13024:78:26"},"nativeSrc":"13024:78:26","nodeType":"YulExpressionStatement","src":"13024:78:26"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"12873:236:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12950:9:26","nodeType":"YulTypedName","src":"12950:9:26","type":""},{"name":"value0","nativeSrc":"12962:6:26","nodeType":"YulTypedName","src":"12962:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12973:4:26","nodeType":"YulTypedName","src":"12973:4:26","type":""}],"src":"12873:236:26"},{"body":{"nativeSrc":"13168:32:26","nodeType":"YulBlock","src":"13168:32:26","statements":[{"nativeSrc":"13178:16:26","nodeType":"YulAssignment","src":"13178:16:26","value":{"name":"value","nativeSrc":"13189:5:26","nodeType":"YulIdentifier","src":"13189:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"13178:7:26","nodeType":"YulIdentifier","src":"13178:7:26"}]}]},"name":"cleanup_t_rational_0_by_1","nativeSrc":"13115:85:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13150:5:26","nodeType":"YulTypedName","src":"13150:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13160:7:26","nodeType":"YulTypedName","src":"13160:7:26","type":""}],"src":"13115:85:26"},{"body":{"nativeSrc":"13251:89:26","nodeType":"YulBlock","src":"13251:89:26","statements":[{"nativeSrc":"13261:73:26","nodeType":"YulAssignment","src":"13261:73:26","value":{"arguments":[{"name":"value","nativeSrc":"13276:5:26","nodeType":"YulIdentifier","src":"13276:5:26"},{"kind":"number","nativeSrc":"13283:50:26","nodeType":"YulLiteral","src":"13283:50:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13272:3:26","nodeType":"YulIdentifier","src":"13272:3:26"},"nativeSrc":"13272:62:26","nodeType":"YulFunctionCall","src":"13272:62:26"},"variableNames":[{"name":"cleaned","nativeSrc":"13261:7:26","nodeType":"YulIdentifier","src":"13261:7:26"}]}]},"name":"cleanup_t_uint192","nativeSrc":"13206:134:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13233:5:26","nodeType":"YulTypedName","src":"13233:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13243:7:26","nodeType":"YulTypedName","src":"13243:7:26","type":""}],"src":"13206:134:26"},{"body":{"nativeSrc":"13414:90:26","nodeType":"YulBlock","src":"13414:90:26","statements":[{"nativeSrc":"13424:74:26","nodeType":"YulAssignment","src":"13424:74:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13490:5:26","nodeType":"YulIdentifier","src":"13490:5:26"}],"functionName":{"name":"cleanup_t_rational_0_by_1","nativeSrc":"13464:25:26","nodeType":"YulIdentifier","src":"13464:25:26"},"nativeSrc":"13464:32:26","nodeType":"YulFunctionCall","src":"13464:32:26"}],"functionName":{"name":"identity","nativeSrc":"13455:8:26","nodeType":"YulIdentifier","src":"13455:8:26"},"nativeSrc":"13455:42:26","nodeType":"YulFunctionCall","src":"13455:42:26"}],"functionName":{"name":"cleanup_t_uint192","nativeSrc":"13437:17:26","nodeType":"YulIdentifier","src":"13437:17:26"},"nativeSrc":"13437:61:26","nodeType":"YulFunctionCall","src":"13437:61:26"},"variableNames":[{"name":"converted","nativeSrc":"13424:9:26","nodeType":"YulIdentifier","src":"13424:9:26"}]}]},"name":"convert_t_rational_0_by_1_to_t_uint192","nativeSrc":"13346:158:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13394:5:26","nodeType":"YulTypedName","src":"13394:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13404:9:26","nodeType":"YulTypedName","src":"13404:9:26","type":""}],"src":"13346:158:26"},{"body":{"nativeSrc":"13583:74:26","nodeType":"YulBlock","src":"13583:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13600:3:26","nodeType":"YulIdentifier","src":"13600:3:26"},{"arguments":[{"name":"value","nativeSrc":"13644:5:26","nodeType":"YulIdentifier","src":"13644:5:26"}],"functionName":{"name":"convert_t_rational_0_by_1_to_t_uint192","nativeSrc":"13605:38:26","nodeType":"YulIdentifier","src":"13605:38:26"},"nativeSrc":"13605:45:26","nodeType":"YulFunctionCall","src":"13605:45:26"}],"functionName":{"name":"mstore","nativeSrc":"13593:6:26","nodeType":"YulIdentifier","src":"13593:6:26"},"nativeSrc":"13593:58:26","nodeType":"YulFunctionCall","src":"13593:58:26"},"nativeSrc":"13593:58:26","nodeType":"YulExpressionStatement","src":"13593:58:26"}]},"name":"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack","nativeSrc":"13510:147:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13571:5:26","nodeType":"YulTypedName","src":"13571:5:26","type":""},{"name":"pos","nativeSrc":"13578:3:26","nodeType":"YulTypedName","src":"13578:3:26","type":""}],"src":"13510:147:26"},{"body":{"nativeSrc":"13797:214:26","nodeType":"YulBlock","src":"13797:214:26","statements":[{"nativeSrc":"13807:26:26","nodeType":"YulAssignment","src":"13807:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"13819:9:26","nodeType":"YulIdentifier","src":"13819:9:26"},{"kind":"number","nativeSrc":"13830:2:26","nodeType":"YulLiteral","src":"13830:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13815:3:26","nodeType":"YulIdentifier","src":"13815:3:26"},"nativeSrc":"13815:18:26","nodeType":"YulFunctionCall","src":"13815:18:26"},"variableNames":[{"name":"tail","nativeSrc":"13807:4:26","nodeType":"YulIdentifier","src":"13807:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13887:6:26","nodeType":"YulIdentifier","src":"13887:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"13900:9:26","nodeType":"YulIdentifier","src":"13900:9:26"},{"kind":"number","nativeSrc":"13911:1:26","nodeType":"YulLiteral","src":"13911:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13896:3:26","nodeType":"YulIdentifier","src":"13896:3:26"},"nativeSrc":"13896:17:26","nodeType":"YulFunctionCall","src":"13896:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13843:43:26","nodeType":"YulIdentifier","src":"13843:43:26"},"nativeSrc":"13843:71:26","nodeType":"YulFunctionCall","src":"13843:71:26"},"nativeSrc":"13843:71:26","nodeType":"YulExpressionStatement","src":"13843:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13976:6:26","nodeType":"YulIdentifier","src":"13976:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"13989:9:26","nodeType":"YulIdentifier","src":"13989:9:26"},{"kind":"number","nativeSrc":"14000:2:26","nodeType":"YulLiteral","src":"14000:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13985:3:26","nodeType":"YulIdentifier","src":"13985:3:26"},"nativeSrc":"13985:18:26","nodeType":"YulFunctionCall","src":"13985:18:26"}],"functionName":{"name":"abi_encode_t_rational_0_by_1_to_t_uint192_fromStack","nativeSrc":"13924:51:26","nodeType":"YulIdentifier","src":"13924:51:26"},"nativeSrc":"13924:80:26","nodeType":"YulFunctionCall","src":"13924:80:26"},"nativeSrc":"13924:80:26","nodeType":"YulExpressionStatement","src":"13924:80:26"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed","nativeSrc":"13663:348:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13761:9:26","nodeType":"YulTypedName","src":"13761:9:26","type":""},{"name":"value1","nativeSrc":"13773:6:26","nodeType":"YulTypedName","src":"13773:6:26","type":""},{"name":"value0","nativeSrc":"13781:6:26","nodeType":"YulTypedName","src":"13781:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13792:4:26","nodeType":"YulTypedName","src":"13792:4:26","type":""}],"src":"13663:348:26"},{"body":{"nativeSrc":"14123:72:26","nodeType":"YulBlock","src":"14123:72:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14145:6:26","nodeType":"YulIdentifier","src":"14145:6:26"},{"kind":"number","nativeSrc":"14153:1:26","nodeType":"YulLiteral","src":"14153:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14141:3:26","nodeType":"YulIdentifier","src":"14141:3:26"},"nativeSrc":"14141:14:26","nodeType":"YulFunctionCall","src":"14141:14:26"},{"hexValue":"6163636f756e743a206e6f742066726f6d20456e747279506f696e74","kind":"string","nativeSrc":"14157:30:26","nodeType":"YulLiteral","src":"14157:30:26","type":"","value":"account: not from EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"14134:6:26","nodeType":"YulIdentifier","src":"14134:6:26"},"nativeSrc":"14134:54:26","nodeType":"YulFunctionCall","src":"14134:54:26"},"nativeSrc":"14134:54:26","nodeType":"YulExpressionStatement","src":"14134:54:26"}]},"name":"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","nativeSrc":"14017:178:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14115:6:26","nodeType":"YulTypedName","src":"14115:6:26","type":""}],"src":"14017:178:26"},{"body":{"nativeSrc":"14347:220:26","nodeType":"YulBlock","src":"14347:220:26","statements":[{"nativeSrc":"14357:74:26","nodeType":"YulAssignment","src":"14357:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"14423:3:26","nodeType":"YulIdentifier","src":"14423:3:26"},{"kind":"number","nativeSrc":"14428:2:26","nodeType":"YulLiteral","src":"14428:2:26","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14364:58:26","nodeType":"YulIdentifier","src":"14364:58:26"},"nativeSrc":"14364:67:26","nodeType":"YulFunctionCall","src":"14364:67:26"},"variableNames":[{"name":"pos","nativeSrc":"14357:3:26","nodeType":"YulIdentifier","src":"14357:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14529:3:26","nodeType":"YulIdentifier","src":"14529:3:26"}],"functionName":{"name":"store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50","nativeSrc":"14440:88:26","nodeType":"YulIdentifier","src":"14440:88:26"},"nativeSrc":"14440:93:26","nodeType":"YulFunctionCall","src":"14440:93:26"},"nativeSrc":"14440:93:26","nodeType":"YulExpressionStatement","src":"14440:93:26"},{"nativeSrc":"14542:19:26","nodeType":"YulAssignment","src":"14542:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"14553:3:26","nodeType":"YulIdentifier","src":"14553:3:26"},{"kind":"number","nativeSrc":"14558:2:26","nodeType":"YulLiteral","src":"14558:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14549:3:26","nodeType":"YulIdentifier","src":"14549:3:26"},"nativeSrc":"14549:12:26","nodeType":"YulFunctionCall","src":"14549:12:26"},"variableNames":[{"name":"end","nativeSrc":"14542:3:26","nodeType":"YulIdentifier","src":"14542:3:26"}]}]},"name":"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack","nativeSrc":"14201:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14335:3:26","nodeType":"YulTypedName","src":"14335:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14343:3:26","nodeType":"YulTypedName","src":"14343:3:26","type":""}],"src":"14201:366:26"},{"body":{"nativeSrc":"14744:248:26","nodeType":"YulBlock","src":"14744:248:26","statements":[{"nativeSrc":"14754:26:26","nodeType":"YulAssignment","src":"14754:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"14766:9:26","nodeType":"YulIdentifier","src":"14766:9:26"},{"kind":"number","nativeSrc":"14777:2:26","nodeType":"YulLiteral","src":"14777:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14762:3:26","nodeType":"YulIdentifier","src":"14762:3:26"},"nativeSrc":"14762:18:26","nodeType":"YulFunctionCall","src":"14762:18:26"},"variableNames":[{"name":"tail","nativeSrc":"14754:4:26","nodeType":"YulIdentifier","src":"14754:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14801:9:26","nodeType":"YulIdentifier","src":"14801:9:26"},{"kind":"number","nativeSrc":"14812:1:26","nodeType":"YulLiteral","src":"14812:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14797:3:26","nodeType":"YulIdentifier","src":"14797:3:26"},"nativeSrc":"14797:17:26","nodeType":"YulFunctionCall","src":"14797:17:26"},{"arguments":[{"name":"tail","nativeSrc":"14820:4:26","nodeType":"YulIdentifier","src":"14820:4:26"},{"name":"headStart","nativeSrc":"14826:9:26","nodeType":"YulIdentifier","src":"14826:9:26"}],"functionName":{"name":"sub","nativeSrc":"14816:3:26","nodeType":"YulIdentifier","src":"14816:3:26"},"nativeSrc":"14816:20:26","nodeType":"YulFunctionCall","src":"14816:20:26"}],"functionName":{"name":"mstore","nativeSrc":"14790:6:26","nodeType":"YulIdentifier","src":"14790:6:26"},"nativeSrc":"14790:47:26","nodeType":"YulFunctionCall","src":"14790:47:26"},"nativeSrc":"14790:47:26","nodeType":"YulExpressionStatement","src":"14790:47:26"},{"nativeSrc":"14846:139:26","nodeType":"YulAssignment","src":"14846:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"14980:4:26","nodeType":"YulIdentifier","src":"14980:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack","nativeSrc":"14854:124:26","nodeType":"YulIdentifier","src":"14854:124:26"},"nativeSrc":"14854:131:26","nodeType":"YulFunctionCall","src":"14854:131:26"},"variableNames":[{"name":"tail","nativeSrc":"14846:4:26","nodeType":"YulIdentifier","src":"14846:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14573:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14724:9:26","nodeType":"YulTypedName","src":"14724:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14739:4:26","nodeType":"YulTypedName","src":"14739:4:26","type":""}],"src":"14573:419:26"},{"body":{"nativeSrc":"15087:28:26","nodeType":"YulBlock","src":"15087:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15104:1:26","nodeType":"YulLiteral","src":"15104:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15107:1:26","nodeType":"YulLiteral","src":"15107:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15097:6:26","nodeType":"YulIdentifier","src":"15097:6:26"},"nativeSrc":"15097:12:26","nodeType":"YulFunctionCall","src":"15097:12:26"},"nativeSrc":"15097:12:26","nodeType":"YulExpressionStatement","src":"15097:12:26"}]},"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"14998:117:26","nodeType":"YulFunctionDefinition","src":"14998:117:26"},{"body":{"nativeSrc":"15210:28:26","nodeType":"YulBlock","src":"15210:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15227:1:26","nodeType":"YulLiteral","src":"15227:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15230:1:26","nodeType":"YulLiteral","src":"15230:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15220:6:26","nodeType":"YulIdentifier","src":"15220:6:26"},"nativeSrc":"15220:12:26","nodeType":"YulFunctionCall","src":"15220:12:26"},"nativeSrc":"15220:12:26","nodeType":"YulExpressionStatement","src":"15220:12:26"}]},"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"15121:117:26","nodeType":"YulFunctionDefinition","src":"15121:117:26"},{"body":{"nativeSrc":"15333:28:26","nodeType":"YulBlock","src":"15333:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15350:1:26","nodeType":"YulLiteral","src":"15350:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"15353:1:26","nodeType":"YulLiteral","src":"15353:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"15343:6:26","nodeType":"YulIdentifier","src":"15343:6:26"},"nativeSrc":"15343:12:26","nodeType":"YulFunctionCall","src":"15343:12:26"},"nativeSrc":"15343:12:26","nodeType":"YulExpressionStatement","src":"15343:12:26"}]},"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"15244:117:26","nodeType":"YulFunctionDefinition","src":"15244:117:26"},{"body":{"nativeSrc":"15457:634:26","nodeType":"YulBlock","src":"15457:634:26","statements":[{"nativeSrc":"15467:51:26","nodeType":"YulVariableDeclaration","src":"15467:51:26","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"15506:11:26","nodeType":"YulIdentifier","src":"15506:11:26"}],"functionName":{"name":"calldataload","nativeSrc":"15493:12:26","nodeType":"YulIdentifier","src":"15493:12:26"},"nativeSrc":"15493:25:26","nodeType":"YulFunctionCall","src":"15493:25:26"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"15471:18:26","nodeType":"YulTypedName","src":"15471:18:26","type":""}]},{"body":{"nativeSrc":"15612:83:26","nodeType":"YulBlock","src":"15612:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad","nativeSrc":"15614:77:26","nodeType":"YulIdentifier","src":"15614:77:26"},"nativeSrc":"15614:79:26","nodeType":"YulFunctionCall","src":"15614:79:26"},"nativeSrc":"15614:79:26","nodeType":"YulExpressionStatement","src":"15614:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"15541:18:26","nodeType":"YulIdentifier","src":"15541:18:26"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"15569:12:26","nodeType":"YulIdentifier","src":"15569:12:26"},"nativeSrc":"15569:14:26","nodeType":"YulFunctionCall","src":"15569:14:26"},{"name":"base_ref","nativeSrc":"15585:8:26","nodeType":"YulIdentifier","src":"15585:8:26"}],"functionName":{"name":"sub","nativeSrc":"15565:3:26","nodeType":"YulIdentifier","src":"15565:3:26"},"nativeSrc":"15565:29:26","nodeType":"YulFunctionCall","src":"15565:29:26"},{"arguments":[{"kind":"number","nativeSrc":"15600:4:26","nodeType":"YulLiteral","src":"15600:4:26","type":"","value":"0x20"},{"kind":"number","nativeSrc":"15606:1:26","nodeType":"YulLiteral","src":"15606:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"15596:3:26","nodeType":"YulIdentifier","src":"15596:3:26"},"nativeSrc":"15596:12:26","nodeType":"YulFunctionCall","src":"15596:12:26"}],"functionName":{"name":"sub","nativeSrc":"15561:3:26","nodeType":"YulIdentifier","src":"15561:3:26"},"nativeSrc":"15561:48:26","nodeType":"YulFunctionCall","src":"15561:48:26"}],"functionName":{"name":"slt","nativeSrc":"15537:3:26","nodeType":"YulIdentifier","src":"15537:3:26"},"nativeSrc":"15537:73:26","nodeType":"YulFunctionCall","src":"15537:73:26"}],"functionName":{"name":"iszero","nativeSrc":"15530:6:26","nodeType":"YulIdentifier","src":"15530:6:26"},"nativeSrc":"15530:81:26","nodeType":"YulFunctionCall","src":"15530:81:26"},"nativeSrc":"15527:168:26","nodeType":"YulIf","src":"15527:168:26"},{"nativeSrc":"15704:41:26","nodeType":"YulAssignment","src":"15704:41:26","value":{"arguments":[{"name":"base_ref","nativeSrc":"15716:8:26","nodeType":"YulIdentifier","src":"15716:8:26"},{"name":"rel_offset_of_tail","nativeSrc":"15726:18:26","nodeType":"YulIdentifier","src":"15726:18:26"}],"functionName":{"name":"add","nativeSrc":"15712:3:26","nodeType":"YulIdentifier","src":"15712:3:26"},"nativeSrc":"15712:33:26","nodeType":"YulFunctionCall","src":"15712:33:26"},"variableNames":[{"name":"addr","nativeSrc":"15704:4:26","nodeType":"YulIdentifier","src":"15704:4:26"}]},{"nativeSrc":"15755:28:26","nodeType":"YulAssignment","src":"15755:28:26","value":{"arguments":[{"name":"addr","nativeSrc":"15778:4:26","nodeType":"YulIdentifier","src":"15778:4:26"}],"functionName":{"name":"calldataload","nativeSrc":"15765:12:26","nodeType":"YulIdentifier","src":"15765:12:26"},"nativeSrc":"15765:18:26","nodeType":"YulFunctionCall","src":"15765:18:26"},"variableNames":[{"name":"length","nativeSrc":"15755:6:26","nodeType":"YulIdentifier","src":"15755:6:26"}]},{"body":{"nativeSrc":"15826:83:26","nodeType":"YulBlock","src":"15826:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a","nativeSrc":"15828:77:26","nodeType":"YulIdentifier","src":"15828:77:26"},"nativeSrc":"15828:79:26","nodeType":"YulFunctionCall","src":"15828:79:26"},"nativeSrc":"15828:79:26","nodeType":"YulExpressionStatement","src":"15828:79:26"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"15798:6:26","nodeType":"YulIdentifier","src":"15798:6:26"},{"kind":"number","nativeSrc":"15806:18:26","nodeType":"YulLiteral","src":"15806:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15795:2:26","nodeType":"YulIdentifier","src":"15795:2:26"},"nativeSrc":"15795:30:26","nodeType":"YulFunctionCall","src":"15795:30:26"},"nativeSrc":"15792:117:26","nodeType":"YulIf","src":"15792:117:26"},{"nativeSrc":"15918:21:26","nodeType":"YulAssignment","src":"15918:21:26","value":{"arguments":[{"name":"addr","nativeSrc":"15930:4:26","nodeType":"YulIdentifier","src":"15930:4:26"},{"kind":"number","nativeSrc":"15936:2:26","nodeType":"YulLiteral","src":"15936:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15926:3:26","nodeType":"YulIdentifier","src":"15926:3:26"},"nativeSrc":"15926:13:26","nodeType":"YulFunctionCall","src":"15926:13:26"},"variableNames":[{"name":"addr","nativeSrc":"15918:4:26","nodeType":"YulIdentifier","src":"15918:4:26"}]},{"body":{"nativeSrc":"16001:83:26","nodeType":"YulBlock","src":"16001:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e","nativeSrc":"16003:77:26","nodeType":"YulIdentifier","src":"16003:77:26"},"nativeSrc":"16003:79:26","nodeType":"YulFunctionCall","src":"16003:79:26"},"nativeSrc":"16003:79:26","nodeType":"YulExpressionStatement","src":"16003:79:26"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"15955:4:26","nodeType":"YulIdentifier","src":"15955:4:26"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"15965:12:26","nodeType":"YulIdentifier","src":"15965:12:26"},"nativeSrc":"15965:14:26","nodeType":"YulFunctionCall","src":"15965:14:26"},{"arguments":[{"name":"length","nativeSrc":"15985:6:26","nodeType":"YulIdentifier","src":"15985:6:26"},{"kind":"number","nativeSrc":"15993:4:26","nodeType":"YulLiteral","src":"15993:4:26","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"15981:3:26","nodeType":"YulIdentifier","src":"15981:3:26"},"nativeSrc":"15981:17:26","nodeType":"YulFunctionCall","src":"15981:17:26"}],"functionName":{"name":"sub","nativeSrc":"15961:3:26","nodeType":"YulIdentifier","src":"15961:3:26"},"nativeSrc":"15961:38:26","nodeType":"YulFunctionCall","src":"15961:38:26"}],"functionName":{"name":"sgt","nativeSrc":"15951:3:26","nodeType":"YulIdentifier","src":"15951:3:26"},"nativeSrc":"15951:49:26","nodeType":"YulFunctionCall","src":"15951:49:26"},"nativeSrc":"15948:136:26","nodeType":"YulIf","src":"15948:136:26"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"15367:724:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"15418:8:26","nodeType":"YulTypedName","src":"15418:8:26","type":""},{"name":"ptr_to_tail","nativeSrc":"15428:11:26","nodeType":"YulTypedName","src":"15428:11:26","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"15444:4:26","nodeType":"YulTypedName","src":"15444:4:26","type":""},{"name":"length","nativeSrc":"15450:6:26","nodeType":"YulTypedName","src":"15450:6:26","type":""}],"src":"15367:724:26"},{"body":{"nativeSrc":"16210:34:26","nodeType":"YulBlock","src":"16210:34:26","statements":[{"nativeSrc":"16220:18:26","nodeType":"YulAssignment","src":"16220:18:26","value":{"name":"pos","nativeSrc":"16235:3:26","nodeType":"YulIdentifier","src":"16235:3:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"16220:11:26","nodeType":"YulIdentifier","src":"16220:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16097:147:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16182:3:26","nodeType":"YulTypedName","src":"16182:3:26","type":""},{"name":"length","nativeSrc":"16187:6:26","nodeType":"YulTypedName","src":"16187:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16198:11:26","nodeType":"YulTypedName","src":"16198:11:26","type":""}],"src":"16097:147:26"},{"body":{"nativeSrc":"16356:8:26","nodeType":"YulBlock","src":"16356:8:26","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"16250:114:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"16348:6:26","nodeType":"YulTypedName","src":"16348:6:26","type":""}],"src":"16250:114:26"},{"body":{"nativeSrc":"16533:235:26","nodeType":"YulBlock","src":"16533:235:26","statements":[{"nativeSrc":"16543:90:26","nodeType":"YulAssignment","src":"16543:90:26","value":{"arguments":[{"name":"pos","nativeSrc":"16626:3:26","nodeType":"YulIdentifier","src":"16626:3:26"},{"kind":"number","nativeSrc":"16631:1:26","nodeType":"YulLiteral","src":"16631:1:26","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16550:75:26","nodeType":"YulIdentifier","src":"16550:75:26"},"nativeSrc":"16550:83:26","nodeType":"YulFunctionCall","src":"16550:83:26"},"variableNames":[{"name":"pos","nativeSrc":"16543:3:26","nodeType":"YulIdentifier","src":"16543:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"16731:3:26","nodeType":"YulIdentifier","src":"16731:3:26"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"16642:88:26","nodeType":"YulIdentifier","src":"16642:88:26"},"nativeSrc":"16642:93:26","nodeType":"YulFunctionCall","src":"16642:93:26"},"nativeSrc":"16642:93:26","nodeType":"YulExpressionStatement","src":"16642:93:26"},{"nativeSrc":"16744:18:26","nodeType":"YulAssignment","src":"16744:18:26","value":{"arguments":[{"name":"pos","nativeSrc":"16755:3:26","nodeType":"YulIdentifier","src":"16755:3:26"},{"kind":"number","nativeSrc":"16760:1:26","nodeType":"YulLiteral","src":"16760:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16751:3:26","nodeType":"YulIdentifier","src":"16751:3:26"},"nativeSrc":"16751:11:26","nodeType":"YulFunctionCall","src":"16751:11:26"},"variableNames":[{"name":"end","nativeSrc":"16744:3:26","nodeType":"YulIdentifier","src":"16744:3:26"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16370:398:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16521:3:26","nodeType":"YulTypedName","src":"16521:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16529:3:26","nodeType":"YulTypedName","src":"16529:3:26","type":""}],"src":"16370:398:26"},{"body":{"nativeSrc":"16962:191:26","nodeType":"YulBlock","src":"16962:191:26","statements":[{"nativeSrc":"16973:154:26","nodeType":"YulAssignment","src":"16973:154:26","value":{"arguments":[{"name":"pos","nativeSrc":"17123:3:26","nodeType":"YulIdentifier","src":"17123:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16980:141:26","nodeType":"YulIdentifier","src":"16980:141:26"},"nativeSrc":"16980:147:26","nodeType":"YulFunctionCall","src":"16980:147:26"},"variableNames":[{"name":"pos","nativeSrc":"16973:3:26","nodeType":"YulIdentifier","src":"16973:3:26"}]},{"nativeSrc":"17137:10:26","nodeType":"YulAssignment","src":"17137:10:26","value":{"name":"pos","nativeSrc":"17144:3:26","nodeType":"YulIdentifier","src":"17144:3:26"},"variableNames":[{"name":"end","nativeSrc":"17137:3:26","nodeType":"YulIdentifier","src":"17137:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"16774:379:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16949:3:26","nodeType":"YulTypedName","src":"16949:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16958:3:26","nodeType":"YulTypedName","src":"16958:3:26","type":""}],"src":"16774:379:26"},{"body":{"nativeSrc":"17222:80:26","nodeType":"YulBlock","src":"17222:80:26","statements":[{"nativeSrc":"17232:22:26","nodeType":"YulAssignment","src":"17232:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"17247:6:26","nodeType":"YulIdentifier","src":"17247:6:26"}],"functionName":{"name":"mload","nativeSrc":"17241:5:26","nodeType":"YulIdentifier","src":"17241:5:26"},"nativeSrc":"17241:13:26","nodeType":"YulFunctionCall","src":"17241:13:26"},"variableNames":[{"name":"value","nativeSrc":"17232:5:26","nodeType":"YulIdentifier","src":"17232:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17290:5:26","nodeType":"YulIdentifier","src":"17290:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"17263:26:26","nodeType":"YulIdentifier","src":"17263:26:26"},"nativeSrc":"17263:33:26","nodeType":"YulFunctionCall","src":"17263:33:26"},"nativeSrc":"17263:33:26","nodeType":"YulExpressionStatement","src":"17263:33:26"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"17159:143:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17200:6:26","nodeType":"YulTypedName","src":"17200:6:26","type":""},{"name":"end","nativeSrc":"17208:3:26","nodeType":"YulTypedName","src":"17208:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17216:5:26","nodeType":"YulTypedName","src":"17216:5:26","type":""}],"src":"17159:143:26"},{"body":{"nativeSrc":"17385:274:26","nodeType":"YulBlock","src":"17385:274:26","statements":[{"body":{"nativeSrc":"17431:83:26","nodeType":"YulBlock","src":"17431:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17433:77:26","nodeType":"YulIdentifier","src":"17433:77:26"},"nativeSrc":"17433:79:26","nodeType":"YulFunctionCall","src":"17433:79:26"},"nativeSrc":"17433:79:26","nodeType":"YulExpressionStatement","src":"17433:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17406:7:26","nodeType":"YulIdentifier","src":"17406:7:26"},{"name":"headStart","nativeSrc":"17415:9:26","nodeType":"YulIdentifier","src":"17415:9:26"}],"functionName":{"name":"sub","nativeSrc":"17402:3:26","nodeType":"YulIdentifier","src":"17402:3:26"},"nativeSrc":"17402:23:26","nodeType":"YulFunctionCall","src":"17402:23:26"},{"kind":"number","nativeSrc":"17427:2:26","nodeType":"YulLiteral","src":"17427:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17398:3:26","nodeType":"YulIdentifier","src":"17398:3:26"},"nativeSrc":"17398:32:26","nodeType":"YulFunctionCall","src":"17398:32:26"},"nativeSrc":"17395:119:26","nodeType":"YulIf","src":"17395:119:26"},{"nativeSrc":"17524:128:26","nodeType":"YulBlock","src":"17524:128:26","statements":[{"nativeSrc":"17539:15:26","nodeType":"YulVariableDeclaration","src":"17539:15:26","value":{"kind":"number","nativeSrc":"17553:1:26","nodeType":"YulLiteral","src":"17553:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17543:6:26","nodeType":"YulTypedName","src":"17543:6:26","type":""}]},{"nativeSrc":"17568:74:26","nodeType":"YulAssignment","src":"17568:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17614:9:26","nodeType":"YulIdentifier","src":"17614:9:26"},{"name":"offset","nativeSrc":"17625:6:26","nodeType":"YulIdentifier","src":"17625:6:26"}],"functionName":{"name":"add","nativeSrc":"17610:3:26","nodeType":"YulIdentifier","src":"17610:3:26"},"nativeSrc":"17610:22:26","nodeType":"YulFunctionCall","src":"17610:22:26"},{"name":"dataEnd","nativeSrc":"17634:7:26","nodeType":"YulIdentifier","src":"17634:7:26"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"17578:31:26","nodeType":"YulIdentifier","src":"17578:31:26"},"nativeSrc":"17578:64:26","nodeType":"YulFunctionCall","src":"17578:64:26"},"variableNames":[{"name":"value0","nativeSrc":"17568:6:26","nodeType":"YulIdentifier","src":"17568:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"17308:351:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17355:9:26","nodeType":"YulTypedName","src":"17355:9:26","type":""},{"name":"dataEnd","nativeSrc":"17366:7:26","nodeType":"YulTypedName","src":"17366:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17378:6:26","nodeType":"YulTypedName","src":"17378:6:26","type":""}],"src":"17308:351:26"},{"body":{"nativeSrc":"17771:54:26","nodeType":"YulBlock","src":"17771:54:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"17793:6:26","nodeType":"YulIdentifier","src":"17793:6:26"},{"kind":"number","nativeSrc":"17801:1:26","nodeType":"YulLiteral","src":"17801:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17789:3:26","nodeType":"YulIdentifier","src":"17789:3:26"},"nativeSrc":"17789:14:26","nodeType":"YulFunctionCall","src":"17789:14:26"},{"hexValue":"6f6e6c79206f776e6572","kind":"string","nativeSrc":"17805:12:26","nodeType":"YulLiteral","src":"17805:12:26","type":"","value":"only owner"}],"functionName":{"name":"mstore","nativeSrc":"17782:6:26","nodeType":"YulIdentifier","src":"17782:6:26"},"nativeSrc":"17782:36:26","nodeType":"YulFunctionCall","src":"17782:36:26"},"nativeSrc":"17782:36:26","nodeType":"YulExpressionStatement","src":"17782:36:26"}]},"name":"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","nativeSrc":"17665:160:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17763:6:26","nodeType":"YulTypedName","src":"17763:6:26","type":""}],"src":"17665:160:26"},{"body":{"nativeSrc":"17977:220:26","nodeType":"YulBlock","src":"17977:220:26","statements":[{"nativeSrc":"17987:74:26","nodeType":"YulAssignment","src":"17987:74:26","value":{"arguments":[{"name":"pos","nativeSrc":"18053:3:26","nodeType":"YulIdentifier","src":"18053:3:26"},{"kind":"number","nativeSrc":"18058:2:26","nodeType":"YulLiteral","src":"18058:2:26","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"17994:58:26","nodeType":"YulIdentifier","src":"17994:58:26"},"nativeSrc":"17994:67:26","nodeType":"YulFunctionCall","src":"17994:67:26"},"variableNames":[{"name":"pos","nativeSrc":"17987:3:26","nodeType":"YulIdentifier","src":"17987:3:26"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18159:3:26","nodeType":"YulIdentifier","src":"18159:3:26"}],"functionName":{"name":"store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367","nativeSrc":"18070:88:26","nodeType":"YulIdentifier","src":"18070:88:26"},"nativeSrc":"18070:93:26","nodeType":"YulFunctionCall","src":"18070:93:26"},"nativeSrc":"18070:93:26","nodeType":"YulExpressionStatement","src":"18070:93:26"},{"nativeSrc":"18172:19:26","nodeType":"YulAssignment","src":"18172:19:26","value":{"arguments":[{"name":"pos","nativeSrc":"18183:3:26","nodeType":"YulIdentifier","src":"18183:3:26"},{"kind":"number","nativeSrc":"18188:2:26","nodeType":"YulLiteral","src":"18188:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18179:3:26","nodeType":"YulIdentifier","src":"18179:3:26"},"nativeSrc":"18179:12:26","nodeType":"YulFunctionCall","src":"18179:12:26"},"variableNames":[{"name":"end","nativeSrc":"18172:3:26","nodeType":"YulIdentifier","src":"18172:3:26"}]}]},"name":"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack","nativeSrc":"17831:366:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17965:3:26","nodeType":"YulTypedName","src":"17965:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17973:3:26","nodeType":"YulTypedName","src":"17973:3:26","type":""}],"src":"17831:366:26"},{"body":{"nativeSrc":"18374:248:26","nodeType":"YulBlock","src":"18374:248:26","statements":[{"nativeSrc":"18384:26:26","nodeType":"YulAssignment","src":"18384:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"18396:9:26","nodeType":"YulIdentifier","src":"18396:9:26"},{"kind":"number","nativeSrc":"18407:2:26","nodeType":"YulLiteral","src":"18407:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18392:3:26","nodeType":"YulIdentifier","src":"18392:3:26"},"nativeSrc":"18392:18:26","nodeType":"YulFunctionCall","src":"18392:18:26"},"variableNames":[{"name":"tail","nativeSrc":"18384:4:26","nodeType":"YulIdentifier","src":"18384:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18431:9:26","nodeType":"YulIdentifier","src":"18431:9:26"},{"kind":"number","nativeSrc":"18442:1:26","nodeType":"YulLiteral","src":"18442:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18427:3:26","nodeType":"YulIdentifier","src":"18427:3:26"},"nativeSrc":"18427:17:26","nodeType":"YulFunctionCall","src":"18427:17:26"},{"arguments":[{"name":"tail","nativeSrc":"18450:4:26","nodeType":"YulIdentifier","src":"18450:4:26"},{"name":"headStart","nativeSrc":"18456:9:26","nodeType":"YulIdentifier","src":"18456:9:26"}],"functionName":{"name":"sub","nativeSrc":"18446:3:26","nodeType":"YulIdentifier","src":"18446:3:26"},"nativeSrc":"18446:20:26","nodeType":"YulFunctionCall","src":"18446:20:26"}],"functionName":{"name":"mstore","nativeSrc":"18420:6:26","nodeType":"YulIdentifier","src":"18420:6:26"},"nativeSrc":"18420:47:26","nodeType":"YulFunctionCall","src":"18420:47:26"},"nativeSrc":"18420:47:26","nodeType":"YulExpressionStatement","src":"18420:47:26"},{"nativeSrc":"18476:139:26","nodeType":"YulAssignment","src":"18476:139:26","value":{"arguments":[{"name":"tail","nativeSrc":"18610:4:26","nodeType":"YulIdentifier","src":"18610:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack","nativeSrc":"18484:124:26","nodeType":"YulIdentifier","src":"18484:124:26"},"nativeSrc":"18484:131:26","nodeType":"YulFunctionCall","src":"18484:131:26"},"variableNames":[{"name":"tail","nativeSrc":"18476:4:26","nodeType":"YulIdentifier","src":"18476:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18203:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18354:9:26","nodeType":"YulTypedName","src":"18354:9:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18369:4:26","nodeType":"YulTypedName","src":"18369:4:26","type":""}],"src":"18203:419:26"},{"body":{"nativeSrc":"18656:152:26","nodeType":"YulBlock","src":"18656:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18673:1:26","nodeType":"YulLiteral","src":"18673:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"18676:77:26","nodeType":"YulLiteral","src":"18676:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"18666:6:26","nodeType":"YulIdentifier","src":"18666:6:26"},"nativeSrc":"18666:88:26","nodeType":"YulFunctionCall","src":"18666:88:26"},"nativeSrc":"18666:88:26","nodeType":"YulExpressionStatement","src":"18666:88:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18770:1:26","nodeType":"YulLiteral","src":"18770:1:26","type":"","value":"4"},{"kind":"number","nativeSrc":"18773:4:26","nodeType":"YulLiteral","src":"18773:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"18763:6:26","nodeType":"YulIdentifier","src":"18763:6:26"},"nativeSrc":"18763:15:26","nodeType":"YulFunctionCall","src":"18763:15:26"},"nativeSrc":"18763:15:26","nodeType":"YulExpressionStatement","src":"18763:15:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18794:1:26","nodeType":"YulLiteral","src":"18794:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"18797:4:26","nodeType":"YulLiteral","src":"18797:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"18787:6:26","nodeType":"YulIdentifier","src":"18787:6:26"},"nativeSrc":"18787:15:26","nodeType":"YulFunctionCall","src":"18787:15:26"},"nativeSrc":"18787:15:26","nodeType":"YulExpressionStatement","src":"18787:15:26"}]},"name":"panic_error_0x21","nativeSrc":"18628:180:26","nodeType":"YulFunctionDefinition","src":"18628:180:26"},{"body":{"nativeSrc":"18872:40:26","nodeType":"YulBlock","src":"18872:40:26","statements":[{"nativeSrc":"18883:22:26","nodeType":"YulAssignment","src":"18883:22:26","value":{"arguments":[{"name":"value","nativeSrc":"18899:5:26","nodeType":"YulIdentifier","src":"18899:5:26"}],"functionName":{"name":"mload","nativeSrc":"18893:5:26","nodeType":"YulIdentifier","src":"18893:5:26"},"nativeSrc":"18893:12:26","nodeType":"YulFunctionCall","src":"18893:12:26"},"variableNames":[{"name":"length","nativeSrc":"18883:6:26","nodeType":"YulIdentifier","src":"18883:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"18814:98:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18855:5:26","nodeType":"YulTypedName","src":"18855:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"18865:6:26","nodeType":"YulTypedName","src":"18865:6:26","type":""}],"src":"18814:98:26"},{"body":{"nativeSrc":"19026:278:26","nodeType":"YulBlock","src":"19026:278:26","statements":[{"nativeSrc":"19036:52:26","nodeType":"YulVariableDeclaration","src":"19036:52:26","value":{"arguments":[{"name":"value","nativeSrc":"19082:5:26","nodeType":"YulIdentifier","src":"19082:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"19050:31:26","nodeType":"YulIdentifier","src":"19050:31:26"},"nativeSrc":"19050:38:26","nodeType":"YulFunctionCall","src":"19050:38:26"},"variables":[{"name":"length","nativeSrc":"19040:6:26","nodeType":"YulTypedName","src":"19040:6:26","type":""}]},{"nativeSrc":"19097:95:26","nodeType":"YulAssignment","src":"19097:95:26","value":{"arguments":[{"name":"pos","nativeSrc":"19180:3:26","nodeType":"YulIdentifier","src":"19180:3:26"},{"name":"length","nativeSrc":"19185:6:26","nodeType":"YulIdentifier","src":"19185:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19104:75:26","nodeType":"YulIdentifier","src":"19104:75:26"},"nativeSrc":"19104:88:26","nodeType":"YulFunctionCall","src":"19104:88:26"},"variableNames":[{"name":"pos","nativeSrc":"19097:3:26","nodeType":"YulIdentifier","src":"19097:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19240:5:26","nodeType":"YulIdentifier","src":"19240:5:26"},{"kind":"number","nativeSrc":"19247:4:26","nodeType":"YulLiteral","src":"19247:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19236:3:26","nodeType":"YulIdentifier","src":"19236:3:26"},"nativeSrc":"19236:16:26","nodeType":"YulFunctionCall","src":"19236:16:26"},{"name":"pos","nativeSrc":"19254:3:26","nodeType":"YulIdentifier","src":"19254:3:26"},{"name":"length","nativeSrc":"19259:6:26","nodeType":"YulIdentifier","src":"19259:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"19201:34:26","nodeType":"YulIdentifier","src":"19201:34:26"},"nativeSrc":"19201:65:26","nodeType":"YulFunctionCall","src":"19201:65:26"},"nativeSrc":"19201:65:26","nodeType":"YulExpressionStatement","src":"19201:65:26"},{"nativeSrc":"19275:23:26","nodeType":"YulAssignment","src":"19275:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"19286:3:26","nodeType":"YulIdentifier","src":"19286:3:26"},{"name":"length","nativeSrc":"19291:6:26","nodeType":"YulIdentifier","src":"19291:6:26"}],"functionName":{"name":"add","nativeSrc":"19282:3:26","nodeType":"YulIdentifier","src":"19282:3:26"},"nativeSrc":"19282:16:26","nodeType":"YulFunctionCall","src":"19282:16:26"},"variableNames":[{"name":"end","nativeSrc":"19275:3:26","nodeType":"YulIdentifier","src":"19275:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18918:386:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19007:5:26","nodeType":"YulTypedName","src":"19007:5:26","type":""},{"name":"pos","nativeSrc":"19014:3:26","nodeType":"YulTypedName","src":"19014:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19022:3:26","nodeType":"YulTypedName","src":"19022:3:26","type":""}],"src":"18918:386:26"},{"body":{"nativeSrc":"19444:137:26","nodeType":"YulBlock","src":"19444:137:26","statements":[{"nativeSrc":"19455:100:26","nodeType":"YulAssignment","src":"19455:100:26","value":{"arguments":[{"name":"value0","nativeSrc":"19542:6:26","nodeType":"YulIdentifier","src":"19542:6:26"},{"name":"pos","nativeSrc":"19551:3:26","nodeType":"YulIdentifier","src":"19551:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"19462:79:26","nodeType":"YulIdentifier","src":"19462:79:26"},"nativeSrc":"19462:93:26","nodeType":"YulFunctionCall","src":"19462:93:26"},"variableNames":[{"name":"pos","nativeSrc":"19455:3:26","nodeType":"YulIdentifier","src":"19455:3:26"}]},{"nativeSrc":"19565:10:26","nodeType":"YulAssignment","src":"19565:10:26","value":{"name":"pos","nativeSrc":"19572:3:26","nodeType":"YulIdentifier","src":"19572:3:26"},"variableNames":[{"name":"end","nativeSrc":"19565:3:26","nodeType":"YulIdentifier","src":"19565:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"19310:271:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19423:3:26","nodeType":"YulTypedName","src":"19423:3:26","type":""},{"name":"value0","nativeSrc":"19429:6:26","nodeType":"YulTypedName","src":"19429:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19440:3:26","nodeType":"YulTypedName","src":"19440:3:26","type":""}],"src":"19310:271:26"},{"body":{"nativeSrc":"19630:43:26","nodeType":"YulBlock","src":"19630:43:26","statements":[{"nativeSrc":"19640:27:26","nodeType":"YulAssignment","src":"19640:27:26","value":{"arguments":[{"name":"value","nativeSrc":"19655:5:26","nodeType":"YulIdentifier","src":"19655:5:26"},{"kind":"number","nativeSrc":"19662:4:26","nodeType":"YulLiteral","src":"19662:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"19651:3:26","nodeType":"YulIdentifier","src":"19651:3:26"},"nativeSrc":"19651:16:26","nodeType":"YulFunctionCall","src":"19651:16:26"},"variableNames":[{"name":"cleaned","nativeSrc":"19640:7:26","nodeType":"YulIdentifier","src":"19640:7:26"}]}]},"name":"cleanup_t_uint8","nativeSrc":"19587:86:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19612:5:26","nodeType":"YulTypedName","src":"19612:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"19622:7:26","nodeType":"YulTypedName","src":"19622:7:26","type":""}],"src":"19587:86:26"},{"body":{"nativeSrc":"19740:51:26","nodeType":"YulBlock","src":"19740:51:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19757:3:26","nodeType":"YulIdentifier","src":"19757:3:26"},{"arguments":[{"name":"value","nativeSrc":"19778:5:26","nodeType":"YulIdentifier","src":"19778:5:26"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"19762:15:26","nodeType":"YulIdentifier","src":"19762:15:26"},"nativeSrc":"19762:22:26","nodeType":"YulFunctionCall","src":"19762:22:26"}],"functionName":{"name":"mstore","nativeSrc":"19750:6:26","nodeType":"YulIdentifier","src":"19750:6:26"},"nativeSrc":"19750:35:26","nodeType":"YulFunctionCall","src":"19750:35:26"},"nativeSrc":"19750:35:26","nodeType":"YulExpressionStatement","src":"19750:35:26"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"19679:112:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19728:5:26","nodeType":"YulTypedName","src":"19728:5:26","type":""},{"name":"pos","nativeSrc":"19735:3:26","nodeType":"YulTypedName","src":"19735:3:26","type":""}],"src":"19679:112:26"},{"body":{"nativeSrc":"19975:367:26","nodeType":"YulBlock","src":"19975:367:26","statements":[{"nativeSrc":"19985:27:26","nodeType":"YulAssignment","src":"19985:27:26","value":{"arguments":[{"name":"headStart","nativeSrc":"19997:9:26","nodeType":"YulIdentifier","src":"19997:9:26"},{"kind":"number","nativeSrc":"20008:3:26","nodeType":"YulLiteral","src":"20008:3:26","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"19993:3:26","nodeType":"YulIdentifier","src":"19993:3:26"},"nativeSrc":"19993:19:26","nodeType":"YulFunctionCall","src":"19993:19:26"},"variableNames":[{"name":"tail","nativeSrc":"19985:4:26","nodeType":"YulIdentifier","src":"19985:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20066:6:26","nodeType":"YulIdentifier","src":"20066:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20079:9:26","nodeType":"YulIdentifier","src":"20079:9:26"},{"kind":"number","nativeSrc":"20090:1:26","nodeType":"YulLiteral","src":"20090:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20075:3:26","nodeType":"YulIdentifier","src":"20075:3:26"},"nativeSrc":"20075:17:26","nodeType":"YulFunctionCall","src":"20075:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20022:43:26","nodeType":"YulIdentifier","src":"20022:43:26"},"nativeSrc":"20022:71:26","nodeType":"YulFunctionCall","src":"20022:71:26"},"nativeSrc":"20022:71:26","nodeType":"YulExpressionStatement","src":"20022:71:26"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20143:6:26","nodeType":"YulIdentifier","src":"20143:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20156:9:26","nodeType":"YulIdentifier","src":"20156:9:26"},{"kind":"number","nativeSrc":"20167:2:26","nodeType":"YulLiteral","src":"20167:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20152:3:26","nodeType":"YulIdentifier","src":"20152:3:26"},"nativeSrc":"20152:18:26","nodeType":"YulFunctionCall","src":"20152:18:26"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"20103:39:26","nodeType":"YulIdentifier","src":"20103:39:26"},"nativeSrc":"20103:68:26","nodeType":"YulFunctionCall","src":"20103:68:26"},"nativeSrc":"20103:68:26","nodeType":"YulExpressionStatement","src":"20103:68:26"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"20225:6:26","nodeType":"YulIdentifier","src":"20225:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20238:9:26","nodeType":"YulIdentifier","src":"20238:9:26"},{"kind":"number","nativeSrc":"20249:2:26","nodeType":"YulLiteral","src":"20249:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20234:3:26","nodeType":"YulIdentifier","src":"20234:3:26"},"nativeSrc":"20234:18:26","nodeType":"YulFunctionCall","src":"20234:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20181:43:26","nodeType":"YulIdentifier","src":"20181:43:26"},"nativeSrc":"20181:72:26","nodeType":"YulFunctionCall","src":"20181:72:26"},"nativeSrc":"20181:72:26","nodeType":"YulExpressionStatement","src":"20181:72:26"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"20307:6:26","nodeType":"YulIdentifier","src":"20307:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"20320:9:26","nodeType":"YulIdentifier","src":"20320:9:26"},{"kind":"number","nativeSrc":"20331:2:26","nodeType":"YulLiteral","src":"20331:2:26","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"20316:3:26","nodeType":"YulIdentifier","src":"20316:3:26"},"nativeSrc":"20316:18:26","nodeType":"YulFunctionCall","src":"20316:18:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"20263:43:26","nodeType":"YulIdentifier","src":"20263:43:26"},"nativeSrc":"20263:72:26","nodeType":"YulFunctionCall","src":"20263:72:26"},"nativeSrc":"20263:72:26","nodeType":"YulExpressionStatement","src":"20263:72:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"19797:545:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19923:9:26","nodeType":"YulTypedName","src":"19923:9:26","type":""},{"name":"value3","nativeSrc":"19935:6:26","nodeType":"YulTypedName","src":"19935:6:26","type":""},{"name":"value2","nativeSrc":"19943:6:26","nodeType":"YulTypedName","src":"19943:6:26","type":""},{"name":"value1","nativeSrc":"19951:6:26","nodeType":"YulTypedName","src":"19951:6:26","type":""},{"name":"value0","nativeSrc":"19959:6:26","nodeType":"YulTypedName","src":"19959:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19970:4:26","nodeType":"YulTypedName","src":"19970:4:26","type":""}],"src":"19797:545:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct PackedUserOperation\n    function abi_decode_t_struct$_PackedUserOperation_$4173_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 288) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$4173_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_PackedUserOperation_$4173_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$4028_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$4028_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint192(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint192(value) -> converted {\n        converted := cleanup_t_uint192(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint192_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint192(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint192__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint192_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50(memPtr) {\n\n        mstore(add(memPtr, 0), \"account: not from EntryPoint\")\n\n    }\n\n    function abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f684c2c0c9ec797849b62669189fe025e9077c00ba7812987ce38c0071ad7a50_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() {\n        revert(0, 0)\n    }\n\n    function revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() {\n        revert(0, 0)\n    }\n\n    function revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() {\n        revert(0, 0)\n    }\n\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, sub(sub(calldatasize(), base_ref), sub(0x20, 1)))) { revert_error_356d538aaf70fba12156cc466564b792649f8f3befb07b071c91142253e175ad() }\n        addr := add(base_ref, rel_offset_of_tail)\n\n        length := calldataload(addr)\n        if gt(length, 0xffffffffffffffff) { revert_error_1e55d03107e9c4f1b5e21c76a16fba166a461117ab153bcce65e6a4ea8e5fc8a() }\n        addr := add(addr, 32)\n        if sgt(addr, sub(calldatasize(), mul(length, 0x01))) { revert_error_977805620ff29572292dee35f70b0f3f3f73d3fdd0e9f4d7a901c2e43ab18a2e() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367(memPtr) {\n\n        mstore(add(memPtr, 0), \"only owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"666":[{"length":32,"start":2366},{"length":32,"start":2451},{"length":32,"start":2894}],"4193":[{"length":32,"start":1157},{"length":32,"start":3188}],"4195":[{"length":32,"start":761}]},"linkReferences":{},"object":"6080604052600436106100ab5760003560e01c8063ad3cb1cc11610064578063ad3cb1cc14610199578063b0d691fe146101c4578063c399ec88146101ef578063c4d66de81461021a578063c71daccb14610243578063d087d2881461026e576100b2565b806319822f7c146100b75780633a7d280c146100f45780634a58db191461011d5780634f1ef2861461012757806352d1902d146101435780638da5cb5b1461016e576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d9919061148f565b610299565b6040516100eb919061150d565b60405180910390f35b34801561010057600080fd5b5061011b6004803603810190610116919061166e565b6102cc565b005b61012561035d565b005b610141600480360381019061013c91906117b6565b6103d2565b005b34801561014f57600080fd5b506101586103f1565b6040516101659190611821565b60405180910390f35b34801561017a57600080fd5b50610183610424565b604051610190919061184b565b60405180910390f35b3480156101a557600080fd5b506101ae610448565b6040516101bb91906118e5565b60405180910390f35b3480156101d057600080fd5b506101d9610481565b6040516101e69190611966565b60405180910390f35b3480156101fb57600080fd5b506102046104a9565b604051610211919061150d565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611981565b610531565b005b34801561024f57600080fd5b506102586106c0565b604051610265919061184b565b60405180910390f35b34801561027a57600080fd5b506102836106c8565b604051610290919061150d565b60405180910390f35b60006102a3610753565b6102ad84846107ca565b90506102bc846020013561089d565b6102c5826108a0565b9392505050565b6000816040516020016102df91906118e5565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000008114610359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610350906119fa565b60405180910390fd5b5050565b610365610481565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161039e919061184b565b6000604051808303818588803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b5050505050565b6103da61093c565b6103e382610a22565b6103ed8282610a2d565b5050565b60006103fb610b4c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006104b3610481565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104eb919061184b565b602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611a2f565b905090565b600061053b610bd3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156105895750825b9050600060018367ffffffffffffffff161480156105be575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156105cc575080155b15610603576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106535760018560000160086101000a81548160ff0219169083151502179055505b61065c86610bfb565b83156106b85760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516106af9190611aab565b60405180910390a15b505050505050565b600030905090565b60006106d2610481565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b815260040161070d929190611b25565b602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190611a2f565b905090565b61075b610481565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90611b9a565b60405180910390fd5b565b6000806107d683610cd8565b905061083581858061010001906107ed9190611bc9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d0e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610891576001915050610897565b60009150505b92915050565b50565b600081146109395760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516108f090611c5d565b600060405180830381858888f193505050503d806000811461092e576040519150601f19603f3d011682016040523d82523d6000602084013e610933565b606091505b50509050505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806109e957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109d0610d3a565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610a20576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a2a610d91565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a9557506040513d601f19601f82011682018060405250810190610a929190611c87565b60015b610ad657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610acd919061184b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610b3d57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610b349190611821565b60405180910390fd5b610b478383610e57565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f1b5fc86b82922371dc8e7cb464044750968531a041b9ea4b8ca5bfac41f8c26960405160405180910390a350565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610d1e8686610eca565b925092509250610d2e8282610f26565b82935050505092915050565b6000610d687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e1657503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d00565b60405180910390fd5b565b610e6082611094565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ebd57610eb78282611161565b50610ec6565b610ec56111e5565b5b5050565b60008060006041845103610f0f5760008060006020870151925060408701519150606087015160001a9050610f0188828585611222565b955095509550505050610f1f565b60006002855160001b9250925092505b9250925092565b60006003811115610f3a57610f39611d20565b5b826003811115610f4d57610f4c611d20565b5b03156110865760016003811115610f6757610f66611d20565b5b826003811115610f7a57610f79611d20565b5b03610fb1576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610fc557610fc4611d20565b5b826003811115610fd857610fd7611d20565b5b0361101d578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611014919061150d565b60405180910390fd5b6003808111156110305761102f611d20565b5b82600381111561104357611042611d20565b5b0361108557806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161107c9190611821565b60405180910390fd5b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036110f057806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016110e7919061184b565b60405180910390fd5b8061111d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161118b9190611d8b565b600060405180830381855af49150503d80600081146111c6576040519150601f19603f3d011682016040523d82523d6000602084013e6111cb565b606091505b50915091506111db858383611316565b9250505092915050565b6000341115611220576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561126257600060038592509250925061130c565b6000600188888888604051600081526020016040526040516112879493929190611dbe565b6020604051602081039080840390855afa1580156112a9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112fd57600060016000801b9350935093505061130c565b8060008060001b935093509350505b9450945094915050565b60608261132b57611326826113a5565b61139d565b60008251148015611353575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561139557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161138c919061184b565b60405180910390fd5b81905061139e565b5b9392505050565b6000815111156113b85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b6000610120828403121561141a576114196113fe565b5b81905092915050565b6000819050919050565b61143681611423565b811461144157600080fd5b50565b6000813590506114538161142d565b92915050565b6000819050919050565b61146c81611459565b811461147757600080fd5b50565b60008135905061148981611463565b92915050565b6000806000606084860312156114a8576114a76113f4565b5b600084013567ffffffffffffffff8111156114c6576114c56113f9565b5b6114d286828701611403565b93505060206114e386828701611444565b92505060406114f48682870161147a565b9150509250925092565b61150781611459565b82525050565b600060208201905061152260008301846114fe565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157b82611532565b810181811067ffffffffffffffff8211171561159a57611599611543565b5b80604052505050565b60006115ad6113ea565b90506115b98282611572565b919050565b600067ffffffffffffffff8211156115d9576115d8611543565b5b6115e282611532565b9050602081019050919050565b82818337600083830152505050565b600061161161160c846115be565b6115a3565b90508281526020810184848401111561162d5761162c61152d565b5b6116388482856115ef565b509392505050565b600082601f83011261165557611654611528565b5b81356116658482602086016115fe565b91505092915050565b600060208284031215611684576116836113f4565b5b600082013567ffffffffffffffff8111156116a2576116a16113f9565b5b6116ae84828501611640565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116e2826116b7565b9050919050565b6116f2816116d7565b81146116fd57600080fd5b50565b60008135905061170f816116e9565b92915050565b600067ffffffffffffffff8211156117305761172f611543565b5b61173982611532565b9050602081019050919050565b600061175961175484611715565b6115a3565b9050828152602081018484840111156117755761177461152d565b5b6117808482856115ef565b509392505050565b600082601f83011261179d5761179c611528565b5b81356117ad848260208601611746565b91505092915050565b600080604083850312156117cd576117cc6113f4565b5b60006117db85828601611700565b925050602083013567ffffffffffffffff8111156117fc576117fb6113f9565b5b61180885828601611788565b9150509250929050565b61181b81611423565b82525050565b60006020820190506118366000830184611812565b92915050565b611845816116d7565b82525050565b6000602082019050611860600083018461183c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118a0578082015181840152602081019050611885565b60008484015250505050565b60006118b782611866565b6118c18185611871565b93506118d1818560208601611882565b6118da81611532565b840191505092915050565b600060208201905081810360008301526118ff81846118ac565b905092915050565b6000819050919050565b600061192c611927611922846116b7565b611907565b6116b7565b9050919050565b600061193e82611911565b9050919050565b600061195082611933565b9050919050565b61196081611945565b82525050565b600060208201905061197b6000830184611957565b92915050565b600060208284031215611997576119966113f4565b5b60006119a584828501611700565b91505092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006119e4601583611871565b91506119ef826119ae565b602082019050919050565b60006020820190508181036000830152611a13816119d7565b9050919050565b600081519050611a2981611463565b92915050565b600060208284031215611a4557611a446113f4565b5b6000611a5384828501611a1a565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611a95611a90611a8b84611a5c565b611907565b611a66565b9050919050565b611aa581611a7a565b82525050565b6000602082019050611ac06000830184611a9c565b92915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0f611b0a611b0584611ac6565b611907565b611ad0565b9050919050565b611b1f81611af4565b82525050565b6000604082019050611b3a600083018561183c565b611b476020830184611b16565b9392505050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000611b84601c83611871565b9150611b8f82611b4e565b602082019050919050565b60006020820190508181036000830152611bb381611b77565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611be657611be5611bba565b5b80840192508235915067ffffffffffffffff821115611c0857611c07611bbf565b5b602083019250600182023603831315611c2457611c23611bc4565b5b509250929050565b600081905092915050565b50565b6000611c47600083611c2c565b9150611c5282611c37565b600082019050919050565b6000611c6882611c3a565b9150819050919050565b600081519050611c818161142d565b92915050565b600060208284031215611c9d57611c9c6113f4565b5b6000611cab84828501611c72565b91505092915050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000611cea600a83611871565b9150611cf582611cb4565b602082019050919050565b60006020820190508181036000830152611d1981611cdd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b6000611d6582611d4f565b611d6f8185611c2c565b9350611d7f818560208601611882565b80840191505092915050565b6000611d978284611d5a565b915081905092915050565b600060ff82169050919050565b611db881611da2565b82525050565b6000608082019050611dd36000830187611812565b611de06020830186611daf565b611ded6040830185611812565b611dfa6060830184611812565b9594505050505056fea264697066735822122009632364e0d500d05a2d6f3b504352e5cd8030e89619232e5f2a07f80daed44664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x26E JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3A7D280C EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x2A3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x2AD DUP5 DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP PUSH2 0x2BC DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2C5 DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x365 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3DA PUSH2 0x93C JUMP JUMPDEST PUSH2 0x3E3 DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP3 PUSH2 0xA2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB PUSH2 0xB4C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B PUSH2 0xBD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x589 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5BE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x653 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65C DUP7 PUSH2 0xBFB JUMP JUMPDEST DUP4 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D2 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP3 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D6 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x835 DUP2 DUP6 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xD0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x891 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x939 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x933 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9E9 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9D0 PUSH2 0xD3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xD91 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA95 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAD6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0xB3D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB47 DUP4 DUP4 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B5FC86B82922371DC8E7CB464044750968531A041B9EA4B8CA5BFAC41F8C269 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD1E DUP7 DUP7 PUSH2 0xECA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD2E DUP3 DUP3 PUSH2 0xF26 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE16 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE60 DUP3 PUSH2 0x1094 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEB7 DUP3 DUP3 PUSH2 0x1161 JUMP JUMPDEST POP PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xF01 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1222 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF4D JUMPI PUSH2 0xF4C PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1086 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF66 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH2 0xFC4 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFD8 JUMPI PUSH2 0xFD7 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x101D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1085 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107C SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x10F0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x111D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11DB DUP6 DUP4 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x130C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1287 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FD JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x130C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x132B JUMPI PUSH2 0x1326 DUP3 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x139D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1353 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1395 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x139E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13B8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1453 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146C DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A7 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1444 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F4 DUP7 DUP3 DUP8 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x1532 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH2 0x15B9 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x15E2 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 PUSH2 0x160C DUP5 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1638 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1665 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170F DUP2 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x1739 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 PUSH2 0x1754 DUP5 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1780 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP6 DUP3 DUP7 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1788 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1836 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x183C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x18C1 DUP2 DUP6 PUSH2 0x1871 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FF DUP2 DUP5 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192C PUSH2 0x1927 PUSH2 0x1922 DUP5 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP3 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1950 DUP3 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1960 DUP2 PUSH2 0x1945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E4 PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A13 DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A95 PUSH2 0x1A90 PUSH2 0x1A8B DUP5 PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA5 DUP2 PUSH2 0x1A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0F PUSH2 0x1B0A PUSH2 0x1B05 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x1B47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B84 PUSH1 0x1C DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB3 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1BE6 JUMPI PUSH2 0x1BE5 PUSH2 0x1BBA JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1C24 JUMPI PUSH2 0x1C23 PUSH2 0x1BC4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x0 DUP4 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C81 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CAB DUP5 DUP3 DUP6 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEA PUSH1 0xA DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF5 DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D19 DUP2 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 DUP3 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1D6F DUP2 DUP6 PUSH2 0x1C2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP3 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB8 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DD3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DE0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1DED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DFA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH4 0x2364E0D5 STOP 0xD0 GAS 0x2D PUSH16 0x3B504352E5CD8030E89619232E5F2A07 0xF8 0xD 0xAE 0xD4 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1066:5131:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1139:385:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2031:174:24;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5597:109;;;:::i;:::-;;3892:214:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3439:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1148:20:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1708:58:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1441:108:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5401:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4057:101;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2211:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;771:121:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1139:385;1314:22;1348:24;:22;:24::i;:::-;1399:38;1418:6;1426:10;1399:18;:38::i;:::-;1382:55;;1447:28;1462:6;:12;;;1447:14;:28::i;:::-;1485:32;1497:19;1485:11;:32::i;:::-;1139:385;;;;;:::o;2031:174:24:-;2089:15;2128:5;2117:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;2107:28;;;;;;2089:46;;2164:8;2153:7;:19;2145:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:126;2031:174;:::o;5597:109::-;5644:12;:10;:12::i;:::-;:22;;;5674:9;5693:4;5644:55;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5597:109::o;3892:214:6:-;2542:13;:11;:13::i;:::-;4007:36:::1;4025:17;4007;:36::i;:::-;4053:46;4075:17;4094:4;4053:21;:46::i;:::-;3892:214:::0;;:::o;3439:134::-;3508:7;2813:20;:18;:20::i;:::-;1327:66:2::1;3534:32:6;;3527:39;;3439:134:::0;:::o;1148:20:24:-;;;;;;;;;;;;:::o;1708:58:6:-;;;;;;;;;;;;;;;;;;;:::o;1441:108:24:-;1501:11;1531;1524:18;;1441:108;:::o;5401:113::-;5444:7;5470:12;:10;:12::i;:::-;:22;;;5501:4;5470:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5463:44;;5401:113;:::o;4057:101::-;4158:30:5;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;4131:20:24::1;4143:7;4131:11;:20::i;:::-;5070:14:5::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;4057:101:24;:::o;2211:91::-;2256:7;2290:4;2275:20;;2211:91;:::o;771:121:15:-;820:7;846:12;:10;:12::i;:::-;:21;;;876:4;883:1;846:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;839:46;;771:121;:::o;1605:183::-;1714:12;:10;:12::i;:::-;1692:35;;:10;:35;;;1671:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;1605:183::o;4633:390:24:-;4775:22;4809:12;4824:51;4864:10;4824:39;:51::i;:::-;4809:66;;4898:37;4912:4;4918:6;:16;;;;;;;;:::i;:::-;4898:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:37::i;:::-;4889:46;;:5;;;;;;;;;;:46;;;4885:92;;305:1:16;4949:28:24;;;;;4885:92;465:1:16;4987:29:24;;;4633:390;;;;;:::o;3713:68:15:-;;:::o;4356:382::-;4460:1;4437:19;:24;4433:299;;4478:12;4504:10;4496:24;;4545:19;4587:17;4496:126;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4477:145;;;4463:269;4433:299;4356:382;:::o;4333:312:6:-;4422:6;4405:23;;4413:4;4405:23;;;:120;;;;4519:6;4483:42;;:32;:30;:32::i;:::-;:42;;;;4405:120;4388:251;;;4599:29;;;;;;;;;;;;;;4388:251;4333:312::o;6046:149:24:-;6176:12;:10;:12::i;:::-;6046:149;:::o;5786:538:6:-;5903:17;5885:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5881:437;;6289:17;6247:60;;;;;;;;;;;:::i;:::-;;;;;;;;5881:437;1327:66:2;5987:32:6;;5979:4;:40;5975:120;;6075:4;6046:34;;;;;;;;;;;:::i;:::-;;;;;;;;5975:120;6108:54;6138:17;6157:4;6108:29;:54::i;:::-;5938:235;5786:538;;:::o;4762:213::-;4845:6;4828:23;;4836:4;4828:23;;;4824:145;;4929:29;;;;;;;;;;;;;;4824:145;4762:213::o;8737:170:5:-;8795:30;8870:21;8860:31;;8737:170;:::o;4164:133:24:-;4237:7;4229:5;;:15;;;;;;;;;;;;;;;;;;4284:5;;;;;;;;;;4259:31;;4271:11;4259:31;;;;;;;;;;;;4164:133;:::o;1222:460:12:-;1298:14;1403:34;1397:4;1390:48;1505:11;1499:4;1492:25;1597:4;1591;1581:21;1571:31;;1222:460;;;:::o;3702:255:11:-;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;3941:9;3934:16;;;;;3702:255;;;;:::o;1957:138:2:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;1758:267:24:-;1946:5;;;;;;;;;;1932:19;;:10;:19;;;:50;;;;1977:4;1955:27;;:10;:27;;;1932:50;1911:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;1758:267::o;2779:335:2:-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;2129:766:11:-;2210:7;2219:12;2233:7;2276:2;2256:9;:16;:22;2252:637;;2294:9;2317;2340:7;2592:4;2581:9;2577:20;2571:27;2566:32;;2641:4;2630:9;2626:20;2620:27;2615:32;;2698:4;2687:9;2683:20;2677:27;2674:1;2669:36;2664:41;;2739:25;2750:4;2756:1;2759;2762;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;2811:1;2815:35;2860:9;:16;2852:25;;2795:83;;;;;;2129:766;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;1684:190:9:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:2:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:7:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:2:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;5140:1530:11:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;4625:582:7:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:26;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;491:244;576:5;617:3;608:6;603:3;599:16;595:26;592:113;;;624:79;;:::i;:::-;592:113;723:6;714:15;;491:244;;;;:::o;741:77::-;778:7;807:5;796:16;;741:77;;;:::o;824:122::-;897:24;915:5;897:24;:::i;:::-;890:5;887:35;877:63;;936:1;933;926:12;877:63;824:122;:::o;952:139::-;998:5;1036:6;1023:20;1014:29;;1052:33;1079:5;1052:33;:::i;:::-;952:139;;;;:::o;1097:77::-;1134:7;1163:5;1152:16;;1097:77;;;:::o;1180:122::-;1253:24;1271:5;1253:24;:::i;:::-;1246:5;1243:35;1233:63;;1292:1;1289;1282:12;1233:63;1180:122;:::o;1308:139::-;1354:5;1392:6;1379:20;1370:29;;1408:33;1435:5;1408:33;:::i;:::-;1308:139;;;;:::o;1453:857::-;1569:6;1577;1585;1634:2;1622:9;1613:7;1609:23;1605:32;1602:119;;;1640:79;;:::i;:::-;1602:119;1788:1;1777:9;1773:17;1760:31;1818:18;1810:6;1807:30;1804:117;;;1840:79;;:::i;:::-;1804:117;1945:92;2029:7;2020:6;2009:9;2005:22;1945:92;:::i;:::-;1935:102;;1731:316;2086:2;2112:53;2157:7;2148:6;2137:9;2133:22;2112:53;:::i;:::-;2102:63;;2057:118;2214:2;2240:53;2285:7;2276:6;2265:9;2261:22;2240:53;:::i;:::-;2230:63;;2185:118;1453:857;;;;;:::o;2316:118::-;2403:24;2421:5;2403:24;:::i;:::-;2398:3;2391:37;2316:118;;:::o;2440:222::-;2533:4;2571:2;2560:9;2556:18;2548:26;;2584:71;2652:1;2641:9;2637:17;2628:6;2584:71;:::i;:::-;2440:222;;;;:::o;2668:117::-;2777:1;2774;2767:12;2791:117;2900:1;2897;2890:12;2914:102;2955:6;3006:2;3002:7;2997:2;2990:5;2986:14;2982:28;2972:38;;2914:102;;;:::o;3022:180::-;3070:77;3067:1;3060:88;3167:4;3164:1;3157:15;3191:4;3188:1;3181:15;3208:281;3291:27;3313:4;3291:27;:::i;:::-;3283:6;3279:40;3421:6;3409:10;3406:22;3385:18;3373:10;3370:34;3367:62;3364:88;;;3432:18;;:::i;:::-;3364:88;3472:10;3468:2;3461:22;3251:238;3208:281;;:::o;3495:129::-;3529:6;3556:20;;:::i;:::-;3546:30;;3585:33;3613:4;3605:6;3585:33;:::i;:::-;3495:129;;;:::o;3630:308::-;3692:4;3782:18;3774:6;3771:30;3768:56;;;3804:18;;:::i;:::-;3768:56;3842:29;3864:6;3842:29;:::i;:::-;3834:37;;3926:4;3920;3916:15;3908:23;;3630:308;;;:::o;3944:146::-;4041:6;4036:3;4031;4018:30;4082:1;4073:6;4068:3;4064:16;4057:27;3944:146;;;:::o;4096:425::-;4174:5;4199:66;4215:49;4257:6;4215:49;:::i;:::-;4199:66;:::i;:::-;4190:75;;4288:6;4281:5;4274:21;4326:4;4319:5;4315:16;4364:3;4355:6;4350:3;4346:16;4343:25;4340:112;;;4371:79;;:::i;:::-;4340:112;4461:54;4508:6;4503:3;4498;4461:54;:::i;:::-;4180:341;4096:425;;;;;:::o;4541:340::-;4597:5;4646:3;4639:4;4631:6;4627:17;4623:27;4613:122;;4654:79;;:::i;:::-;4613:122;4771:6;4758:20;4796:79;4871:3;4863:6;4856:4;4848:6;4844:17;4796:79;:::i;:::-;4787:88;;4603:278;4541:340;;;;:::o;4887:509::-;4956:6;5005:2;4993:9;4984:7;4980:23;4976:32;4973:119;;;5011:79;;:::i;:::-;4973:119;5159:1;5148:9;5144:17;5131:31;5189:18;5181:6;5178:30;5175:117;;;5211:79;;:::i;:::-;5175:117;5316:63;5371:7;5362:6;5351:9;5347:22;5316:63;:::i;:::-;5306:73;;5102:287;4887:509;;;;:::o;5402:126::-;5439:7;5479:42;5472:5;5468:54;5457:65;;5402:126;;;:::o;5534:96::-;5571:7;5600:24;5618:5;5600:24;:::i;:::-;5589:35;;5534:96;;;:::o;5636:122::-;5709:24;5727:5;5709:24;:::i;:::-;5702:5;5699:35;5689:63;;5748:1;5745;5738:12;5689:63;5636:122;:::o;5764:139::-;5810:5;5848:6;5835:20;5826:29;;5864:33;5891:5;5864:33;:::i;:::-;5764:139;;;;:::o;5909:307::-;5970:4;6060:18;6052:6;6049:30;6046:56;;;6082:18;;:::i;:::-;6046:56;6120:29;6142:6;6120:29;:::i;:::-;6112:37;;6204:4;6198;6194:15;6186:23;;5909:307;;;:::o;6222:423::-;6299:5;6324:65;6340:48;6381:6;6340:48;:::i;:::-;6324:65;:::i;:::-;6315:74;;6412:6;6405:5;6398:21;6450:4;6443:5;6439:16;6488:3;6479:6;6474:3;6470:16;6467:25;6464:112;;;6495:79;;:::i;:::-;6464:112;6585:54;6632:6;6627:3;6622;6585:54;:::i;:::-;6305:340;6222:423;;;;;:::o;6664:338::-;6719:5;6768:3;6761:4;6753:6;6749:17;6745:27;6735:122;;6776:79;;:::i;:::-;6735:122;6893:6;6880:20;6918:78;6992:3;6984:6;6977:4;6969:6;6965:17;6918:78;:::i;:::-;6909:87;;6725:277;6664:338;;;;:::o;7008:652::-;7085:6;7093;7142:2;7130:9;7121:7;7117:23;7113:32;7110:119;;;7148:79;;:::i;:::-;7110:119;7268:1;7293:53;7338:7;7329:6;7318:9;7314:22;7293:53;:::i;:::-;7283:63;;7239:117;7423:2;7412:9;7408:18;7395:32;7454:18;7446:6;7443:30;7440:117;;;7476:79;;:::i;:::-;7440:117;7581:62;7635:7;7626:6;7615:9;7611:22;7581:62;:::i;:::-;7571:72;;7366:287;7008:652;;;;;:::o;7666:118::-;7753:24;7771:5;7753:24;:::i;:::-;7748:3;7741:37;7666:118;;:::o;7790:222::-;7883:4;7921:2;7910:9;7906:18;7898:26;;7934:71;8002:1;7991:9;7987:17;7978:6;7934:71;:::i;:::-;7790:222;;;;:::o;8018:118::-;8105:24;8123:5;8105:24;:::i;:::-;8100:3;8093:37;8018:118;;:::o;8142:222::-;8235:4;8273:2;8262:9;8258:18;8250:26;;8286:71;8354:1;8343:9;8339:17;8330:6;8286:71;:::i;:::-;8142:222;;;;:::o;8370:99::-;8422:6;8456:5;8450:12;8440:22;;8370:99;;;:::o;8475:169::-;8559:11;8593:6;8588:3;8581:19;8633:4;8628:3;8624:14;8609:29;;8475:169;;;;:::o;8650:246::-;8731:1;8741:113;8755:6;8752:1;8749:13;8741:113;;;8840:1;8835:3;8831:11;8825:18;8821:1;8816:3;8812:11;8805:39;8777:2;8774:1;8770:10;8765:15;;8741:113;;;8888:1;8879:6;8874:3;8870:16;8863:27;8712:184;8650:246;;;:::o;8902:377::-;8990:3;9018:39;9051:5;9018:39;:::i;:::-;9073:71;9137:6;9132:3;9073:71;:::i;:::-;9066:78;;9153:65;9211:6;9206:3;9199:4;9192:5;9188:16;9153:65;:::i;:::-;9243:29;9265:6;9243:29;:::i;:::-;9238:3;9234:39;9227:46;;8994:285;8902:377;;;;:::o;9285:313::-;9398:4;9436:2;9425:9;9421:18;9413:26;;9485:9;9479:4;9475:20;9471:1;9460:9;9456:17;9449:47;9513:78;9586:4;9577:6;9513:78;:::i;:::-;9505:86;;9285:313;;;;:::o;9604:60::-;9632:3;9653:5;9646:12;;9604:60;;;:::o;9670:142::-;9720:9;9753:53;9771:34;9780:24;9798:5;9780:24;:::i;:::-;9771:34;:::i;:::-;9753:53;:::i;:::-;9740:66;;9670:142;;;:::o;9818:126::-;9868:9;9901:37;9932:5;9901:37;:::i;:::-;9888:50;;9818:126;;;:::o;9950:146::-;10020:9;10053:37;10084:5;10053:37;:::i;:::-;10040:50;;9950:146;;;:::o;10102:171::-;10209:57;10260:5;10209:57;:::i;:::-;10204:3;10197:70;10102:171;;:::o;10279:262::-;10392:4;10430:2;10419:9;10415:18;10407:26;;10443:91;10531:1;10520:9;10516:17;10507:6;10443:91;:::i;:::-;10279:262;;;;:::o;10547:329::-;10606:6;10655:2;10643:9;10634:7;10630:23;10626:32;10623:119;;;10661:79;;:::i;:::-;10623:119;10781:1;10806:53;10851:7;10842:6;10831:9;10827:22;10806:53;:::i;:::-;10796:63;;10752:117;10547:329;;;;:::o;10882:171::-;11022:23;11018:1;11010:6;11006:14;10999:47;10882:171;:::o;11059:366::-;11201:3;11222:67;11286:2;11281:3;11222:67;:::i;:::-;11215:74;;11298:93;11387:3;11298:93;:::i;:::-;11416:2;11411:3;11407:12;11400:19;;11059:366;;;:::o;11431:419::-;11597:4;11635:2;11624:9;11620:18;11612:26;;11684:9;11678:4;11674:20;11670:1;11659:9;11655:17;11648:47;11712:131;11838:4;11712:131;:::i;:::-;11704:139;;11431:419;;;:::o;11856:143::-;11913:5;11944:6;11938:13;11929:22;;11960:33;11987:5;11960:33;:::i;:::-;11856:143;;;;:::o;12005:351::-;12075:6;12124:2;12112:9;12103:7;12099:23;12095:32;12092:119;;;12130:79;;:::i;:::-;12092:119;12250:1;12275:64;12331:7;12322:6;12311:9;12307:22;12275:64;:::i;:::-;12265:74;;12221:128;12005:351;;;;:::o;12362:85::-;12407:7;12436:5;12425:16;;12362:85;;;:::o;12453:101::-;12489:7;12529:18;12522:5;12518:30;12507:41;;12453:101;;;:::o;12560:156::-;12617:9;12650:60;12667:42;12676:32;12702:5;12676:32;:::i;:::-;12667:42;:::i;:::-;12650:60;:::i;:::-;12637:73;;12560:156;;;:::o;12722:145::-;12816:44;12854:5;12816:44;:::i;:::-;12811:3;12804:57;12722:145;;:::o;12873:236::-;12973:4;13011:2;13000:9;12996:18;12988:26;;13024:78;13099:1;13088:9;13084:17;13075:6;13024:78;:::i;:::-;12873:236;;;;:::o;13115:85::-;13160:7;13189:5;13178:16;;13115:85;;;:::o;13206:134::-;13243:7;13283:50;13276:5;13272:62;13261:73;;13206:134;;;:::o;13346:158::-;13404:9;13437:61;13455:42;13464:32;13490:5;13464:32;:::i;:::-;13455:42;:::i;:::-;13437:61;:::i;:::-;13424:74;;13346:158;;;:::o;13510:147::-;13605:45;13644:5;13605:45;:::i;:::-;13600:3;13593:58;13510:147;;:::o;13663:348::-;13792:4;13830:2;13819:9;13815:18;13807:26;;13843:71;13911:1;13900:9;13896:17;13887:6;13843:71;:::i;:::-;13924:80;14000:2;13989:9;13985:18;13976:6;13924:80;:::i;:::-;13663:348;;;;;:::o;14017:178::-;14157:30;14153:1;14145:6;14141:14;14134:54;14017:178;:::o;14201:366::-;14343:3;14364:67;14428:2;14423:3;14364:67;:::i;:::-;14357:74;;14440:93;14529:3;14440:93;:::i;:::-;14558:2;14553:3;14549:12;14542:19;;14201:366;;;:::o;14573:419::-;14739:4;14777:2;14766:9;14762:18;14754:26;;14826:9;14820:4;14816:20;14812:1;14801:9;14797:17;14790:47;14854:131;14980:4;14854:131;:::i;:::-;14846:139;;14573:419;;;:::o;14998:117::-;15107:1;15104;15097:12;15121:117;15230:1;15227;15220:12;15244:117;15353:1;15350;15343:12;15367:724;15444:4;15450:6;15506:11;15493:25;15606:1;15600:4;15596:12;15585:8;15569:14;15565:29;15561:48;15541:18;15537:73;15527:168;;15614:79;;:::i;:::-;15527:168;15726:18;15716:8;15712:33;15704:41;;15778:4;15765:18;15755:28;;15806:18;15798:6;15795:30;15792:117;;;15828:79;;:::i;:::-;15792:117;15936:2;15930:4;15926:13;15918:21;;15993:4;15985:6;15981:17;15965:14;15961:38;15955:4;15951:49;15948:136;;;16003:79;;:::i;:::-;15948:136;15457:634;15367:724;;;;;:::o;16097:147::-;16198:11;16235:3;16220:18;;16097:147;;;;:::o;16250:114::-;;:::o;16370:398::-;16529:3;16550:83;16631:1;16626:3;16550:83;:::i;:::-;16543:90;;16642:93;16731:3;16642:93;:::i;:::-;16760:1;16755:3;16751:11;16744:18;;16370:398;;;:::o;16774:379::-;16958:3;16980:147;17123:3;16980:147;:::i;:::-;16973:154;;17144:3;17137:10;;16774:379;;;:::o;17159:143::-;17216:5;17247:6;17241:13;17232:22;;17263:33;17290:5;17263:33;:::i;:::-;17159:143;;;;:::o;17308:351::-;17378:6;17427:2;17415:9;17406:7;17402:23;17398:32;17395:119;;;17433:79;;:::i;:::-;17395:119;17553:1;17578:64;17634:7;17625:6;17614:9;17610:22;17578:64;:::i;:::-;17568:74;;17524:128;17308:351;;;;:::o;17665:160::-;17805:12;17801:1;17793:6;17789:14;17782:36;17665:160;:::o;17831:366::-;17973:3;17994:67;18058:2;18053:3;17994:67;:::i;:::-;17987:74;;18070:93;18159:3;18070:93;:::i;:::-;18188:2;18183:3;18179:12;18172:19;;17831:366;;;:::o;18203:419::-;18369:4;18407:2;18396:9;18392:18;18384:26;;18456:9;18450:4;18446:20;18442:1;18431:9;18427:17;18420:47;18484:131;18610:4;18484:131;:::i;:::-;18476:139;;18203:419;;;:::o;18628:180::-;18676:77;18673:1;18666:88;18773:4;18770:1;18763:15;18797:4;18794:1;18787:15;18814:98;18865:6;18899:5;18893:12;18883:22;;18814:98;;;:::o;18918:386::-;19022:3;19050:38;19082:5;19050:38;:::i;:::-;19104:88;19185:6;19180:3;19104:88;:::i;:::-;19097:95;;19201:65;19259:6;19254:3;19247:4;19240:5;19236:16;19201:65;:::i;:::-;19291:6;19286:3;19282:16;19275:23;;19026:278;18918:386;;;;:::o;19310:271::-;19440:3;19462:93;19551:3;19542:6;19462:93;:::i;:::-;19455:100;;19572:3;19565:10;;19310:271;;;;:::o;19587:86::-;19622:7;19662:4;19655:5;19651:16;19640:27;;19587:86;;;:::o;19679:112::-;19762:22;19778:5;19762:22;:::i;:::-;19757:3;19750:35;19679:112;;:::o;19797:545::-;19970:4;20008:3;19997:9;19993:19;19985:27;;20022:71;20090:1;20079:9;20075:17;20066:6;20022:71;:::i;:::-;20103:68;20167:2;20156:9;20152:18;20143:6;20103:68;:::i;:::-;20181:72;20249:2;20238:9;20234:18;20225:6;20181:72;:::i;:::-;20263;20331:2;20320:9;20316:18;20307:6;20263:72;:::i;:::-;19797:545;;;;;;;:::o"},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addDeposit()":"4a58db19","checkBalance()":"c71daccb","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","getNonce()":"d087d288","initialize(address)":"c4d66de8","login(string)":"3a7d280c","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"19822f7c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"anEntryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IEntryPoint\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SmartSample\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkBalance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"anOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"login\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"initialize(address)\":{\"details\":\"The _entryPoint member is immutable, to reduce gas consumption.  To upgrade EntryPoint, a new implementation of SimpleAccount must be deployed with the new EntryPoint address, then upgrading the implementation by calling `upgradeTo()`\",\"params\":{\"anOwner\":\"the owner (signer) of this account\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"details\":\"Must validate caller is the entryPoint.      Must validate the signature and nonce\",\"params\":{\"missingAccountFunds\":\"- Missing funds on the account's deposit in the entrypoint.                              This is the minimum amount to transfer to the sender(entryPoint) to be                              able to make the call. The excess is left as a deposit in the entrypoint                              for future calls. Can be withdrawn anytime using \\\"entryPoint.withdrawTo()\\\".                              In case there is a paymaster in the request (or the current deposit is high                              enough), this value will be zero.\",\"userOp\":\"- The operation that is about to be executed.\",\"userOpHash\":\"- Hash of the user's request data. can be used as the basis for signature.\"},\"returns\":{\"validationData\":\"      - Packaged ValidationData structure. use `_packValidationData` and                              `_unpackValidationData` to encode and decode.                              <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                 otherwise, an address of an \\\"authorizer\\\" contract.                              <6-byte> validUntil - Last timestamp this operation is valid. 0 for \\\"indefinite\\\"                              <6-byte> validAfter - First timestamp this operation is valid                                                    If an account doesn't use time-range, it is enough to                                                    return SIG_VALIDATION_FAILED value (1) for signature failure.                              Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addDeposit()\":{\"notice\":\"deposit more funds for this account in the entryPoint\"},\"entryPoint()\":{\"notice\":\"Return the entryPoint used by this account. Subclass should return the current entryPoint used by this account.\"},\"getNonce()\":{\"notice\":\"Return the account nonce. This method returns the next sequential nonce. For a nonce of a specific key, use `entrypoint.getNonce(account, key)`\"},\"validateUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Validate user's signature and nonce the entryPoint will make the call to the recipient only if this validation call returns successfully. signature failure should be reported by returning SIG_VALIDATION_FAILED (1). This allows making a \\\"simulation call\\\" without a valid signature Other failures (e.g. nonce mismatch, or invalid signature format) should still revert to signal failure.\"}},\"notice\":\"minimal account.  this is sample minimal account.  has execute, eth handling methods  has a single signer that can send requests through the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartContractWallet.sol\":\"SmartContractWallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"contracts/SmartContractWallet.sol\":{\"keccak256\":\"0xfa1f0747df4e4357638cf283ce439ddc4cd3cbfeb46ef27c24866ce43c6a221f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cca1e1afb7965d0ef232e02014cb8e16649788f09b59990e0ba635320334a136\",\"dweb:/ipfs/QmXFtabg6S19jngki77HsGPWftRm4f6R9wvtRh61HuUVBc\"]}},\"version\":1}"}},"contracts/SmartWalletFactory.sol":{"SmartContractWalletFactory":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"accountImplementation","outputs":[{"internalType":"contract SmartContractWallet","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allDeployedAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"createAccount","outputs":[{"internalType":"contract SmartContractWallet","name":"ret","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"getAccountAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"salt","type":"uint256"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"ownerAddress","type":"address"}],"name":"getAllAccountWithOwner","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4477":{"entryPoint":null,"id":4477,"parameterSlots":1,"returnSlots":0},"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory":{"entryPoint":287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory":{"entryPoint":310,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack":{"entryPoint":450,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed":{"entryPoint":467,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":221,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IEntryPoint_$4028":{"entryPoint":241,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":189,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IEntryPoint_$4028_to_t_address":{"entryPoint":430,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":410,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":370,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":360,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":184,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_contract$_IEntryPoint_$4028":{"entryPoint":261,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2384:26","nodeType":"YulBlock","src":"0:2384:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"633:51:26","nodeType":"YulBlock","src":"633:51:26","statements":[{"nativeSrc":"643:35:26","nodeType":"YulAssignment","src":"643:35:26","value":{"arguments":[{"name":"value","nativeSrc":"672:5:26","nodeType":"YulIdentifier","src":"672:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"654:17:26","nodeType":"YulIdentifier","src":"654:17:26"},"nativeSrc":"654:24:26","nodeType":"YulFunctionCall","src":"654:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"643:7:26","nodeType":"YulIdentifier","src":"643:7:26"}]}]},"name":"cleanup_t_contract$_IEntryPoint_$4028","nativeSrc":"568:116:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"615:5:26","nodeType":"YulTypedName","src":"615:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"625:7:26","nodeType":"YulTypedName","src":"625:7:26","type":""}],"src":"568:116:26"},{"body":{"nativeSrc":"753:99:26","nodeType":"YulBlock","src":"753:99:26","statements":[{"body":{"nativeSrc":"830:16:26","nodeType":"YulBlock","src":"830:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"839:1:26","nodeType":"YulLiteral","src":"839:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"842:1:26","nodeType":"YulLiteral","src":"842:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"832:6:26","nodeType":"YulIdentifier","src":"832:6:26"},"nativeSrc":"832:12:26","nodeType":"YulFunctionCall","src":"832:12:26"},"nativeSrc":"832:12:26","nodeType":"YulExpressionStatement","src":"832:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"776:5:26","nodeType":"YulIdentifier","src":"776:5:26"},{"arguments":[{"name":"value","nativeSrc":"821:5:26","nodeType":"YulIdentifier","src":"821:5:26"}],"functionName":{"name":"cleanup_t_contract$_IEntryPoint_$4028","nativeSrc":"783:37:26","nodeType":"YulIdentifier","src":"783:37:26"},"nativeSrc":"783:44:26","nodeType":"YulFunctionCall","src":"783:44:26"}],"functionName":{"name":"eq","nativeSrc":"773:2:26","nodeType":"YulIdentifier","src":"773:2:26"},"nativeSrc":"773:55:26","nodeType":"YulFunctionCall","src":"773:55:26"}],"functionName":{"name":"iszero","nativeSrc":"766:6:26","nodeType":"YulIdentifier","src":"766:6:26"},"nativeSrc":"766:63:26","nodeType":"YulFunctionCall","src":"766:63:26"},"nativeSrc":"763:83:26","nodeType":"YulIf","src":"763:83:26"}]},"name":"validator_revert_t_contract$_IEntryPoint_$4028","nativeSrc":"690:162:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"746:5:26","nodeType":"YulTypedName","src":"746:5:26","type":""}],"src":"690:162:26"},{"body":{"nativeSrc":"941:100:26","nodeType":"YulBlock","src":"941:100:26","statements":[{"nativeSrc":"951:22:26","nodeType":"YulAssignment","src":"951:22:26","value":{"arguments":[{"name":"offset","nativeSrc":"966:6:26","nodeType":"YulIdentifier","src":"966:6:26"}],"functionName":{"name":"mload","nativeSrc":"960:5:26","nodeType":"YulIdentifier","src":"960:5:26"},"nativeSrc":"960:13:26","nodeType":"YulFunctionCall","src":"960:13:26"},"variableNames":[{"name":"value","nativeSrc":"951:5:26","nodeType":"YulIdentifier","src":"951:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1029:5:26","nodeType":"YulIdentifier","src":"1029:5:26"}],"functionName":{"name":"validator_revert_t_contract$_IEntryPoint_$4028","nativeSrc":"982:46:26","nodeType":"YulIdentifier","src":"982:46:26"},"nativeSrc":"982:53:26","nodeType":"YulFunctionCall","src":"982:53:26"},"nativeSrc":"982:53:26","nodeType":"YulExpressionStatement","src":"982:53:26"}]},"name":"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"858:183:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"919:6:26","nodeType":"YulTypedName","src":"919:6:26","type":""},{"name":"end","nativeSrc":"927:3:26","nodeType":"YulTypedName","src":"927:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"935:5:26","nodeType":"YulTypedName","src":"935:5:26","type":""}],"src":"858:183:26"},{"body":{"nativeSrc":"1144:294:26","nodeType":"YulBlock","src":"1144:294:26","statements":[{"body":{"nativeSrc":"1190:83:26","nodeType":"YulBlock","src":"1190:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1192:77:26","nodeType":"YulIdentifier","src":"1192:77:26"},"nativeSrc":"1192:79:26","nodeType":"YulFunctionCall","src":"1192:79:26"},"nativeSrc":"1192:79:26","nodeType":"YulExpressionStatement","src":"1192:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1165:7:26","nodeType":"YulIdentifier","src":"1165:7:26"},{"name":"headStart","nativeSrc":"1174:9:26","nodeType":"YulIdentifier","src":"1174:9:26"}],"functionName":{"name":"sub","nativeSrc":"1161:3:26","nodeType":"YulIdentifier","src":"1161:3:26"},"nativeSrc":"1161:23:26","nodeType":"YulFunctionCall","src":"1161:23:26"},{"kind":"number","nativeSrc":"1186:2:26","nodeType":"YulLiteral","src":"1186:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1157:3:26","nodeType":"YulIdentifier","src":"1157:3:26"},"nativeSrc":"1157:32:26","nodeType":"YulFunctionCall","src":"1157:32:26"},"nativeSrc":"1154:119:26","nodeType":"YulIf","src":"1154:119:26"},{"nativeSrc":"1283:148:26","nodeType":"YulBlock","src":"1283:148:26","statements":[{"nativeSrc":"1298:15:26","nodeType":"YulVariableDeclaration","src":"1298:15:26","value":{"kind":"number","nativeSrc":"1312:1:26","nodeType":"YulLiteral","src":"1312:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1302:6:26","nodeType":"YulTypedName","src":"1302:6:26","type":""}]},{"nativeSrc":"1327:94:26","nodeType":"YulAssignment","src":"1327:94:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1393:9:26","nodeType":"YulIdentifier","src":"1393:9:26"},{"name":"offset","nativeSrc":"1404:6:26","nodeType":"YulIdentifier","src":"1404:6:26"}],"functionName":{"name":"add","nativeSrc":"1389:3:26","nodeType":"YulIdentifier","src":"1389:3:26"},"nativeSrc":"1389:22:26","nodeType":"YulFunctionCall","src":"1389:22:26"},{"name":"dataEnd","nativeSrc":"1413:7:26","nodeType":"YulIdentifier","src":"1413:7:26"}],"functionName":{"name":"abi_decode_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"1337:51:26","nodeType":"YulIdentifier","src":"1337:51:26"},"nativeSrc":"1337:84:26","nodeType":"YulFunctionCall","src":"1337:84:26"},"variableNames":[{"name":"value0","nativeSrc":"1327:6:26","nodeType":"YulIdentifier","src":"1327:6:26"}]}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory","nativeSrc":"1047:391:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1114:9:26","nodeType":"YulTypedName","src":"1114:9:26","type":""},{"name":"dataEnd","nativeSrc":"1125:7:26","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1137:6:26","nodeType":"YulTypedName","src":"1137:6:26","type":""}],"src":"1047:391:26"},{"body":{"nativeSrc":"1476:28:26","nodeType":"YulBlock","src":"1476:28:26","statements":[{"nativeSrc":"1486:12:26","nodeType":"YulAssignment","src":"1486:12:26","value":{"name":"value","nativeSrc":"1493:5:26","nodeType":"YulIdentifier","src":"1493:5:26"},"variableNames":[{"name":"ret","nativeSrc":"1486:3:26","nodeType":"YulIdentifier","src":"1486:3:26"}]}]},"name":"identity","nativeSrc":"1444:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1462:5:26","nodeType":"YulTypedName","src":"1462:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1472:3:26","nodeType":"YulTypedName","src":"1472:3:26","type":""}],"src":"1444:60:26"},{"body":{"nativeSrc":"1570:82:26","nodeType":"YulBlock","src":"1570:82:26","statements":[{"nativeSrc":"1580:66:26","nodeType":"YulAssignment","src":"1580:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1638:5:26","nodeType":"YulIdentifier","src":"1638:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1620:17:26","nodeType":"YulIdentifier","src":"1620:17:26"},"nativeSrc":"1620:24:26","nodeType":"YulFunctionCall","src":"1620:24:26"}],"functionName":{"name":"identity","nativeSrc":"1611:8:26","nodeType":"YulIdentifier","src":"1611:8:26"},"nativeSrc":"1611:34:26","nodeType":"YulFunctionCall","src":"1611:34:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1593:17:26","nodeType":"YulIdentifier","src":"1593:17:26"},"nativeSrc":"1593:53:26","nodeType":"YulFunctionCall","src":"1593:53:26"},"variableNames":[{"name":"converted","nativeSrc":"1580:9:26","nodeType":"YulIdentifier","src":"1580:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"1510:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1550:5:26","nodeType":"YulTypedName","src":"1550:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1560:9:26","nodeType":"YulTypedName","src":"1560:9:26","type":""}],"src":"1510:142:26"},{"body":{"nativeSrc":"1718:66:26","nodeType":"YulBlock","src":"1718:66:26","statements":[{"nativeSrc":"1728:50:26","nodeType":"YulAssignment","src":"1728:50:26","value":{"arguments":[{"name":"value","nativeSrc":"1772:5:26","nodeType":"YulIdentifier","src":"1772:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"1741:30:26","nodeType":"YulIdentifier","src":"1741:30:26"},"nativeSrc":"1741:37:26","nodeType":"YulFunctionCall","src":"1741:37:26"},"variableNames":[{"name":"converted","nativeSrc":"1728:9:26","nodeType":"YulIdentifier","src":"1728:9:26"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"1658:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1698:5:26","nodeType":"YulTypedName","src":"1698:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1708:9:26","nodeType":"YulTypedName","src":"1708:9:26","type":""}],"src":"1658:126:26"},{"body":{"nativeSrc":"1870:66:26","nodeType":"YulBlock","src":"1870:66:26","statements":[{"nativeSrc":"1880:50:26","nodeType":"YulAssignment","src":"1880:50:26","value":{"arguments":[{"name":"value","nativeSrc":"1924:5:26","nodeType":"YulIdentifier","src":"1924:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"1893:30:26","nodeType":"YulIdentifier","src":"1893:30:26"},"nativeSrc":"1893:37:26","nodeType":"YulFunctionCall","src":"1893:37:26"},"variableNames":[{"name":"converted","nativeSrc":"1880:9:26","nodeType":"YulIdentifier","src":"1880:9:26"}]}]},"name":"convert_t_contract$_IEntryPoint_$4028_to_t_address","nativeSrc":"1790:146:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1850:5:26","nodeType":"YulTypedName","src":"1850:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1860:9:26","nodeType":"YulTypedName","src":"1860:9:26","type":""}],"src":"1790:146:26"},{"body":{"nativeSrc":"2027:86:26","nodeType":"YulBlock","src":"2027:86:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2044:3:26","nodeType":"YulIdentifier","src":"2044:3:26"},{"arguments":[{"name":"value","nativeSrc":"2100:5:26","nodeType":"YulIdentifier","src":"2100:5:26"}],"functionName":{"name":"convert_t_contract$_IEntryPoint_$4028_to_t_address","nativeSrc":"2049:50:26","nodeType":"YulIdentifier","src":"2049:50:26"},"nativeSrc":"2049:57:26","nodeType":"YulFunctionCall","src":"2049:57:26"}],"functionName":{"name":"mstore","nativeSrc":"2037:6:26","nodeType":"YulIdentifier","src":"2037:6:26"},"nativeSrc":"2037:70:26","nodeType":"YulFunctionCall","src":"2037:70:26"},"nativeSrc":"2037:70:26","nodeType":"YulExpressionStatement","src":"2037:70:26"}]},"name":"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack","nativeSrc":"1942:171:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2015:5:26","nodeType":"YulTypedName","src":"2015:5:26","type":""},{"name":"pos","nativeSrc":"2022:3:26","nodeType":"YulTypedName","src":"2022:3:26","type":""}],"src":"1942:171:26"},{"body":{"nativeSrc":"2237:144:26","nodeType":"YulBlock","src":"2237:144:26","statements":[{"nativeSrc":"2247:26:26","nodeType":"YulAssignment","src":"2247:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2259:9:26","nodeType":"YulIdentifier","src":"2259:9:26"},{"kind":"number","nativeSrc":"2270:2:26","nodeType":"YulLiteral","src":"2270:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2255:3:26","nodeType":"YulIdentifier","src":"2255:3:26"},"nativeSrc":"2255:18:26","nodeType":"YulFunctionCall","src":"2255:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2247:4:26","nodeType":"YulIdentifier","src":"2247:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2347:6:26","nodeType":"YulIdentifier","src":"2347:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"2360:9:26","nodeType":"YulIdentifier","src":"2360:9:26"},{"kind":"number","nativeSrc":"2371:1:26","nodeType":"YulLiteral","src":"2371:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2356:3:26","nodeType":"YulIdentifier","src":"2356:3:26"},"nativeSrc":"2356:17:26","nodeType":"YulFunctionCall","src":"2356:17:26"}],"functionName":{"name":"abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack","nativeSrc":"2283:63:26","nodeType":"YulIdentifier","src":"2283:63:26"},"nativeSrc":"2283:91:26","nodeType":"YulFunctionCall","src":"2283:91:26"},"nativeSrc":"2283:91:26","nodeType":"YulExpressionStatement","src":"2283:91:26"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed","nativeSrc":"2119:262:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2209:9:26","nodeType":"YulTypedName","src":"2209:9:26","type":""},{"name":"value0","nativeSrc":"2221:6:26","nodeType":"YulTypedName","src":"2221:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2232:4:26","nodeType":"YulTypedName","src":"2232:4:26","type":""}],"src":"2119:262:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IEntryPoint_$4028(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IEntryPoint_$4028(value) {\n        if iszero(eq(value, cleanup_t_contract$_IEntryPoint_$4028(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IEntryPoint_$4028_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IEntryPoint_$4028(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4028_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IEntryPoint_$4028_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IEntryPoint_$4028_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IEntryPoint_$4028_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4028__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IEntryPoint_$4028_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b506040516200353938038062003539833981810160405281019062000037919062000136565b806040516200004690620000aa565b620000529190620001d3565b604051809103906000f0801580156200006f573d6000803e3d6000fd5b5073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620001f0565b61215780620013e283390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ea82620000bd565b9050919050565b6000620000fe82620000dd565b9050919050565b6200011081620000f1565b81146200011c57600080fd5b50565b600081519050620001308162000105565b92915050565b6000602082840312156200014f576200014e620000b8565b5b60006200015f848285016200011f565b91505092915050565b6000819050919050565b6000620001936200018d6200018784620000bd565b62000168565b620000bd565b9050919050565b6000620001a78262000172565b9050919050565b6000620001bb826200019a565b9050919050565b620001cd81620001ae565b82525050565b6000602082019050620001ea6000830184620001c2565b92915050565b6080516111c86200021a600039600081816101f00152818161025a015261051d01526111c86000f3fe60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80630d253d76146200006f57806311464fbe14620000a55780635fbfb9cf14620000c7578063805d09ab14620000fd5780638cb84e181462000133578063f6d62ece1462000169575b600080fd5b6200008d600480360381019062000087919062000722565b6200019f565b6040516200009c91906200077a565b60405180910390f35b620000af620001ee565b604051620000be919062000802565b60405180910390f35b620000e56004803603810190620000df919062000722565b62000212565b604051620000f4919062000802565b60405180910390f35b6200011b60048036038101906200011591906200081f565b6200041c565b6040516200012a91906200091f565b60405180910390f35b6200015160048036038101906200014b919062000722565b620004eb565b6040516200016091906200077a565b60405180910390f35b62000187600480360381019062000181919062000943565b620005ed565b6040516200019691906200077a565b60405180910390f35b60016020528160005260406000208181548110620001bc57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080620002218484620004eb565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200025457819250505062000416565b8360001b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016200028c91906200077a565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002df906200066f565b620002ec92919062000a0f565b8190604051809103906000f59050801580156200030d573d6000803e3d6000fd5b509250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b92915050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620004df57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000494575b50505050509050919050565b6000620005e58260001b6040518060200162000507906200066f565b6020820181038252601f19601f820116604052507f0000000000000000000000000000000000000000000000000000000000000000866040516024016200054f91906200077a565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620005a792919062000a0f565b604051602081830303815290604052604051602001620005c992919062000a85565b604051602081830303815290604052805190602001206200062d565b905092915050565b60008181548110620005fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006200063c83833062000644565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b6106e58062000aae83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006af8262000682565b9050919050565b620006c181620006a2565b8114620006cd57600080fd5b50565b600081359050620006e181620006b6565b92915050565b6000819050919050565b620006fc81620006e7565b81146200070857600080fd5b50565b6000813590506200071c81620006f1565b92915050565b600080604083850312156200073c576200073b6200067d565b5b60006200074c85828601620006d0565b92505060206200075f858286016200070b565b9150509250929050565b6200077481620006a2565b82525050565b600060208201905062000791600083018462000769565b92915050565b6000819050919050565b6000620007c2620007bc620007b68462000682565b62000797565b62000682565b9050919050565b6000620007d682620007a1565b9050919050565b6000620007ea82620007c9565b9050919050565b620007fc81620007dd565b82525050565b6000602082019050620008196000830184620007f1565b92915050565b6000602082840312156200083857620008376200067d565b5b60006200084884828501620006d0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200088881620006a2565b82525050565b60006200089c83836200087d565b60208301905092915050565b6000602082019050919050565b6000620008c28262000851565b620008ce81856200085c565b9350620008db836200086d565b8060005b8381101562000912578151620008f688826200088e565b97506200090383620008a8565b925050600181019050620008df565b5085935050505092915050565b600060208201905081810360008301526200093b8184620008b5565b905092915050565b6000602082840312156200095c576200095b6200067d565b5b60006200096c848285016200070b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620009b157808201518184015260208101905062000994565b60008484015250505050565b6000601f19601f8301169050919050565b6000620009db8262000975565b620009e7818562000980565b9350620009f981856020860162000991565b62000a0481620009bd565b840191505092915050565b600060408201905062000a26600083018562000769565b818103602083015262000a3a8184620009ce565b90509392505050565b600081905092915050565b600062000a5b8262000975565b62000a67818562000a43565b935062000a7981856020860162000991565b80840191505092915050565b600062000a93828562000a4e565b915062000aa1828462000a4e565b9150819050939250505056fe60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220efb0453644e06fc30c00e319e2a4f2c1a809d39eca9642ae9d97060ab802f30a64736f6c63430008180033a264697066735822122025312603de8d5d9508b04a16c85e81a394f8d83828f075bb42ed0e4d78b9ec8064736f6c6343000818003360e06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156200004457600080fd5b50604051620021573803806200215783398181016040528101906200006a919062000265565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050620000ae620000b560201b60201c565b50620002d9565b6000620000c7620001bf60201b60201c565b90508060000160089054906101000a900460ff161562000113576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614620001bc5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff604051620001b39190620002bc565b60405180910390a15b50565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200021982620001ec565b9050919050565b60006200022d826200020c565b9050919050565b6200023f8162000220565b81146200024b57600080fd5b50565b6000815190506200025f8162000234565b92915050565b6000602082840312156200027e576200027d620001e7565b5b60006200028e848285016200024e565b91505092915050565b600067ffffffffffffffff82169050919050565b620002b68162000297565b82525050565b6000602082019050620002d36000830184620002ab565b92915050565b60805160a05160c051611e396200031e60003960006102f90152600081816104850152610c7401526000818161093e015281816109930152610b4e0152611e396000f3fe6080604052600436106100ab5760003560e01c8063ad3cb1cc11610064578063ad3cb1cc14610199578063b0d691fe146101c4578063c399ec88146101ef578063c4d66de81461021a578063c71daccb14610243578063d087d2881461026e576100b2565b806319822f7c146100b75780633a7d280c146100f45780634a58db191461011d5780634f1ef2861461012757806352d1902d146101435780638da5cb5b1461016e576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100de60048036038101906100d9919061148f565b610299565b6040516100eb919061150d565b60405180910390f35b34801561010057600080fd5b5061011b6004803603810190610116919061166e565b6102cc565b005b61012561035d565b005b610141600480360381019061013c91906117b6565b6103d2565b005b34801561014f57600080fd5b506101586103f1565b6040516101659190611821565b60405180910390f35b34801561017a57600080fd5b50610183610424565b604051610190919061184b565b60405180910390f35b3480156101a557600080fd5b506101ae610448565b6040516101bb91906118e5565b60405180910390f35b3480156101d057600080fd5b506101d9610481565b6040516101e69190611966565b60405180910390f35b3480156101fb57600080fd5b506102046104a9565b604051610211919061150d565b60405180910390f35b34801561022657600080fd5b50610241600480360381019061023c9190611981565b610531565b005b34801561024f57600080fd5b506102586106c0565b604051610265919061184b565b60405180910390f35b34801561027a57600080fd5b506102836106c8565b604051610290919061150d565b60405180910390f35b60006102a3610753565b6102ad84846107ca565b90506102bc846020013561089d565b6102c5826108a0565b9392505050565b6000816040516020016102df91906118e5565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000008114610359576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610350906119fa565b60405180910390fd5b5050565b610365610481565b73ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161039e919061184b565b6000604051808303818588803b1580156103b757600080fd5b505af11580156103cb573d6000803e3d6000fd5b5050505050565b6103da61093c565b6103e382610a22565b6103ed8282610a2d565b5050565b60006103fb610b4c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006104b3610481565b73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104eb919061184b565b602060405180830381865afa158015610508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052c9190611a2f565b905090565b600061053b610bd3565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156105895750825b9050600060018367ffffffffffffffff161480156105be575060003073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156105cc575080155b15610603576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106535760018560000160086101000a81548160ff0219169083151502179055505b61065c86610bfb565b83156106b85760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516106af9190611aab565b60405180910390a15b505050505050565b600030905090565b60006106d2610481565b73ffffffffffffffffffffffffffffffffffffffff166335567e1a3060006040518363ffffffff1660e01b815260040161070d929190611b25565b602060405180830381865afa15801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e9190611a2f565b905090565b61075b610481565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90611b9a565b60405180910390fd5b565b6000806107d683610cd8565b905061083581858061010001906107ed9190611bc9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d0e565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610891576001915050610897565b60009150505b92915050565b50565b600081146109395760003373ffffffffffffffffffffffffffffffffffffffff16827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906040516108f090611c5d565b600060405180830381858888f193505050503d806000811461092e576040519150601f19603f3d011682016040523d82523d6000602084013e610933565b606091505b50509050505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614806109e957507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166109d0610d3a565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610a20576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a2a610d91565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a9557506040513d601f19601f82011682018060405250810190610a929190611c87565b60015b610ad657816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610acd919061184b565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b8114610b3d57806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610b349190611821565b60405180910390fd5b610b478383610e57565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f1b5fc86b82922371dc8e7cb464044750968531a041b9ea4b8ca5bfac41f8c26960405160405180910390a350565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610d1e8686610eca565b925092509250610d2e8282610f26565b82935050505092915050565b6000610d687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610e1657503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90611d00565b60405180910390fd5b565b610e6082611094565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a2600081511115610ebd57610eb78282611161565b50610ec6565b610ec56111e5565b5b5050565b60008060006041845103610f0f5760008060006020870151925060408701519150606087015160001a9050610f0188828585611222565b955095509550505050610f1f565b60006002855160001b9250925092505b9250925092565b60006003811115610f3a57610f39611d20565b5b826003811115610f4d57610f4c611d20565b5b03156110865760016003811115610f6757610f66611d20565b5b826003811115610f7a57610f79611d20565b5b03610fb1576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610fc557610fc4611d20565b5b826003811115610fd857610fd7611d20565b5b0361101d578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611014919061150d565b60405180910390fd5b6003808111156110305761102f611d20565b5b82600381111561104357611042611d20565b5b0361108557806040517fd78bce0c00000000000000000000000000000000000000000000000000000000815260040161107c9190611821565b60405180910390fd5b5b5050565b6000819050919050565b60008173ffffffffffffffffffffffffffffffffffffffff163b036110f057806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016110e7919061184b565b60405180910390fd5b8061111d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61108a565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff168460405161118b9190611d8b565b600060405180830381855af49150503d80600081146111c6576040519150601f19603f3d011682016040523d82523d6000602084013e6111cb565b606091505b50915091506111db858383611316565b9250505092915050565b6000341115611220576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c111561126257600060038592509250925061130c565b6000600188888888604051600081526020016040526040516112879493929190611dbe565b6020604051602081039080840390855afa1580156112a9573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112fd57600060016000801b9350935093505061130c565b8060008060001b935093509350505b9450945094915050565b60608261132b57611326826113a5565b61139d565b60008251148015611353575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561139557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161138c919061184b565b60405180910390fd5b81905061139e565b5b9392505050565b6000815111156113b85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600080fd5b6000610120828403121561141a576114196113fe565b5b81905092915050565b6000819050919050565b61143681611423565b811461144157600080fd5b50565b6000813590506114538161142d565b92915050565b6000819050919050565b61146c81611459565b811461147757600080fd5b50565b60008135905061148981611463565b92915050565b6000806000606084860312156114a8576114a76113f4565b5b600084013567ffffffffffffffff8111156114c6576114c56113f9565b5b6114d286828701611403565b93505060206114e386828701611444565b92505060406114f48682870161147a565b9150509250925092565b61150781611459565b82525050565b600060208201905061152260008301846114fe565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61157b82611532565b810181811067ffffffffffffffff8211171561159a57611599611543565b5b80604052505050565b60006115ad6113ea565b90506115b98282611572565b919050565b600067ffffffffffffffff8211156115d9576115d8611543565b5b6115e282611532565b9050602081019050919050565b82818337600083830152505050565b600061161161160c846115be565b6115a3565b90508281526020810184848401111561162d5761162c61152d565b5b6116388482856115ef565b509392505050565b600082601f83011261165557611654611528565b5b81356116658482602086016115fe565b91505092915050565b600060208284031215611684576116836113f4565b5b600082013567ffffffffffffffff8111156116a2576116a16113f9565b5b6116ae84828501611640565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116e2826116b7565b9050919050565b6116f2816116d7565b81146116fd57600080fd5b50565b60008135905061170f816116e9565b92915050565b600067ffffffffffffffff8211156117305761172f611543565b5b61173982611532565b9050602081019050919050565b600061175961175484611715565b6115a3565b9050828152602081018484840111156117755761177461152d565b5b6117808482856115ef565b509392505050565b600082601f83011261179d5761179c611528565b5b81356117ad848260208601611746565b91505092915050565b600080604083850312156117cd576117cc6113f4565b5b60006117db85828601611700565b925050602083013567ffffffffffffffff8111156117fc576117fb6113f9565b5b61180885828601611788565b9150509250929050565b61181b81611423565b82525050565b60006020820190506118366000830184611812565b92915050565b611845816116d7565b82525050565b6000602082019050611860600083018461183c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118a0578082015181840152602081019050611885565b60008484015250505050565b60006118b782611866565b6118c18185611871565b93506118d1818560208601611882565b6118da81611532565b840191505092915050565b600060208201905081810360008301526118ff81846118ac565b905092915050565b6000819050919050565b600061192c611927611922846116b7565b611907565b6116b7565b9050919050565b600061193e82611911565b9050919050565b600061195082611933565b9050919050565b61196081611945565b82525050565b600060208201905061197b6000830184611957565b92915050565b600060208284031215611997576119966113f4565b5b60006119a584828501611700565b91505092915050565b7f596f7520617265206e6f7420746865206f776e65720000000000000000000000600082015250565b60006119e4601583611871565b91506119ef826119ae565b602082019050919050565b60006020820190508181036000830152611a13816119d7565b9050919050565b600081519050611a2981611463565b92915050565b600060208284031215611a4557611a446113f4565b5b6000611a5384828501611a1a565b91505092915050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000611a95611a90611a8b84611a5c565b611907565b611a66565b9050919050565b611aa581611a7a565b82525050565b6000602082019050611ac06000830184611a9c565b92915050565b6000819050919050565b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0f611b0a611b0584611ac6565b611907565b611ad0565b9050919050565b611b1f81611af4565b82525050565b6000604082019050611b3a600083018561183c565b611b476020830184611b16565b9392505050565b7f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000600082015250565b6000611b84601c83611871565b9150611b8f82611b4e565b602082019050919050565b60006020820190508181036000830152611bb381611b77565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611be657611be5611bba565b5b80840192508235915067ffffffffffffffff821115611c0857611c07611bbf565b5b602083019250600182023603831315611c2457611c23611bc4565b5b509250929050565b600081905092915050565b50565b6000611c47600083611c2c565b9150611c5282611c37565b600082019050919050565b6000611c6882611c3a565b9150819050919050565b600081519050611c818161142d565b92915050565b600060208284031215611c9d57611c9c6113f4565b5b6000611cab84828501611c72565b91505092915050565b7f6f6e6c79206f776e657200000000000000000000000000000000000000000000600082015250565b6000611cea600a83611871565b9150611cf582611cb4565b602082019050919050565b60006020820190508181036000830152611d1981611cdd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b6000611d6582611d4f565b611d6f8185611c2c565b9350611d7f818560208601611882565b80840191505092915050565b6000611d978284611d5a565b915081905092915050565b600060ff82169050919050565b611db881611da2565b82525050565b6000608082019050611dd36000830187611812565b611de06020830186611daf565b611ded6040830185611812565b611dfa6060830184611812565b9594505050505056fea264697066735822122009632364e0d500d05a2d6f3b504352e5cd8030e89619232e5f2a07f80daed44664736f6c63430008180033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3539 CODESIZE SUB DUP1 PUSH3 0x3539 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x136 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x46 SWAP1 PUSH3 0xAA JUMP JUMPDEST PUSH3 0x52 SWAP2 SWAP1 PUSH3 0x1D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x1F0 JUMP JUMPDEST PUSH2 0x2157 DUP1 PUSH3 0x13E2 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xEA DUP3 PUSH3 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFE DUP3 PUSH3 0xDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x110 DUP2 PUSH3 0xF1 JUMP JUMPDEST DUP2 EQ PUSH3 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x130 DUP2 PUSH3 0x105 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14F JUMPI PUSH3 0x14E PUSH3 0xB8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x15F DUP5 DUP3 DUP6 ADD PUSH3 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x193 PUSH3 0x18D PUSH3 0x187 DUP5 PUSH3 0xBD JUMP JUMPDEST PUSH3 0x168 JUMP JUMPDEST PUSH3 0xBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1A7 DUP3 PUSH3 0x172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BB DUP3 PUSH3 0x19A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1CD DUP2 PUSH3 0x1AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1EA PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x11C8 PUSH3 0x21A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1F0 ADD MSTORE DUP2 DUP2 PUSH2 0x25A ADD MSTORE PUSH2 0x51D ADD MSTORE PUSH2 0x11C8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD253D76 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0xA5 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xC7 JUMPI DUP1 PUSH4 0x805D09AB EQ PUSH3 0xFD JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x133 JUMPI DUP1 PUSH4 0xF6D62ECE EQ PUSH3 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x9C SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xAF PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xDF SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x81F JUMP JUMPDEST PUSH3 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x12A SWAP2 SWAP1 PUSH3 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x14B SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x160 SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x181 SWAP2 SWAP1 PUSH3 0x943 JUMP JUMPDEST PUSH3 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x196 SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x221 DUP5 DUP5 PUSH3 0x4EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x254 JUMPI DUP2 SWAP3 POP POP POP PUSH3 0x416 JUMP JUMPDEST DUP4 PUSH1 0x0 SHL PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x28C SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x2DF SWAP1 PUSH3 0x66F JUMP JUMPDEST PUSH3 0x2EC SWAP3 SWAP2 SWAP1 PUSH3 0xA0F JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x30D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x4DF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x494 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E5 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x507 SWAP1 PUSH3 0x66F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x54F SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5A7 SWAP3 SWAP2 SWAP1 PUSH3 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5C9 SWAP3 SWAP2 SWAP1 PUSH3 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x62D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x63C DUP4 DUP4 ADDRESS PUSH3 0x644 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 DUP2 KECCAK256 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E5 DUP1 PUSH3 0xAAE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AF DUP3 PUSH3 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C1 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x6E1 DUP2 PUSH3 0x6B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FC DUP2 PUSH3 0x6E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x71C DUP2 PUSH3 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x73C JUMPI PUSH3 0x73B PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x74C DUP6 DUP3 DUP7 ADD PUSH3 0x6D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x75F DUP6 DUP3 DUP7 ADD PUSH3 0x70B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x774 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x791 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7C2 PUSH3 0x7BC PUSH3 0x7B6 DUP5 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x797 JUMP JUMPDEST PUSH3 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D6 DUP3 PUSH3 0x7A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7EA DUP3 PUSH3 0x7C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7FC DUP2 PUSH3 0x7DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x819 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x7F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x838 JUMPI PUSH3 0x837 PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x848 DUP5 DUP3 DUP6 ADD PUSH3 0x6D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x888 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x89C DUP4 DUP4 PUSH3 0x87D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8C2 DUP3 PUSH3 0x851 JUMP JUMPDEST PUSH3 0x8CE DUP2 DUP6 PUSH3 0x85C JUMP JUMPDEST SWAP4 POP PUSH3 0x8DB DUP4 PUSH3 0x86D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x912 JUMPI DUP2 MLOAD PUSH3 0x8F6 DUP9 DUP3 PUSH3 0x88E JUMP JUMPDEST SWAP8 POP PUSH3 0x903 DUP4 PUSH3 0x8A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x8DF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x93B DUP2 DUP5 PUSH3 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x95C JUMPI PUSH3 0x95B PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x96C DUP5 DUP3 DUP6 ADD PUSH3 0x70B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x9B1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x994 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9DB DUP3 PUSH3 0x975 JUMP JUMPDEST PUSH3 0x9E7 DUP2 DUP6 PUSH3 0x980 JUMP JUMPDEST SWAP4 POP PUSH3 0x9F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x991 JUMP JUMPDEST PUSH3 0xA04 DUP2 PUSH3 0x9BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xA26 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x769 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xA3A DUP2 DUP5 PUSH3 0x9CE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA5B DUP3 PUSH3 0x975 JUMP JUMPDEST PUSH3 0xA67 DUP2 DUP6 PUSH3 0xA43 JUMP JUMPDEST SWAP4 POP PUSH3 0xA79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x991 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA93 DUP3 DUP6 PUSH3 0xA4E JUMP JUMPDEST SWAP2 POP PUSH3 0xAA1 DUP3 DUP5 PUSH3 0xA4E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB0 GASLIMIT CALLDATASIZE PREVRANDAO 0xE0 PUSH16 0xC30C00E319E2A4F2C1A809D39ECA9642 0xAE SWAP14 SWAP8 MOD EXP 0xB8 MUL RETURN EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 BALANCE 0x26 SUB 0xDE DUP14 TSTORE SWAP6 ADDMOD 0xB0 BLOBBASEFEE AND 0xC8 MCOPY DUP2 LOG3 SWAP5 0xF8 0xD8 CODESIZE 0x28 CREATE PUSH22 0xBB42ED0E4D78B9EC8064736F6C6343000818003360E0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2157 CODESIZE SUB DUP1 PUSH3 0x2157 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x6A SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH3 0xAE PUSH3 0xB5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC7 PUSH3 0x1BF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1BC JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x1B3 SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP3 PUSH3 0x1EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x22D DUP3 PUSH3 0x20C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x23F DUP2 PUSH3 0x220 JUMP JUMPDEST DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25F DUP2 PUSH3 0x234 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27E JUMPI PUSH3 0x27D PUSH3 0x1E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28E DUP5 DUP3 DUP6 ADD PUSH3 0x24E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B6 DUP2 PUSH3 0x297 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x2AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1E39 PUSH3 0x31E PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x2F9 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x485 ADD MSTORE PUSH2 0xC74 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x93E ADD MSTORE DUP2 DUP2 PUSH2 0x993 ADD MSTORE PUSH2 0xB4E ADD MSTORE PUSH2 0x1E39 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xAB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC71DACCB EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD087D288 EQ PUSH2 0x26E JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x19822F7C EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x3A7D280C EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x4A58DB19 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x16E JUMPI PUSH2 0xB2 JUMP JUMPDEST CALLDATASIZE PUSH2 0xB2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD9 SWAP2 SWAP1 PUSH2 0x148F JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x35D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x17B6 JUMP JUMPDEST PUSH2 0x3D2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 PUSH2 0x3F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x183 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AE PUSH2 0x448 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D9 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1981 JUMP JUMPDEST PUSH2 0x531 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x283 PUSH2 0x6C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x2A3 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x2AD DUP5 DUP5 PUSH2 0x7CA JUMP JUMPDEST SWAP1 POP PUSH2 0x2BC DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x89D JUMP JUMPDEST PUSH2 0x2C5 DUP3 PUSH2 0x8A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x18E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH32 0x0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x350 SWAP1 PUSH2 0x19FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x365 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB760FAF9 CALLVALUE ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3DA PUSH2 0x93C JUMP JUMPDEST PUSH2 0x3E3 DUP3 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x3ED DUP3 DUP3 PUSH2 0xA2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FB PUSH2 0xB4C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B3 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B PUSH2 0xBD3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x589 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x5BE JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x653 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x65C DUP7 PUSH2 0xBFB JUMP JUMPDEST DUP4 ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D2 PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x35567E1A ADDRESS PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70D SWAP3 SWAP2 SWAP1 PUSH2 0x1B25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74E SWAP2 SWAP1 PUSH2 0x1A2F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x75B PUSH2 0x481 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x1B9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D6 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 POP PUSH2 0x835 DUP2 DUP6 DUP1 PUSH2 0x100 ADD SWAP1 PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xD0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x891 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ PUSH2 0x939 JUMPI PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x40 MLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x933 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP POP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9E9 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9D0 PUSH2 0xD3A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA20 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA2A PUSH2 0xD91 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xA95 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA92 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAD6 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACD SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL DUP2 EQ PUSH2 0xB3D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB47 DUP4 DUP4 PUSH2 0xE57 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1B5FC86B82922371DC8E7CB464044750968531A041B9EA4B8CA5BFAC41F8C269 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE DUP2 PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xD1E DUP7 DUP7 PUSH2 0xECA JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD2E DUP3 DUP3 PUSH2 0xF26 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xE16 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xE55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4C SWAP1 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE60 DUP3 PUSH2 0x1094 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xEBD JUMPI PUSH2 0xEB7 DUP3 DUP3 PUSH2 0x1161 JUMP JUMPDEST POP PUSH2 0xEC6 JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x11E5 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0xF0F JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0xF01 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1222 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF3A JUMPI PUSH2 0xF39 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF4D JUMPI PUSH2 0xF4C PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1086 JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF66 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFC5 JUMPI PUSH2 0xFC4 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFD8 JUMPI PUSH2 0xFD7 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x101D JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1014 SWAP2 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0x1D20 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1085 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107C SWAP2 SWAP1 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x10F0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E7 SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x111D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x108A JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x118B SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11C6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x11DB DUP6 DUP4 DUP4 PUSH2 0x1316 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1262 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x130C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1287 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FD JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x130C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x132B JUMPI PUSH2 0x1326 DUP3 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x139D JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1353 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1395 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138C SWAP2 SWAP1 PUSH2 0x184B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x139E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x13B8 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x13FE JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1436 DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP2 EQ PUSH2 0x1441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1453 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146C DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP2 EQ PUSH2 0x1477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1489 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14A8 JUMPI PUSH2 0x14A7 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14C6 JUMPI PUSH2 0x14C5 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x14D2 DUP7 DUP3 DUP8 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1444 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F4 DUP7 DUP3 DUP8 ADD PUSH2 0x147A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1507 DUP2 PUSH2 0x1459 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1522 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x157B DUP3 PUSH2 0x1532 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x159A JUMPI PUSH2 0x1599 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH2 0x13EA JUMP JUMPDEST SWAP1 POP PUSH2 0x15B9 DUP3 DUP3 PUSH2 0x1572 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15D9 JUMPI PUSH2 0x15D8 PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x15E2 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1611 PUSH2 0x160C DUP5 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1638 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1665 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x15FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A1 PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E2 DUP3 PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16F2 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x170F DUP2 PUSH2 0x16E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1730 JUMPI PUSH2 0x172F PUSH2 0x1543 JUMP JUMPDEST JUMPDEST PUSH2 0x1739 DUP3 PUSH2 0x1532 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1759 PUSH2 0x1754 DUP5 PUSH2 0x1715 JUMP JUMPDEST PUSH2 0x15A3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x152D JUMP JUMPDEST JUMPDEST PUSH2 0x1780 DUP5 DUP3 DUP6 PUSH2 0x15EF JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1528 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17AD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1746 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17CD JUMPI PUSH2 0x17CC PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17DB DUP6 DUP3 DUP7 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17FC JUMPI PUSH2 0x17FB PUSH2 0x13F9 JUMP JUMPDEST JUMPDEST PUSH2 0x1808 DUP6 DUP3 DUP7 ADD PUSH2 0x1788 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x181B DUP2 PUSH2 0x1423 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1836 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1845 DUP2 PUSH2 0x16D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1860 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x183C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18A0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1885 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B7 DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0x18C1 DUP2 DUP6 PUSH2 0x1871 JUMP JUMPDEST SWAP4 POP PUSH2 0x18D1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST PUSH2 0x18DA DUP2 PUSH2 0x1532 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18FF DUP2 DUP5 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192C PUSH2 0x1927 PUSH2 0x1922 DUP5 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x16B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x193E DUP3 PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1950 DUP3 PUSH2 0x1933 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1960 DUP2 PUSH2 0x1945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x197B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1957 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A5 DUP5 DUP3 DUP6 ADD PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E4 PUSH1 0x15 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EF DUP3 PUSH2 0x19AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A13 DUP2 PUSH2 0x19D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1A29 DUP2 PUSH2 0x1463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A45 JUMPI PUSH2 0x1A44 PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A53 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A95 PUSH2 0x1A90 PUSH2 0x1A8B DUP5 PUSH2 0x1A5C JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA5 DUP2 PUSH2 0x1A7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AC0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0F PUSH2 0x1B0A PUSH2 0x1B05 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST PUSH2 0x1907 JUMP JUMPDEST PUSH2 0x1AD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1F DUP2 PUSH2 0x1AF4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B3A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x183C JUMP JUMPDEST PUSH2 0x1B47 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6163636F756E743A206E6F742066726F6D20456E747279506F696E7400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B84 PUSH1 0x1C DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B8F DUP3 PUSH2 0x1B4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB3 DUP2 PUSH2 0x1B77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SUB DUP5 CALLDATASIZE SUB SUB DUP2 SLT PUSH2 0x1BE6 JUMPI PUSH2 0x1BE5 PUSH2 0x1BBA JUMP JUMPDEST JUMPDEST DUP1 DUP5 ADD SWAP3 POP DUP3 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x1BBF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x1 DUP3 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x1C24 JUMPI PUSH2 0x1C23 PUSH2 0x1BC4 JUMP JUMPDEST JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C47 PUSH1 0x0 DUP4 PUSH2 0x1C2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C52 DUP3 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C68 DUP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C81 DUP2 PUSH2 0x142D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C9D JUMPI PUSH2 0x1C9C PUSH2 0x13F4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CAB DUP5 DUP3 DUP6 ADD PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6F6E6C79206F776E657200000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CEA PUSH1 0xA DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF5 DUP3 PUSH2 0x1CB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D19 DUP2 PUSH2 0x1CDD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D65 DUP3 PUSH2 0x1D4F JUMP JUMPDEST PUSH2 0x1D6F DUP2 DUP6 PUSH2 0x1C2C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D7F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1882 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D97 DUP3 DUP5 PUSH2 0x1D5A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB8 DUP2 PUSH2 0x1DA2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DD3 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DE0 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DAF JUMP JUMPDEST PUSH2 0x1DED PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x1DFA PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1812 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH4 0x2364E0D5 STOP 0xD0 GAS 0x2D PUSH16 0x3B504352E5CD8030E89619232E5F2A07 0xF8 0xD 0xAE 0xD4 CHAINID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"612:2414:25:-:0;;;821:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;916:11;892:36;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;868:60;;;;;;;;;;821:114;612:2414;;;;;;;;;;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:116::-;625:7;654:24;672:5;654:24;:::i;:::-;643:35;;568:116;;;:::o;690:162::-;783:44;821:5;783:44;:::i;:::-;776:5;773:55;763:83;;842:1;839;832:12;763:83;690:162;:::o;858:183::-;935:5;966:6;960:13;951:22;;982:53;1029:5;982:53;:::i;:::-;858:183;;;;:::o;1047:391::-;1137:6;1186:2;1174:9;1165:7;1161:23;1157:32;1154:119;;;1192:79;;:::i;:::-;1154:119;1312:1;1337:84;1413:7;1404:6;1393:9;1389:22;1337:84;:::i;:::-;1327:94;;1283:148;1047:391;;;;:::o;1444:60::-;1472:3;1493:5;1486:12;;1444:60;;;:::o;1510:142::-;1560:9;1593:53;1611:34;1620:24;1638:5;1620:24;:::i;:::-;1611:34;:::i;:::-;1593:53;:::i;:::-;1580:66;;1510:142;;;:::o;1658:126::-;1708:9;1741:37;1772:5;1741:37;:::i;:::-;1728:50;;1658:126;;;:::o;1790:146::-;1860:9;1893:37;1924:5;1893:37;:::i;:::-;1880:50;;1790:146;;;:::o;1942:171::-;2049:57;2100:5;2049:57;:::i;:::-;2044:3;2037:70;1942:171;;:::o;2119:262::-;2232:4;2270:2;2259:9;2255:18;2247:26;;2283:91;2371:1;2360:9;2356:17;2347:6;2283:91;:::i;:::-;2119:262;;;;:::o;612:2414:25:-;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@accountImplementation_4454":{"entryPoint":494,"id":4454,"parameterSlots":0,"returnSlots":0},"@allDeployedAddress_4457":{"entryPoint":1517,"id":4457,"parameterSlots":0,"returnSlots":0},"@computeAddress_1157":{"entryPoint":1581,"id":1157,"parameterSlots":2,"returnSlots":1},"@computeAddress_1171":{"entryPoint":1604,"id":1171,"parameterSlots":3,"returnSlots":1},"@createAccount_4561":{"entryPoint":530,"id":4561,"parameterSlots":2,"returnSlots":1},"@getAccountAddress_4462":{"entryPoint":415,"id":4462,"parameterSlots":0,"returnSlots":0},"@getAddress_4616":{"entryPoint":1259,"id":4616,"parameterSlots":2,"returnSlots":1},"@getAllAccountWithOwner_4574":{"entryPoint":1052,"id":4574,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1744,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":1803,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2079,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1826,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2371,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":2190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":2173,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1897,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2229,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":2510,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_SmartContractWallet_$4445_to_t_address_payable_fromStack":{"entryPoint":2033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2693,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":2575,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_SmartContractWallet_$4445__to_t_address_payable__fromStack_reversed":{"entryPoint":2050,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2157,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2129,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2421,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2216,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2140,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":2432,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2627,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1698,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1666,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1767,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_SmartContractWallet_$4445_to_t_address_payable":{"entryPoint":2013,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address_payable":{"entryPoint":1993,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":1953,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2449,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":1943,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1661,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2493,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1718,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1777,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8168:26","nodeType":"YulBlock","src":"0:8168:26","statements":[{"body":{"nativeSrc":"47:35:26","nodeType":"YulBlock","src":"47:35:26","statements":[{"nativeSrc":"57:19:26","nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:26","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:26","nodeType":"YulIdentifier","src":"67:5:26"},"nativeSrc":"67:9:26","nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:26","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:26","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:26","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nativeSrc":"177:28:26","nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:26","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:26","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:26","nodeType":"YulIdentifier","src":"187:6:26"},"nativeSrc":"187:12:26","nodeType":"YulFunctionCall","src":"187:12:26"},"nativeSrc":"187:12:26","nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:26","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nativeSrc":"300:28:26","nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:26","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:26","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:26","nodeType":"YulIdentifier","src":"310:6:26"},"nativeSrc":"310:12:26","nodeType":"YulFunctionCall","src":"310:12:26"},"nativeSrc":"310:12:26","nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:26","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nativeSrc":"379:81:26","nodeType":"YulBlock","src":"379:81:26","statements":[{"nativeSrc":"389:65:26","nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nativeSrc":"404:5:26","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nativeSrc":"411:42:26","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:26","nodeType":"YulIdentifier","src":"400:3:26"},"nativeSrc":"400:54:26","nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:26","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:26","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:26","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nativeSrc":"511:51:26","nodeType":"YulBlock","src":"511:51:26","statements":[{"nativeSrc":"521:35:26","nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nativeSrc":"550:5:26","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:26","nodeType":"YulIdentifier","src":"532:17:26"},"nativeSrc":"532:24:26","nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:26","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:26","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:26","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nativeSrc":"611:79:26","nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nativeSrc":"668:16:26","nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:26","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:26","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:26","nodeType":"YulIdentifier","src":"670:6:26"},"nativeSrc":"670:12:26","nodeType":"YulFunctionCall","src":"670:12:26"},"nativeSrc":"670:12:26","nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:26","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nativeSrc":"659:5:26","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:26","nodeType":"YulIdentifier","src":"641:17:26"},"nativeSrc":"641:24:26","nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nativeSrc":"631:2:26","nodeType":"YulIdentifier","src":"631:2:26"},"nativeSrc":"631:35:26","nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nativeSrc":"624:6:26","nodeType":"YulIdentifier","src":"624:6:26"},"nativeSrc":"624:43:26","nodeType":"YulFunctionCall","src":"624:43:26"},"nativeSrc":"621:63:26","nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:26","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nativeSrc":"748:87:26","nodeType":"YulBlock","src":"748:87:26","statements":[{"nativeSrc":"758:29:26","nodeType":"YulAssignment","src":"758:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:26","nodeType":"YulIdentifier","src":"780:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:26","nodeType":"YulIdentifier","src":"767:12:26"},"nativeSrc":"767:20:26","nodeType":"YulFunctionCall","src":"767:20:26"},"variableNames":[{"name":"value","nativeSrc":"758:5:26","nodeType":"YulIdentifier","src":"758:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:26","nodeType":"YulIdentifier","src":"823:5:26"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:26","nodeType":"YulIdentifier","src":"796:26:26"},"nativeSrc":"796:33:26","nodeType":"YulFunctionCall","src":"796:33:26"},"nativeSrc":"796:33:26","nodeType":"YulExpressionStatement","src":"796:33:26"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:26","nodeType":"YulTypedName","src":"726:6:26","type":""},{"name":"end","nativeSrc":"734:3:26","nodeType":"YulTypedName","src":"734:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:26","nodeType":"YulTypedName","src":"742:5:26","type":""}],"src":"696:139:26"},{"body":{"nativeSrc":"886:32:26","nodeType":"YulBlock","src":"886:32:26","statements":[{"nativeSrc":"896:16:26","nodeType":"YulAssignment","src":"896:16:26","value":{"name":"value","nativeSrc":"907:5:26","nodeType":"YulIdentifier","src":"907:5:26"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:26","nodeType":"YulIdentifier","src":"896:7:26"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:26","nodeType":"YulTypedName","src":"868:5:26","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:26","nodeType":"YulTypedName","src":"878:7:26","type":""}],"src":"841:77:26"},{"body":{"nativeSrc":"967:79:26","nodeType":"YulBlock","src":"967:79:26","statements":[{"body":{"nativeSrc":"1024:16:26","nodeType":"YulBlock","src":"1024:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:26","nodeType":"YulLiteral","src":"1033:1:26","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:26","nodeType":"YulLiteral","src":"1036:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:26","nodeType":"YulIdentifier","src":"1026:6:26"},"nativeSrc":"1026:12:26","nodeType":"YulFunctionCall","src":"1026:12:26"},"nativeSrc":"1026:12:26","nodeType":"YulExpressionStatement","src":"1026:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:26","nodeType":"YulIdentifier","src":"990:5:26"},{"arguments":[{"name":"value","nativeSrc":"1015:5:26","nodeType":"YulIdentifier","src":"1015:5:26"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:26","nodeType":"YulIdentifier","src":"997:17:26"},"nativeSrc":"997:24:26","nodeType":"YulFunctionCall","src":"997:24:26"}],"functionName":{"name":"eq","nativeSrc":"987:2:26","nodeType":"YulIdentifier","src":"987:2:26"},"nativeSrc":"987:35:26","nodeType":"YulFunctionCall","src":"987:35:26"}],"functionName":{"name":"iszero","nativeSrc":"980:6:26","nodeType":"YulIdentifier","src":"980:6:26"},"nativeSrc":"980:43:26","nodeType":"YulFunctionCall","src":"980:43:26"},"nativeSrc":"977:63:26","nodeType":"YulIf","src":"977:63:26"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:26","nodeType":"YulTypedName","src":"960:5:26","type":""}],"src":"924:122:26"},{"body":{"nativeSrc":"1104:87:26","nodeType":"YulBlock","src":"1104:87:26","statements":[{"nativeSrc":"1114:29:26","nodeType":"YulAssignment","src":"1114:29:26","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:26","nodeType":"YulIdentifier","src":"1136:6:26"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:26","nodeType":"YulIdentifier","src":"1123:12:26"},"nativeSrc":"1123:20:26","nodeType":"YulFunctionCall","src":"1123:20:26"},"variableNames":[{"name":"value","nativeSrc":"1114:5:26","nodeType":"YulIdentifier","src":"1114:5:26"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:26","nodeType":"YulIdentifier","src":"1179:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:26","nodeType":"YulIdentifier","src":"1152:26:26"},"nativeSrc":"1152:33:26","nodeType":"YulFunctionCall","src":"1152:33:26"},"nativeSrc":"1152:33:26","nodeType":"YulExpressionStatement","src":"1152:33:26"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:26","nodeType":"YulTypedName","src":"1082:6:26","type":""},{"name":"end","nativeSrc":"1090:3:26","nodeType":"YulTypedName","src":"1090:3:26","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:26","nodeType":"YulTypedName","src":"1098:5:26","type":""}],"src":"1052:139:26"},{"body":{"nativeSrc":"1280:391:26","nodeType":"YulBlock","src":"1280:391:26","statements":[{"body":{"nativeSrc":"1326:83:26","nodeType":"YulBlock","src":"1326:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:26","nodeType":"YulIdentifier","src":"1328:77:26"},"nativeSrc":"1328:79:26","nodeType":"YulFunctionCall","src":"1328:79:26"},"nativeSrc":"1328:79:26","nodeType":"YulExpressionStatement","src":"1328:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:26","nodeType":"YulIdentifier","src":"1301:7:26"},{"name":"headStart","nativeSrc":"1310:9:26","nodeType":"YulIdentifier","src":"1310:9:26"}],"functionName":{"name":"sub","nativeSrc":"1297:3:26","nodeType":"YulIdentifier","src":"1297:3:26"},"nativeSrc":"1297:23:26","nodeType":"YulFunctionCall","src":"1297:23:26"},{"kind":"number","nativeSrc":"1322:2:26","nodeType":"YulLiteral","src":"1322:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:26","nodeType":"YulIdentifier","src":"1293:3:26"},"nativeSrc":"1293:32:26","nodeType":"YulFunctionCall","src":"1293:32:26"},"nativeSrc":"1290:119:26","nodeType":"YulIf","src":"1290:119:26"},{"nativeSrc":"1419:117:26","nodeType":"YulBlock","src":"1419:117:26","statements":[{"nativeSrc":"1434:15:26","nodeType":"YulVariableDeclaration","src":"1434:15:26","value":{"kind":"number","nativeSrc":"1448:1:26","nodeType":"YulLiteral","src":"1448:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:26","nodeType":"YulTypedName","src":"1438:6:26","type":""}]},{"nativeSrc":"1463:63:26","nodeType":"YulAssignment","src":"1463:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:26","nodeType":"YulIdentifier","src":"1498:9:26"},{"name":"offset","nativeSrc":"1509:6:26","nodeType":"YulIdentifier","src":"1509:6:26"}],"functionName":{"name":"add","nativeSrc":"1494:3:26","nodeType":"YulIdentifier","src":"1494:3:26"},"nativeSrc":"1494:22:26","nodeType":"YulFunctionCall","src":"1494:22:26"},{"name":"dataEnd","nativeSrc":"1518:7:26","nodeType":"YulIdentifier","src":"1518:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:26","nodeType":"YulIdentifier","src":"1473:20:26"},"nativeSrc":"1473:53:26","nodeType":"YulFunctionCall","src":"1473:53:26"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:26","nodeType":"YulIdentifier","src":"1463:6:26"}]}]},{"nativeSrc":"1546:118:26","nodeType":"YulBlock","src":"1546:118:26","statements":[{"nativeSrc":"1561:16:26","nodeType":"YulVariableDeclaration","src":"1561:16:26","value":{"kind":"number","nativeSrc":"1575:2:26","nodeType":"YulLiteral","src":"1575:2:26","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:26","nodeType":"YulTypedName","src":"1565:6:26","type":""}]},{"nativeSrc":"1591:63:26","nodeType":"YulAssignment","src":"1591:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:26","nodeType":"YulIdentifier","src":"1626:9:26"},{"name":"offset","nativeSrc":"1637:6:26","nodeType":"YulIdentifier","src":"1637:6:26"}],"functionName":{"name":"add","nativeSrc":"1622:3:26","nodeType":"YulIdentifier","src":"1622:3:26"},"nativeSrc":"1622:22:26","nodeType":"YulFunctionCall","src":"1622:22:26"},{"name":"dataEnd","nativeSrc":"1646:7:26","nodeType":"YulIdentifier","src":"1646:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:26","nodeType":"YulIdentifier","src":"1601:20:26"},"nativeSrc":"1601:53:26","nodeType":"YulFunctionCall","src":"1601:53:26"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:26","nodeType":"YulIdentifier","src":"1591:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:26","nodeType":"YulTypedName","src":"1242:9:26","type":""},{"name":"dataEnd","nativeSrc":"1253:7:26","nodeType":"YulTypedName","src":"1253:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:26","nodeType":"YulTypedName","src":"1265:6:26","type":""},{"name":"value1","nativeSrc":"1273:6:26","nodeType":"YulTypedName","src":"1273:6:26","type":""}],"src":"1197:474:26"},{"body":{"nativeSrc":"1742:53:26","nodeType":"YulBlock","src":"1742:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:26","nodeType":"YulIdentifier","src":"1759:3:26"},{"arguments":[{"name":"value","nativeSrc":"1782:5:26","nodeType":"YulIdentifier","src":"1782:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1764:17:26","nodeType":"YulIdentifier","src":"1764:17:26"},"nativeSrc":"1764:24:26","nodeType":"YulFunctionCall","src":"1764:24:26"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:26","nodeType":"YulIdentifier","src":"1752:6:26"},"nativeSrc":"1752:37:26","nodeType":"YulFunctionCall","src":"1752:37:26"},"nativeSrc":"1752:37:26","nodeType":"YulExpressionStatement","src":"1752:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1677:118:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:26","nodeType":"YulTypedName","src":"1730:5:26","type":""},{"name":"pos","nativeSrc":"1737:3:26","nodeType":"YulTypedName","src":"1737:3:26","type":""}],"src":"1677:118:26"},{"body":{"nativeSrc":"1899:124:26","nodeType":"YulBlock","src":"1899:124:26","statements":[{"nativeSrc":"1909:26:26","nodeType":"YulAssignment","src":"1909:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:26","nodeType":"YulIdentifier","src":"1921:9:26"},{"kind":"number","nativeSrc":"1932:2:26","nodeType":"YulLiteral","src":"1932:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:26","nodeType":"YulIdentifier","src":"1917:3:26"},"nativeSrc":"1917:18:26","nodeType":"YulFunctionCall","src":"1917:18:26"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:26","nodeType":"YulIdentifier","src":"1909:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:26","nodeType":"YulIdentifier","src":"1989:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:26","nodeType":"YulIdentifier","src":"2002:9:26"},{"kind":"number","nativeSrc":"2013:1:26","nodeType":"YulLiteral","src":"2013:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:26","nodeType":"YulIdentifier","src":"1998:3:26"},"nativeSrc":"1998:17:26","nodeType":"YulFunctionCall","src":"1998:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1945:43:26","nodeType":"YulIdentifier","src":"1945:43:26"},"nativeSrc":"1945:71:26","nodeType":"YulFunctionCall","src":"1945:71:26"},"nativeSrc":"1945:71:26","nodeType":"YulExpressionStatement","src":"1945:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1801:222:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:26","nodeType":"YulTypedName","src":"1871:9:26","type":""},{"name":"value0","nativeSrc":"1883:6:26","nodeType":"YulTypedName","src":"1883:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:26","nodeType":"YulTypedName","src":"1894:4:26","type":""}],"src":"1801:222:26"},{"body":{"nativeSrc":"2061:28:26","nodeType":"YulBlock","src":"2061:28:26","statements":[{"nativeSrc":"2071:12:26","nodeType":"YulAssignment","src":"2071:12:26","value":{"name":"value","nativeSrc":"2078:5:26","nodeType":"YulIdentifier","src":"2078:5:26"},"variableNames":[{"name":"ret","nativeSrc":"2071:3:26","nodeType":"YulIdentifier","src":"2071:3:26"}]}]},"name":"identity","nativeSrc":"2029:60:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2047:5:26","nodeType":"YulTypedName","src":"2047:5:26","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2057:3:26","nodeType":"YulTypedName","src":"2057:3:26","type":""}],"src":"2029:60:26"},{"body":{"nativeSrc":"2155:82:26","nodeType":"YulBlock","src":"2155:82:26","statements":[{"nativeSrc":"2165:66:26","nodeType":"YulAssignment","src":"2165:66:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2223:5:26","nodeType":"YulIdentifier","src":"2223:5:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2205:17:26","nodeType":"YulIdentifier","src":"2205:17:26"},"nativeSrc":"2205:24:26","nodeType":"YulFunctionCall","src":"2205:24:26"}],"functionName":{"name":"identity","nativeSrc":"2196:8:26","nodeType":"YulIdentifier","src":"2196:8:26"},"nativeSrc":"2196:34:26","nodeType":"YulFunctionCall","src":"2196:34:26"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2178:17:26","nodeType":"YulIdentifier","src":"2178:17:26"},"nativeSrc":"2178:53:26","nodeType":"YulFunctionCall","src":"2178:53:26"},"variableNames":[{"name":"converted","nativeSrc":"2165:9:26","nodeType":"YulIdentifier","src":"2165:9:26"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2095:142:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2135:5:26","nodeType":"YulTypedName","src":"2135:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2145:9:26","nodeType":"YulTypedName","src":"2145:9:26","type":""}],"src":"2095:142:26"},{"body":{"nativeSrc":"2311:66:26","nodeType":"YulBlock","src":"2311:66:26","statements":[{"nativeSrc":"2321:50:26","nodeType":"YulAssignment","src":"2321:50:26","value":{"arguments":[{"name":"value","nativeSrc":"2365:5:26","nodeType":"YulIdentifier","src":"2365:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"2334:30:26","nodeType":"YulIdentifier","src":"2334:30:26"},"nativeSrc":"2334:37:26","nodeType":"YulFunctionCall","src":"2334:37:26"},"variableNames":[{"name":"converted","nativeSrc":"2321:9:26","nodeType":"YulIdentifier","src":"2321:9:26"}]}]},"name":"convert_t_uint160_to_t_address_payable","nativeSrc":"2243:134:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2291:5:26","nodeType":"YulTypedName","src":"2291:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2301:9:26","nodeType":"YulTypedName","src":"2301:9:26","type":""}],"src":"2243:134:26"},{"body":{"nativeSrc":"2479:74:26","nodeType":"YulBlock","src":"2479:74:26","statements":[{"nativeSrc":"2489:58:26","nodeType":"YulAssignment","src":"2489:58:26","value":{"arguments":[{"name":"value","nativeSrc":"2541:5:26","nodeType":"YulIdentifier","src":"2541:5:26"}],"functionName":{"name":"convert_t_uint160_to_t_address_payable","nativeSrc":"2502:38:26","nodeType":"YulIdentifier","src":"2502:38:26"},"nativeSrc":"2502:45:26","nodeType":"YulFunctionCall","src":"2502:45:26"},"variableNames":[{"name":"converted","nativeSrc":"2489:9:26","nodeType":"YulIdentifier","src":"2489:9:26"}]}]},"name":"convert_t_contract$_SmartContractWallet_$4445_to_t_address_payable","nativeSrc":"2383:170:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2459:5:26","nodeType":"YulTypedName","src":"2459:5:26","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"2469:9:26","nodeType":"YulTypedName","src":"2469:9:26","type":""}],"src":"2383:170:26"},{"body":{"nativeSrc":"2660:102:26","nodeType":"YulBlock","src":"2660:102:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2677:3:26","nodeType":"YulIdentifier","src":"2677:3:26"},{"arguments":[{"name":"value","nativeSrc":"2749:5:26","nodeType":"YulIdentifier","src":"2749:5:26"}],"functionName":{"name":"convert_t_contract$_SmartContractWallet_$4445_to_t_address_payable","nativeSrc":"2682:66:26","nodeType":"YulIdentifier","src":"2682:66:26"},"nativeSrc":"2682:73:26","nodeType":"YulFunctionCall","src":"2682:73:26"}],"functionName":{"name":"mstore","nativeSrc":"2670:6:26","nodeType":"YulIdentifier","src":"2670:6:26"},"nativeSrc":"2670:86:26","nodeType":"YulFunctionCall","src":"2670:86:26"},"nativeSrc":"2670:86:26","nodeType":"YulExpressionStatement","src":"2670:86:26"}]},"name":"abi_encode_t_contract$_SmartContractWallet_$4445_to_t_address_payable_fromStack","nativeSrc":"2559:203:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2648:5:26","nodeType":"YulTypedName","src":"2648:5:26","type":""},{"name":"pos","nativeSrc":"2655:3:26","nodeType":"YulTypedName","src":"2655:3:26","type":""}],"src":"2559:203:26"},{"body":{"nativeSrc":"2902:160:26","nodeType":"YulBlock","src":"2902:160:26","statements":[{"nativeSrc":"2912:26:26","nodeType":"YulAssignment","src":"2912:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"2924:9:26","nodeType":"YulIdentifier","src":"2924:9:26"},{"kind":"number","nativeSrc":"2935:2:26","nodeType":"YulLiteral","src":"2935:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2920:3:26","nodeType":"YulIdentifier","src":"2920:3:26"},"nativeSrc":"2920:18:26","nodeType":"YulFunctionCall","src":"2920:18:26"},"variableNames":[{"name":"tail","nativeSrc":"2912:4:26","nodeType":"YulIdentifier","src":"2912:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3028:6:26","nodeType":"YulIdentifier","src":"3028:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"3041:9:26","nodeType":"YulIdentifier","src":"3041:9:26"},{"kind":"number","nativeSrc":"3052:1:26","nodeType":"YulLiteral","src":"3052:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3037:3:26","nodeType":"YulIdentifier","src":"3037:3:26"},"nativeSrc":"3037:17:26","nodeType":"YulFunctionCall","src":"3037:17:26"}],"functionName":{"name":"abi_encode_t_contract$_SmartContractWallet_$4445_to_t_address_payable_fromStack","nativeSrc":"2948:79:26","nodeType":"YulIdentifier","src":"2948:79:26"},"nativeSrc":"2948:107:26","nodeType":"YulFunctionCall","src":"2948:107:26"},"nativeSrc":"2948:107:26","nodeType":"YulExpressionStatement","src":"2948:107:26"}]},"name":"abi_encode_tuple_t_contract$_SmartContractWallet_$4445__to_t_address_payable__fromStack_reversed","nativeSrc":"2768:294:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2874:9:26","nodeType":"YulTypedName","src":"2874:9:26","type":""},{"name":"value0","nativeSrc":"2886:6:26","nodeType":"YulTypedName","src":"2886:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2897:4:26","nodeType":"YulTypedName","src":"2897:4:26","type":""}],"src":"2768:294:26"},{"body":{"nativeSrc":"3134:263:26","nodeType":"YulBlock","src":"3134:263:26","statements":[{"body":{"nativeSrc":"3180:83:26","nodeType":"YulBlock","src":"3180:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3182:77:26","nodeType":"YulIdentifier","src":"3182:77:26"},"nativeSrc":"3182:79:26","nodeType":"YulFunctionCall","src":"3182:79:26"},"nativeSrc":"3182:79:26","nodeType":"YulExpressionStatement","src":"3182:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3155:7:26","nodeType":"YulIdentifier","src":"3155:7:26"},{"name":"headStart","nativeSrc":"3164:9:26","nodeType":"YulIdentifier","src":"3164:9:26"}],"functionName":{"name":"sub","nativeSrc":"3151:3:26","nodeType":"YulIdentifier","src":"3151:3:26"},"nativeSrc":"3151:23:26","nodeType":"YulFunctionCall","src":"3151:23:26"},{"kind":"number","nativeSrc":"3176:2:26","nodeType":"YulLiteral","src":"3176:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3147:3:26","nodeType":"YulIdentifier","src":"3147:3:26"},"nativeSrc":"3147:32:26","nodeType":"YulFunctionCall","src":"3147:32:26"},"nativeSrc":"3144:119:26","nodeType":"YulIf","src":"3144:119:26"},{"nativeSrc":"3273:117:26","nodeType":"YulBlock","src":"3273:117:26","statements":[{"nativeSrc":"3288:15:26","nodeType":"YulVariableDeclaration","src":"3288:15:26","value":{"kind":"number","nativeSrc":"3302:1:26","nodeType":"YulLiteral","src":"3302:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3292:6:26","nodeType":"YulTypedName","src":"3292:6:26","type":""}]},{"nativeSrc":"3317:63:26","nodeType":"YulAssignment","src":"3317:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3352:9:26","nodeType":"YulIdentifier","src":"3352:9:26"},{"name":"offset","nativeSrc":"3363:6:26","nodeType":"YulIdentifier","src":"3363:6:26"}],"functionName":{"name":"add","nativeSrc":"3348:3:26","nodeType":"YulIdentifier","src":"3348:3:26"},"nativeSrc":"3348:22:26","nodeType":"YulFunctionCall","src":"3348:22:26"},{"name":"dataEnd","nativeSrc":"3372:7:26","nodeType":"YulIdentifier","src":"3372:7:26"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3327:20:26","nodeType":"YulIdentifier","src":"3327:20:26"},"nativeSrc":"3327:53:26","nodeType":"YulFunctionCall","src":"3327:53:26"},"variableNames":[{"name":"value0","nativeSrc":"3317:6:26","nodeType":"YulIdentifier","src":"3317:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3068:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3104:9:26","nodeType":"YulTypedName","src":"3104:9:26","type":""},{"name":"dataEnd","nativeSrc":"3115:7:26","nodeType":"YulTypedName","src":"3115:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3127:6:26","nodeType":"YulTypedName","src":"3127:6:26","type":""}],"src":"3068:329:26"},{"body":{"nativeSrc":"3477:40:26","nodeType":"YulBlock","src":"3477:40:26","statements":[{"nativeSrc":"3488:22:26","nodeType":"YulAssignment","src":"3488:22:26","value":{"arguments":[{"name":"value","nativeSrc":"3504:5:26","nodeType":"YulIdentifier","src":"3504:5:26"}],"functionName":{"name":"mload","nativeSrc":"3498:5:26","nodeType":"YulIdentifier","src":"3498:5:26"},"nativeSrc":"3498:12:26","nodeType":"YulFunctionCall","src":"3498:12:26"},"variableNames":[{"name":"length","nativeSrc":"3488:6:26","nodeType":"YulIdentifier","src":"3488:6:26"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"3403:114:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3460:5:26","nodeType":"YulTypedName","src":"3460:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3470:6:26","nodeType":"YulTypedName","src":"3470:6:26","type":""}],"src":"3403:114:26"},{"body":{"nativeSrc":"3634:73:26","nodeType":"YulBlock","src":"3634:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3651:3:26","nodeType":"YulIdentifier","src":"3651:3:26"},{"name":"length","nativeSrc":"3656:6:26","nodeType":"YulIdentifier","src":"3656:6:26"}],"functionName":{"name":"mstore","nativeSrc":"3644:6:26","nodeType":"YulIdentifier","src":"3644:6:26"},"nativeSrc":"3644:19:26","nodeType":"YulFunctionCall","src":"3644:19:26"},"nativeSrc":"3644:19:26","nodeType":"YulExpressionStatement","src":"3644:19:26"},{"nativeSrc":"3672:29:26","nodeType":"YulAssignment","src":"3672:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"3691:3:26","nodeType":"YulIdentifier","src":"3691:3:26"},{"kind":"number","nativeSrc":"3696:4:26","nodeType":"YulLiteral","src":"3696:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3687:3:26","nodeType":"YulIdentifier","src":"3687:3:26"},"nativeSrc":"3687:14:26","nodeType":"YulFunctionCall","src":"3687:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"3672:11:26","nodeType":"YulIdentifier","src":"3672:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"3523:184:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3606:3:26","nodeType":"YulTypedName","src":"3606:3:26","type":""},{"name":"length","nativeSrc":"3611:6:26","nodeType":"YulTypedName","src":"3611:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3622:11:26","nodeType":"YulTypedName","src":"3622:11:26","type":""}],"src":"3523:184:26"},{"body":{"nativeSrc":"3785:60:26","nodeType":"YulBlock","src":"3785:60:26","statements":[{"nativeSrc":"3795:11:26","nodeType":"YulAssignment","src":"3795:11:26","value":{"name":"ptr","nativeSrc":"3803:3:26","nodeType":"YulIdentifier","src":"3803:3:26"},"variableNames":[{"name":"data","nativeSrc":"3795:4:26","nodeType":"YulIdentifier","src":"3795:4:26"}]},{"nativeSrc":"3816:22:26","nodeType":"YulAssignment","src":"3816:22:26","value":{"arguments":[{"name":"ptr","nativeSrc":"3828:3:26","nodeType":"YulIdentifier","src":"3828:3:26"},{"kind":"number","nativeSrc":"3833:4:26","nodeType":"YulLiteral","src":"3833:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3824:3:26","nodeType":"YulIdentifier","src":"3824:3:26"},"nativeSrc":"3824:14:26","nodeType":"YulFunctionCall","src":"3824:14:26"},"variableNames":[{"name":"data","nativeSrc":"3816:4:26","nodeType":"YulIdentifier","src":"3816:4:26"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"3713:132:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"3772:3:26","nodeType":"YulTypedName","src":"3772:3:26","type":""}],"returnVariables":[{"name":"data","nativeSrc":"3780:4:26","nodeType":"YulTypedName","src":"3780:4:26","type":""}],"src":"3713:132:26"},{"body":{"nativeSrc":"3906:53:26","nodeType":"YulBlock","src":"3906:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3923:3:26","nodeType":"YulIdentifier","src":"3923:3:26"},{"arguments":[{"name":"value","nativeSrc":"3946:5:26","nodeType":"YulIdentifier","src":"3946:5:26"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3928:17:26","nodeType":"YulIdentifier","src":"3928:17:26"},"nativeSrc":"3928:24:26","nodeType":"YulFunctionCall","src":"3928:24:26"}],"functionName":{"name":"mstore","nativeSrc":"3916:6:26","nodeType":"YulIdentifier","src":"3916:6:26"},"nativeSrc":"3916:37:26","nodeType":"YulFunctionCall","src":"3916:37:26"},"nativeSrc":"3916:37:26","nodeType":"YulExpressionStatement","src":"3916:37:26"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"3851:108:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3894:5:26","nodeType":"YulTypedName","src":"3894:5:26","type":""},{"name":"pos","nativeSrc":"3901:3:26","nodeType":"YulTypedName","src":"3901:3:26","type":""}],"src":"3851:108:26"},{"body":{"nativeSrc":"4045:99:26","nodeType":"YulBlock","src":"4045:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"4089:6:26","nodeType":"YulIdentifier","src":"4089:6:26"},{"name":"pos","nativeSrc":"4097:3:26","nodeType":"YulIdentifier","src":"4097:3:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"4055:33:26","nodeType":"YulIdentifier","src":"4055:33:26"},"nativeSrc":"4055:46:26","nodeType":"YulFunctionCall","src":"4055:46:26"},"nativeSrc":"4055:46:26","nodeType":"YulExpressionStatement","src":"4055:46:26"},{"nativeSrc":"4110:28:26","nodeType":"YulAssignment","src":"4110:28:26","value":{"arguments":[{"name":"pos","nativeSrc":"4128:3:26","nodeType":"YulIdentifier","src":"4128:3:26"},{"kind":"number","nativeSrc":"4133:4:26","nodeType":"YulLiteral","src":"4133:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4124:3:26","nodeType":"YulIdentifier","src":"4124:3:26"},"nativeSrc":"4124:14:26","nodeType":"YulFunctionCall","src":"4124:14:26"},"variableNames":[{"name":"updatedPos","nativeSrc":"4110:10:26","nodeType":"YulIdentifier","src":"4110:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"3965:179:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"4018:6:26","nodeType":"YulTypedName","src":"4018:6:26","type":""},{"name":"pos","nativeSrc":"4026:3:26","nodeType":"YulTypedName","src":"4026:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"4034:10:26","nodeType":"YulTypedName","src":"4034:10:26","type":""}],"src":"3965:179:26"},{"body":{"nativeSrc":"4225:38:26","nodeType":"YulBlock","src":"4225:38:26","statements":[{"nativeSrc":"4235:22:26","nodeType":"YulAssignment","src":"4235:22:26","value":{"arguments":[{"name":"ptr","nativeSrc":"4247:3:26","nodeType":"YulIdentifier","src":"4247:3:26"},{"kind":"number","nativeSrc":"4252:4:26","nodeType":"YulLiteral","src":"4252:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4243:3:26","nodeType":"YulIdentifier","src":"4243:3:26"},"nativeSrc":"4243:14:26","nodeType":"YulFunctionCall","src":"4243:14:26"},"variableNames":[{"name":"next","nativeSrc":"4235:4:26","nodeType":"YulIdentifier","src":"4235:4:26"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4150:113:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4212:3:26","nodeType":"YulTypedName","src":"4212:3:26","type":""}],"returnVariables":[{"name":"next","nativeSrc":"4220:4:26","nodeType":"YulTypedName","src":"4220:4:26","type":""}],"src":"4150:113:26"},{"body":{"nativeSrc":"4423:608:26","nodeType":"YulBlock","src":"4423:608:26","statements":[{"nativeSrc":"4433:68:26","nodeType":"YulVariableDeclaration","src":"4433:68:26","value":{"arguments":[{"name":"value","nativeSrc":"4495:5:26","nodeType":"YulIdentifier","src":"4495:5:26"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4447:47:26","nodeType":"YulIdentifier","src":"4447:47:26"},"nativeSrc":"4447:54:26","nodeType":"YulFunctionCall","src":"4447:54:26"},"variables":[{"name":"length","nativeSrc":"4437:6:26","nodeType":"YulTypedName","src":"4437:6:26","type":""}]},{"nativeSrc":"4510:93:26","nodeType":"YulAssignment","src":"4510:93:26","value":{"arguments":[{"name":"pos","nativeSrc":"4591:3:26","nodeType":"YulIdentifier","src":"4591:3:26"},{"name":"length","nativeSrc":"4596:6:26","nodeType":"YulIdentifier","src":"4596:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"4517:73:26","nodeType":"YulIdentifier","src":"4517:73:26"},"nativeSrc":"4517:86:26","nodeType":"YulFunctionCall","src":"4517:86:26"},"variableNames":[{"name":"pos","nativeSrc":"4510:3:26","nodeType":"YulIdentifier","src":"4510:3:26"}]},{"nativeSrc":"4612:71:26","nodeType":"YulVariableDeclaration","src":"4612:71:26","value":{"arguments":[{"name":"value","nativeSrc":"4677:5:26","nodeType":"YulIdentifier","src":"4677:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4627:49:26","nodeType":"YulIdentifier","src":"4627:49:26"},"nativeSrc":"4627:56:26","nodeType":"YulFunctionCall","src":"4627:56:26"},"variables":[{"name":"baseRef","nativeSrc":"4616:7:26","nodeType":"YulTypedName","src":"4616:7:26","type":""}]},{"nativeSrc":"4692:21:26","nodeType":"YulVariableDeclaration","src":"4692:21:26","value":{"name":"baseRef","nativeSrc":"4706:7:26","nodeType":"YulIdentifier","src":"4706:7:26"},"variables":[{"name":"srcPtr","nativeSrc":"4696:6:26","nodeType":"YulTypedName","src":"4696:6:26","type":""}]},{"body":{"nativeSrc":"4782:224:26","nodeType":"YulBlock","src":"4782:224:26","statements":[{"nativeSrc":"4796:34:26","nodeType":"YulVariableDeclaration","src":"4796:34:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4823:6:26","nodeType":"YulIdentifier","src":"4823:6:26"}],"functionName":{"name":"mload","nativeSrc":"4817:5:26","nodeType":"YulIdentifier","src":"4817:5:26"},"nativeSrc":"4817:13:26","nodeType":"YulFunctionCall","src":"4817:13:26"},"variables":[{"name":"elementValue0","nativeSrc":"4800:13:26","nodeType":"YulTypedName","src":"4800:13:26","type":""}]},{"nativeSrc":"4843:70:26","nodeType":"YulAssignment","src":"4843:70:26","value":{"arguments":[{"name":"elementValue0","nativeSrc":"4894:13:26","nodeType":"YulIdentifier","src":"4894:13:26"},{"name":"pos","nativeSrc":"4909:3:26","nodeType":"YulIdentifier","src":"4909:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"4850:43:26","nodeType":"YulIdentifier","src":"4850:43:26"},"nativeSrc":"4850:63:26","nodeType":"YulFunctionCall","src":"4850:63:26"},"variableNames":[{"name":"pos","nativeSrc":"4843:3:26","nodeType":"YulIdentifier","src":"4843:3:26"}]},{"nativeSrc":"4926:70:26","nodeType":"YulAssignment","src":"4926:70:26","value":{"arguments":[{"name":"srcPtr","nativeSrc":"4989:6:26","nodeType":"YulIdentifier","src":"4989:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4936:52:26","nodeType":"YulIdentifier","src":"4936:52:26"},"nativeSrc":"4936:60:26","nodeType":"YulFunctionCall","src":"4936:60:26"},"variableNames":[{"name":"srcPtr","nativeSrc":"4926:6:26","nodeType":"YulIdentifier","src":"4926:6:26"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4744:1:26","nodeType":"YulIdentifier","src":"4744:1:26"},{"name":"length","nativeSrc":"4747:6:26","nodeType":"YulIdentifier","src":"4747:6:26"}],"functionName":{"name":"lt","nativeSrc":"4741:2:26","nodeType":"YulIdentifier","src":"4741:2:26"},"nativeSrc":"4741:13:26","nodeType":"YulFunctionCall","src":"4741:13:26"},"nativeSrc":"4722:284:26","nodeType":"YulForLoop","post":{"nativeSrc":"4755:18:26","nodeType":"YulBlock","src":"4755:18:26","statements":[{"nativeSrc":"4757:14:26","nodeType":"YulAssignment","src":"4757:14:26","value":{"arguments":[{"name":"i","nativeSrc":"4766:1:26","nodeType":"YulIdentifier","src":"4766:1:26"},{"kind":"number","nativeSrc":"4769:1:26","nodeType":"YulLiteral","src":"4769:1:26","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4762:3:26","nodeType":"YulIdentifier","src":"4762:3:26"},"nativeSrc":"4762:9:26","nodeType":"YulFunctionCall","src":"4762:9:26"},"variableNames":[{"name":"i","nativeSrc":"4757:1:26","nodeType":"YulIdentifier","src":"4757:1:26"}]}]},"pre":{"nativeSrc":"4726:14:26","nodeType":"YulBlock","src":"4726:14:26","statements":[{"nativeSrc":"4728:10:26","nodeType":"YulVariableDeclaration","src":"4728:10:26","value":{"kind":"number","nativeSrc":"4737:1:26","nodeType":"YulLiteral","src":"4737:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4732:1:26","nodeType":"YulTypedName","src":"4732:1:26","type":""}]}]},"src":"4722:284:26"},{"nativeSrc":"5015:10:26","nodeType":"YulAssignment","src":"5015:10:26","value":{"name":"pos","nativeSrc":"5022:3:26","nodeType":"YulIdentifier","src":"5022:3:26"},"variableNames":[{"name":"end","nativeSrc":"5015:3:26","nodeType":"YulIdentifier","src":"5015:3:26"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"4299:732:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4402:5:26","nodeType":"YulTypedName","src":"4402:5:26","type":""},{"name":"pos","nativeSrc":"4409:3:26","nodeType":"YulTypedName","src":"4409:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4418:3:26","nodeType":"YulTypedName","src":"4418:3:26","type":""}],"src":"4299:732:26"},{"body":{"nativeSrc":"5185:225:26","nodeType":"YulBlock","src":"5185:225:26","statements":[{"nativeSrc":"5195:26:26","nodeType":"YulAssignment","src":"5195:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"5207:9:26","nodeType":"YulIdentifier","src":"5207:9:26"},{"kind":"number","nativeSrc":"5218:2:26","nodeType":"YulLiteral","src":"5218:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5203:3:26","nodeType":"YulIdentifier","src":"5203:3:26"},"nativeSrc":"5203:18:26","nodeType":"YulFunctionCall","src":"5203:18:26"},"variableNames":[{"name":"tail","nativeSrc":"5195:4:26","nodeType":"YulIdentifier","src":"5195:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5242:9:26","nodeType":"YulIdentifier","src":"5242:9:26"},{"kind":"number","nativeSrc":"5253:1:26","nodeType":"YulLiteral","src":"5253:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5238:3:26","nodeType":"YulIdentifier","src":"5238:3:26"},"nativeSrc":"5238:17:26","nodeType":"YulFunctionCall","src":"5238:17:26"},{"arguments":[{"name":"tail","nativeSrc":"5261:4:26","nodeType":"YulIdentifier","src":"5261:4:26"},{"name":"headStart","nativeSrc":"5267:9:26","nodeType":"YulIdentifier","src":"5267:9:26"}],"functionName":{"name":"sub","nativeSrc":"5257:3:26","nodeType":"YulIdentifier","src":"5257:3:26"},"nativeSrc":"5257:20:26","nodeType":"YulFunctionCall","src":"5257:20:26"}],"functionName":{"name":"mstore","nativeSrc":"5231:6:26","nodeType":"YulIdentifier","src":"5231:6:26"},"nativeSrc":"5231:47:26","nodeType":"YulFunctionCall","src":"5231:47:26"},"nativeSrc":"5231:47:26","nodeType":"YulExpressionStatement","src":"5231:47:26"},{"nativeSrc":"5287:116:26","nodeType":"YulAssignment","src":"5287:116:26","value":{"arguments":[{"name":"value0","nativeSrc":"5389:6:26","nodeType":"YulIdentifier","src":"5389:6:26"},{"name":"tail","nativeSrc":"5398:4:26","nodeType":"YulIdentifier","src":"5398:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"5295:93:26","nodeType":"YulIdentifier","src":"5295:93:26"},"nativeSrc":"5295:108:26","nodeType":"YulFunctionCall","src":"5295:108:26"},"variableNames":[{"name":"tail","nativeSrc":"5287:4:26","nodeType":"YulIdentifier","src":"5287:4:26"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5037:373:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5157:9:26","nodeType":"YulTypedName","src":"5157:9:26","type":""},{"name":"value0","nativeSrc":"5169:6:26","nodeType":"YulTypedName","src":"5169:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5180:4:26","nodeType":"YulTypedName","src":"5180:4:26","type":""}],"src":"5037:373:26"},{"body":{"nativeSrc":"5482:263:26","nodeType":"YulBlock","src":"5482:263:26","statements":[{"body":{"nativeSrc":"5528:83:26","nodeType":"YulBlock","src":"5528:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5530:77:26","nodeType":"YulIdentifier","src":"5530:77:26"},"nativeSrc":"5530:79:26","nodeType":"YulFunctionCall","src":"5530:79:26"},"nativeSrc":"5530:79:26","nodeType":"YulExpressionStatement","src":"5530:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5503:7:26","nodeType":"YulIdentifier","src":"5503:7:26"},{"name":"headStart","nativeSrc":"5512:9:26","nodeType":"YulIdentifier","src":"5512:9:26"}],"functionName":{"name":"sub","nativeSrc":"5499:3:26","nodeType":"YulIdentifier","src":"5499:3:26"},"nativeSrc":"5499:23:26","nodeType":"YulFunctionCall","src":"5499:23:26"},{"kind":"number","nativeSrc":"5524:2:26","nodeType":"YulLiteral","src":"5524:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5495:3:26","nodeType":"YulIdentifier","src":"5495:3:26"},"nativeSrc":"5495:32:26","nodeType":"YulFunctionCall","src":"5495:32:26"},"nativeSrc":"5492:119:26","nodeType":"YulIf","src":"5492:119:26"},{"nativeSrc":"5621:117:26","nodeType":"YulBlock","src":"5621:117:26","statements":[{"nativeSrc":"5636:15:26","nodeType":"YulVariableDeclaration","src":"5636:15:26","value":{"kind":"number","nativeSrc":"5650:1:26","nodeType":"YulLiteral","src":"5650:1:26","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5640:6:26","nodeType":"YulTypedName","src":"5640:6:26","type":""}]},{"nativeSrc":"5665:63:26","nodeType":"YulAssignment","src":"5665:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5700:9:26","nodeType":"YulIdentifier","src":"5700:9:26"},{"name":"offset","nativeSrc":"5711:6:26","nodeType":"YulIdentifier","src":"5711:6:26"}],"functionName":{"name":"add","nativeSrc":"5696:3:26","nodeType":"YulIdentifier","src":"5696:3:26"},"nativeSrc":"5696:22:26","nodeType":"YulFunctionCall","src":"5696:22:26"},{"name":"dataEnd","nativeSrc":"5720:7:26","nodeType":"YulIdentifier","src":"5720:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5675:20:26","nodeType":"YulIdentifier","src":"5675:20:26"},"nativeSrc":"5675:53:26","nodeType":"YulFunctionCall","src":"5675:53:26"},"variableNames":[{"name":"value0","nativeSrc":"5665:6:26","nodeType":"YulIdentifier","src":"5665:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"5416:329:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5452:9:26","nodeType":"YulTypedName","src":"5452:9:26","type":""},{"name":"dataEnd","nativeSrc":"5463:7:26","nodeType":"YulTypedName","src":"5463:7:26","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5475:6:26","nodeType":"YulTypedName","src":"5475:6:26","type":""}],"src":"5416:329:26"},{"body":{"nativeSrc":"5809:40:26","nodeType":"YulBlock","src":"5809:40:26","statements":[{"nativeSrc":"5820:22:26","nodeType":"YulAssignment","src":"5820:22:26","value":{"arguments":[{"name":"value","nativeSrc":"5836:5:26","nodeType":"YulIdentifier","src":"5836:5:26"}],"functionName":{"name":"mload","nativeSrc":"5830:5:26","nodeType":"YulIdentifier","src":"5830:5:26"},"nativeSrc":"5830:12:26","nodeType":"YulFunctionCall","src":"5830:12:26"},"variableNames":[{"name":"length","nativeSrc":"5820:6:26","nodeType":"YulIdentifier","src":"5820:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"5751:98:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5792:5:26","nodeType":"YulTypedName","src":"5792:5:26","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5802:6:26","nodeType":"YulTypedName","src":"5802:6:26","type":""}],"src":"5751:98:26"},{"body":{"nativeSrc":"5950:73:26","nodeType":"YulBlock","src":"5950:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5967:3:26","nodeType":"YulIdentifier","src":"5967:3:26"},{"name":"length","nativeSrc":"5972:6:26","nodeType":"YulIdentifier","src":"5972:6:26"}],"functionName":{"name":"mstore","nativeSrc":"5960:6:26","nodeType":"YulIdentifier","src":"5960:6:26"},"nativeSrc":"5960:19:26","nodeType":"YulFunctionCall","src":"5960:19:26"},"nativeSrc":"5960:19:26","nodeType":"YulExpressionStatement","src":"5960:19:26"},{"nativeSrc":"5988:29:26","nodeType":"YulAssignment","src":"5988:29:26","value":{"arguments":[{"name":"pos","nativeSrc":"6007:3:26","nodeType":"YulIdentifier","src":"6007:3:26"},{"kind":"number","nativeSrc":"6012:4:26","nodeType":"YulLiteral","src":"6012:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6003:3:26","nodeType":"YulIdentifier","src":"6003:3:26"},"nativeSrc":"6003:14:26","nodeType":"YulFunctionCall","src":"6003:14:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"5988:11:26","nodeType":"YulIdentifier","src":"5988:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"5855:168:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5922:3:26","nodeType":"YulTypedName","src":"5922:3:26","type":""},{"name":"length","nativeSrc":"5927:6:26","nodeType":"YulTypedName","src":"5927:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5938:11:26","nodeType":"YulTypedName","src":"5938:11:26","type":""}],"src":"5855:168:26"},{"body":{"nativeSrc":"6091:184:26","nodeType":"YulBlock","src":"6091:184:26","statements":[{"nativeSrc":"6101:10:26","nodeType":"YulVariableDeclaration","src":"6101:10:26","value":{"kind":"number","nativeSrc":"6110:1:26","nodeType":"YulLiteral","src":"6110:1:26","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6105:1:26","nodeType":"YulTypedName","src":"6105:1:26","type":""}]},{"body":{"nativeSrc":"6170:63:26","nodeType":"YulBlock","src":"6170:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6195:3:26","nodeType":"YulIdentifier","src":"6195:3:26"},{"name":"i","nativeSrc":"6200:1:26","nodeType":"YulIdentifier","src":"6200:1:26"}],"functionName":{"name":"add","nativeSrc":"6191:3:26","nodeType":"YulIdentifier","src":"6191:3:26"},"nativeSrc":"6191:11:26","nodeType":"YulFunctionCall","src":"6191:11:26"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"6214:3:26","nodeType":"YulIdentifier","src":"6214:3:26"},{"name":"i","nativeSrc":"6219:1:26","nodeType":"YulIdentifier","src":"6219:1:26"}],"functionName":{"name":"add","nativeSrc":"6210:3:26","nodeType":"YulIdentifier","src":"6210:3:26"},"nativeSrc":"6210:11:26","nodeType":"YulFunctionCall","src":"6210:11:26"}],"functionName":{"name":"mload","nativeSrc":"6204:5:26","nodeType":"YulIdentifier","src":"6204:5:26"},"nativeSrc":"6204:18:26","nodeType":"YulFunctionCall","src":"6204:18:26"}],"functionName":{"name":"mstore","nativeSrc":"6184:6:26","nodeType":"YulIdentifier","src":"6184:6:26"},"nativeSrc":"6184:39:26","nodeType":"YulFunctionCall","src":"6184:39:26"},"nativeSrc":"6184:39:26","nodeType":"YulExpressionStatement","src":"6184:39:26"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6131:1:26","nodeType":"YulIdentifier","src":"6131:1:26"},{"name":"length","nativeSrc":"6134:6:26","nodeType":"YulIdentifier","src":"6134:6:26"}],"functionName":{"name":"lt","nativeSrc":"6128:2:26","nodeType":"YulIdentifier","src":"6128:2:26"},"nativeSrc":"6128:13:26","nodeType":"YulFunctionCall","src":"6128:13:26"},"nativeSrc":"6120:113:26","nodeType":"YulForLoop","post":{"nativeSrc":"6142:19:26","nodeType":"YulBlock","src":"6142:19:26","statements":[{"nativeSrc":"6144:15:26","nodeType":"YulAssignment","src":"6144:15:26","value":{"arguments":[{"name":"i","nativeSrc":"6153:1:26","nodeType":"YulIdentifier","src":"6153:1:26"},{"kind":"number","nativeSrc":"6156:2:26","nodeType":"YulLiteral","src":"6156:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6149:3:26","nodeType":"YulIdentifier","src":"6149:3:26"},"nativeSrc":"6149:10:26","nodeType":"YulFunctionCall","src":"6149:10:26"},"variableNames":[{"name":"i","nativeSrc":"6144:1:26","nodeType":"YulIdentifier","src":"6144:1:26"}]}]},"pre":{"nativeSrc":"6124:3:26","nodeType":"YulBlock","src":"6124:3:26","statements":[]},"src":"6120:113:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"6253:3:26","nodeType":"YulIdentifier","src":"6253:3:26"},{"name":"length","nativeSrc":"6258:6:26","nodeType":"YulIdentifier","src":"6258:6:26"}],"functionName":{"name":"add","nativeSrc":"6249:3:26","nodeType":"YulIdentifier","src":"6249:3:26"},"nativeSrc":"6249:16:26","nodeType":"YulFunctionCall","src":"6249:16:26"},{"kind":"number","nativeSrc":"6267:1:26","nodeType":"YulLiteral","src":"6267:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"6242:6:26","nodeType":"YulIdentifier","src":"6242:6:26"},"nativeSrc":"6242:27:26","nodeType":"YulFunctionCall","src":"6242:27:26"},"nativeSrc":"6242:27:26","nodeType":"YulExpressionStatement","src":"6242:27:26"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6029:246:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6073:3:26","nodeType":"YulTypedName","src":"6073:3:26","type":""},{"name":"dst","nativeSrc":"6078:3:26","nodeType":"YulTypedName","src":"6078:3:26","type":""},{"name":"length","nativeSrc":"6083:6:26","nodeType":"YulTypedName","src":"6083:6:26","type":""}],"src":"6029:246:26"},{"body":{"nativeSrc":"6329:54:26","nodeType":"YulBlock","src":"6329:54:26","statements":[{"nativeSrc":"6339:38:26","nodeType":"YulAssignment","src":"6339:38:26","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6357:5:26","nodeType":"YulIdentifier","src":"6357:5:26"},{"kind":"number","nativeSrc":"6364:2:26","nodeType":"YulLiteral","src":"6364:2:26","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6353:3:26","nodeType":"YulIdentifier","src":"6353:3:26"},"nativeSrc":"6353:14:26","nodeType":"YulFunctionCall","src":"6353:14:26"},{"arguments":[{"kind":"number","nativeSrc":"6373:2:26","nodeType":"YulLiteral","src":"6373:2:26","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"6369:3:26","nodeType":"YulIdentifier","src":"6369:3:26"},"nativeSrc":"6369:7:26","nodeType":"YulFunctionCall","src":"6369:7:26"}],"functionName":{"name":"and","nativeSrc":"6349:3:26","nodeType":"YulIdentifier","src":"6349:3:26"},"nativeSrc":"6349:28:26","nodeType":"YulFunctionCall","src":"6349:28:26"},"variableNames":[{"name":"result","nativeSrc":"6339:6:26","nodeType":"YulIdentifier","src":"6339:6:26"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"6281:102:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6312:5:26","nodeType":"YulTypedName","src":"6312:5:26","type":""}],"returnVariables":[{"name":"result","nativeSrc":"6322:6:26","nodeType":"YulTypedName","src":"6322:6:26","type":""}],"src":"6281:102:26"},{"body":{"nativeSrc":"6479:283:26","nodeType":"YulBlock","src":"6479:283:26","statements":[{"nativeSrc":"6489:52:26","nodeType":"YulVariableDeclaration","src":"6489:52:26","value":{"arguments":[{"name":"value","nativeSrc":"6535:5:26","nodeType":"YulIdentifier","src":"6535:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"6503:31:26","nodeType":"YulIdentifier","src":"6503:31:26"},"nativeSrc":"6503:38:26","nodeType":"YulFunctionCall","src":"6503:38:26"},"variables":[{"name":"length","nativeSrc":"6493:6:26","nodeType":"YulTypedName","src":"6493:6:26","type":""}]},{"nativeSrc":"6550:77:26","nodeType":"YulAssignment","src":"6550:77:26","value":{"arguments":[{"name":"pos","nativeSrc":"6615:3:26","nodeType":"YulIdentifier","src":"6615:3:26"},{"name":"length","nativeSrc":"6620:6:26","nodeType":"YulIdentifier","src":"6620:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"6557:57:26","nodeType":"YulIdentifier","src":"6557:57:26"},"nativeSrc":"6557:70:26","nodeType":"YulFunctionCall","src":"6557:70:26"},"variableNames":[{"name":"pos","nativeSrc":"6550:3:26","nodeType":"YulIdentifier","src":"6550:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6675:5:26","nodeType":"YulIdentifier","src":"6675:5:26"},{"kind":"number","nativeSrc":"6682:4:26","nodeType":"YulLiteral","src":"6682:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6671:3:26","nodeType":"YulIdentifier","src":"6671:3:26"},"nativeSrc":"6671:16:26","nodeType":"YulFunctionCall","src":"6671:16:26"},{"name":"pos","nativeSrc":"6689:3:26","nodeType":"YulIdentifier","src":"6689:3:26"},{"name":"length","nativeSrc":"6694:6:26","nodeType":"YulIdentifier","src":"6694:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6636:34:26","nodeType":"YulIdentifier","src":"6636:34:26"},"nativeSrc":"6636:65:26","nodeType":"YulFunctionCall","src":"6636:65:26"},"nativeSrc":"6636:65:26","nodeType":"YulExpressionStatement","src":"6636:65:26"},{"nativeSrc":"6710:46:26","nodeType":"YulAssignment","src":"6710:46:26","value":{"arguments":[{"name":"pos","nativeSrc":"6721:3:26","nodeType":"YulIdentifier","src":"6721:3:26"},{"arguments":[{"name":"length","nativeSrc":"6748:6:26","nodeType":"YulIdentifier","src":"6748:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"6726:21:26","nodeType":"YulIdentifier","src":"6726:21:26"},"nativeSrc":"6726:29:26","nodeType":"YulFunctionCall","src":"6726:29:26"}],"functionName":{"name":"add","nativeSrc":"6717:3:26","nodeType":"YulIdentifier","src":"6717:3:26"},"nativeSrc":"6717:39:26","nodeType":"YulFunctionCall","src":"6717:39:26"},"variableNames":[{"name":"end","nativeSrc":"6710:3:26","nodeType":"YulIdentifier","src":"6710:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"6389:373:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6460:5:26","nodeType":"YulTypedName","src":"6460:5:26","type":""},{"name":"pos","nativeSrc":"6467:3:26","nodeType":"YulTypedName","src":"6467:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6475:3:26","nodeType":"YulTypedName","src":"6475:3:26","type":""}],"src":"6389:373:26"},{"body":{"nativeSrc":"6912:275:26","nodeType":"YulBlock","src":"6912:275:26","statements":[{"nativeSrc":"6922:26:26","nodeType":"YulAssignment","src":"6922:26:26","value":{"arguments":[{"name":"headStart","nativeSrc":"6934:9:26","nodeType":"YulIdentifier","src":"6934:9:26"},{"kind":"number","nativeSrc":"6945:2:26","nodeType":"YulLiteral","src":"6945:2:26","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6930:3:26","nodeType":"YulIdentifier","src":"6930:3:26"},"nativeSrc":"6930:18:26","nodeType":"YulFunctionCall","src":"6930:18:26"},"variableNames":[{"name":"tail","nativeSrc":"6922:4:26","nodeType":"YulIdentifier","src":"6922:4:26"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7002:6:26","nodeType":"YulIdentifier","src":"7002:6:26"},{"arguments":[{"name":"headStart","nativeSrc":"7015:9:26","nodeType":"YulIdentifier","src":"7015:9:26"},{"kind":"number","nativeSrc":"7026:1:26","nodeType":"YulLiteral","src":"7026:1:26","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7011:3:26","nodeType":"YulIdentifier","src":"7011:3:26"},"nativeSrc":"7011:17:26","nodeType":"YulFunctionCall","src":"7011:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6958:43:26","nodeType":"YulIdentifier","src":"6958:43:26"},"nativeSrc":"6958:71:26","nodeType":"YulFunctionCall","src":"6958:71:26"},"nativeSrc":"6958:71:26","nodeType":"YulExpressionStatement","src":"6958:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7050:9:26","nodeType":"YulIdentifier","src":"7050:9:26"},{"kind":"number","nativeSrc":"7061:2:26","nodeType":"YulLiteral","src":"7061:2:26","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7046:3:26","nodeType":"YulIdentifier","src":"7046:3:26"},"nativeSrc":"7046:18:26","nodeType":"YulFunctionCall","src":"7046:18:26"},{"arguments":[{"name":"tail","nativeSrc":"7070:4:26","nodeType":"YulIdentifier","src":"7070:4:26"},{"name":"headStart","nativeSrc":"7076:9:26","nodeType":"YulIdentifier","src":"7076:9:26"}],"functionName":{"name":"sub","nativeSrc":"7066:3:26","nodeType":"YulIdentifier","src":"7066:3:26"},"nativeSrc":"7066:20:26","nodeType":"YulFunctionCall","src":"7066:20:26"}],"functionName":{"name":"mstore","nativeSrc":"7039:6:26","nodeType":"YulIdentifier","src":"7039:6:26"},"nativeSrc":"7039:48:26","nodeType":"YulFunctionCall","src":"7039:48:26"},"nativeSrc":"7039:48:26","nodeType":"YulExpressionStatement","src":"7039:48:26"},{"nativeSrc":"7096:84:26","nodeType":"YulAssignment","src":"7096:84:26","value":{"arguments":[{"name":"value1","nativeSrc":"7166:6:26","nodeType":"YulIdentifier","src":"7166:6:26"},{"name":"tail","nativeSrc":"7175:4:26","nodeType":"YulIdentifier","src":"7175:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"7104:61:26","nodeType":"YulIdentifier","src":"7104:61:26"},"nativeSrc":"7104:76:26","nodeType":"YulFunctionCall","src":"7104:76:26"},"variableNames":[{"name":"tail","nativeSrc":"7096:4:26","nodeType":"YulIdentifier","src":"7096:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"6768:419:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6876:9:26","nodeType":"YulTypedName","src":"6876:9:26","type":""},{"name":"value1","nativeSrc":"6888:6:26","nodeType":"YulTypedName","src":"6888:6:26","type":""},{"name":"value0","nativeSrc":"6896:6:26","nodeType":"YulTypedName","src":"6896:6:26","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6907:4:26","nodeType":"YulTypedName","src":"6907:4:26","type":""}],"src":"6768:419:26"},{"body":{"nativeSrc":"7306:34:26","nodeType":"YulBlock","src":"7306:34:26","statements":[{"nativeSrc":"7316:18:26","nodeType":"YulAssignment","src":"7316:18:26","value":{"name":"pos","nativeSrc":"7331:3:26","nodeType":"YulIdentifier","src":"7331:3:26"},"variableNames":[{"name":"updated_pos","nativeSrc":"7316:11:26","nodeType":"YulIdentifier","src":"7316:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7193:147:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7278:3:26","nodeType":"YulTypedName","src":"7278:3:26","type":""},{"name":"length","nativeSrc":"7283:6:26","nodeType":"YulTypedName","src":"7283:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7294:11:26","nodeType":"YulTypedName","src":"7294:11:26","type":""}],"src":"7193:147:26"},{"body":{"nativeSrc":"7454:278:26","nodeType":"YulBlock","src":"7454:278:26","statements":[{"nativeSrc":"7464:52:26","nodeType":"YulVariableDeclaration","src":"7464:52:26","value":{"arguments":[{"name":"value","nativeSrc":"7510:5:26","nodeType":"YulIdentifier","src":"7510:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"7478:31:26","nodeType":"YulIdentifier","src":"7478:31:26"},"nativeSrc":"7478:38:26","nodeType":"YulFunctionCall","src":"7478:38:26"},"variables":[{"name":"length","nativeSrc":"7468:6:26","nodeType":"YulTypedName","src":"7468:6:26","type":""}]},{"nativeSrc":"7525:95:26","nodeType":"YulAssignment","src":"7525:95:26","value":{"arguments":[{"name":"pos","nativeSrc":"7608:3:26","nodeType":"YulIdentifier","src":"7608:3:26"},{"name":"length","nativeSrc":"7613:6:26","nodeType":"YulIdentifier","src":"7613:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7532:75:26","nodeType":"YulIdentifier","src":"7532:75:26"},"nativeSrc":"7532:88:26","nodeType":"YulFunctionCall","src":"7532:88:26"},"variableNames":[{"name":"pos","nativeSrc":"7525:3:26","nodeType":"YulIdentifier","src":"7525:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7668:5:26","nodeType":"YulIdentifier","src":"7668:5:26"},{"kind":"number","nativeSrc":"7675:4:26","nodeType":"YulLiteral","src":"7675:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7664:3:26","nodeType":"YulIdentifier","src":"7664:3:26"},"nativeSrc":"7664:16:26","nodeType":"YulFunctionCall","src":"7664:16:26"},{"name":"pos","nativeSrc":"7682:3:26","nodeType":"YulIdentifier","src":"7682:3:26"},{"name":"length","nativeSrc":"7687:6:26","nodeType":"YulIdentifier","src":"7687:6:26"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7629:34:26","nodeType":"YulIdentifier","src":"7629:34:26"},"nativeSrc":"7629:65:26","nodeType":"YulFunctionCall","src":"7629:65:26"},"nativeSrc":"7629:65:26","nodeType":"YulExpressionStatement","src":"7629:65:26"},{"nativeSrc":"7703:23:26","nodeType":"YulAssignment","src":"7703:23:26","value":{"arguments":[{"name":"pos","nativeSrc":"7714:3:26","nodeType":"YulIdentifier","src":"7714:3:26"},{"name":"length","nativeSrc":"7719:6:26","nodeType":"YulIdentifier","src":"7719:6:26"}],"functionName":{"name":"add","nativeSrc":"7710:3:26","nodeType":"YulIdentifier","src":"7710:3:26"},"nativeSrc":"7710:16:26","nodeType":"YulFunctionCall","src":"7710:16:26"},"variableNames":[{"name":"end","nativeSrc":"7703:3:26","nodeType":"YulIdentifier","src":"7703:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7346:386:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7435:5:26","nodeType":"YulTypedName","src":"7435:5:26","type":""},{"name":"pos","nativeSrc":"7442:3:26","nodeType":"YulTypedName","src":"7442:3:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7450:3:26","nodeType":"YulTypedName","src":"7450:3:26","type":""}],"src":"7346:386:26"},{"body":{"nativeSrc":"7918:247:26","nodeType":"YulBlock","src":"7918:247:26","statements":[{"nativeSrc":"7929:100:26","nodeType":"YulAssignment","src":"7929:100:26","value":{"arguments":[{"name":"value0","nativeSrc":"8016:6:26","nodeType":"YulIdentifier","src":"8016:6:26"},{"name":"pos","nativeSrc":"8025:3:26","nodeType":"YulIdentifier","src":"8025:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"7936:79:26","nodeType":"YulIdentifier","src":"7936:79:26"},"nativeSrc":"7936:93:26","nodeType":"YulFunctionCall","src":"7936:93:26"},"variableNames":[{"name":"pos","nativeSrc":"7929:3:26","nodeType":"YulIdentifier","src":"7929:3:26"}]},{"nativeSrc":"8039:100:26","nodeType":"YulAssignment","src":"8039:100:26","value":{"arguments":[{"name":"value1","nativeSrc":"8126:6:26","nodeType":"YulIdentifier","src":"8126:6:26"},{"name":"pos","nativeSrc":"8135:3:26","nodeType":"YulIdentifier","src":"8135:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8046:79:26","nodeType":"YulIdentifier","src":"8046:79:26"},"nativeSrc":"8046:93:26","nodeType":"YulFunctionCall","src":"8046:93:26"},"variableNames":[{"name":"pos","nativeSrc":"8039:3:26","nodeType":"YulIdentifier","src":"8039:3:26"}]},{"nativeSrc":"8149:10:26","nodeType":"YulAssignment","src":"8149:10:26","value":{"name":"pos","nativeSrc":"8156:3:26","nodeType":"YulIdentifier","src":"8156:3:26"},"variableNames":[{"name":"end","nativeSrc":"8149:3:26","nodeType":"YulIdentifier","src":"8149:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"7738:427:26","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7889:3:26","nodeType":"YulTypedName","src":"7889:3:26","type":""},{"name":"value1","nativeSrc":"7895:6:26","nodeType":"YulTypedName","src":"7895:6:26","type":""},{"name":"value0","nativeSrc":"7903:6:26","nodeType":"YulTypedName","src":"7903:6:26","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7914:3:26","nodeType":"YulTypedName","src":"7914:3:26","type":""}],"src":"7738:427:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_SmartContractWallet_$4445_to_t_address_payable(value) -> converted {\n        converted := convert_t_uint160_to_t_address_payable(value)\n    }\n\n    function abi_encode_t_contract$_SmartContractWallet_$4445_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_SmartContractWallet_$4445_to_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_contract$_SmartContractWallet_$4445__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_SmartContractWallet_$4445_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4454":[{"length":32,"start":496},{"length":32,"start":602},{"length":32,"start":1309}]},"linkReferences":{},"object":"60806040523480156200001157600080fd5b50600436106200006a5760003560e01c80630d253d76146200006f57806311464fbe14620000a55780635fbfb9cf14620000c7578063805d09ab14620000fd5780638cb84e181462000133578063f6d62ece1462000169575b600080fd5b6200008d600480360381019062000087919062000722565b6200019f565b6040516200009c91906200077a565b60405180910390f35b620000af620001ee565b604051620000be919062000802565b60405180910390f35b620000e56004803603810190620000df919062000722565b62000212565b604051620000f4919062000802565b60405180910390f35b6200011b60048036038101906200011591906200081f565b6200041c565b6040516200012a91906200091f565b60405180910390f35b6200015160048036038101906200014b919062000722565b620004eb565b6040516200016091906200077a565b60405180910390f35b62000187600480360381019062000181919062000943565b620005ed565b6040516200019691906200077a565b60405180910390f35b60016020528160005260406000208181548110620001bc57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080620002218484620004eb565b905060008173ffffffffffffffffffffffffffffffffffffffff163b905060008111156200025457819250505062000416565b8360001b7f0000000000000000000000000000000000000000000000000000000000000000866040516024016200028c91906200077a565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620002df906200066f565b620002ec92919062000a0f565b8190604051809103906000f59050801580156200030d573d6000803e3d6000fd5b509250600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505b92915050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620004df57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000494575b50505050509050919050565b6000620005e58260001b6040518060200162000507906200066f565b6020820181038252601f19601f820116604052507f0000000000000000000000000000000000000000000000000000000000000000866040516024016200054f91906200077a565b60405160208183030381529060405263c4d66de860e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051602001620005a792919062000a0f565b604051602081830303815290604052604051602001620005c992919062000a85565b604051602081830303815290604052805190602001206200062d565b905092915050565b60008181548110620005fe57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006200063c83833062000644565b905092915050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b6106e58062000aae83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006af8262000682565b9050919050565b620006c181620006a2565b8114620006cd57600080fd5b50565b600081359050620006e181620006b6565b92915050565b6000819050919050565b620006fc81620006e7565b81146200070857600080fd5b50565b6000813590506200071c81620006f1565b92915050565b600080604083850312156200073c576200073b6200067d565b5b60006200074c85828601620006d0565b92505060206200075f858286016200070b565b9150509250929050565b6200077481620006a2565b82525050565b600060208201905062000791600083018462000769565b92915050565b6000819050919050565b6000620007c2620007bc620007b68462000682565b62000797565b62000682565b9050919050565b6000620007d682620007a1565b9050919050565b6000620007ea82620007c9565b9050919050565b620007fc81620007dd565b82525050565b6000602082019050620008196000830184620007f1565b92915050565b6000602082840312156200083857620008376200067d565b5b60006200084884828501620006d0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200088881620006a2565b82525050565b60006200089c83836200087d565b60208301905092915050565b6000602082019050919050565b6000620008c28262000851565b620008ce81856200085c565b9350620008db836200086d565b8060005b8381101562000912578151620008f688826200088e565b97506200090383620008a8565b925050600181019050620008df565b5085935050505092915050565b600060208201905081810360008301526200093b8184620008b5565b905092915050565b6000602082840312156200095c576200095b6200067d565b5b60006200096c848285016200070b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620009b157808201518184015260208101905062000994565b60008484015250505050565b6000601f19601f8301169050919050565b6000620009db8262000975565b620009e7818562000980565b9350620009f981856020860162000991565b62000a0481620009bd565b840191505092915050565b600060408201905062000a26600083018562000769565b818103602083015262000a3a8184620009ce565b90509392505050565b600081905092915050565b600062000a5b8262000975565b62000a67818562000a43565b935062000a7981856020860162000991565b80840191505092915050565b600062000a93828562000a4e565b915062000aa1828462000a4e565b9150819050939250505056fe60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea2646970667358221220efb0453644e06fc30c00e319e2a4f2c1a809d39eca9642ae9d97060ab802f30a64736f6c63430008180033a264697066735822122025312603de8d5d9508b04a16c85e81a394f8d83828f075bb42ed0e4d78b9ec8064736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD253D76 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x11464FBE EQ PUSH3 0xA5 JUMPI DUP1 PUSH4 0x5FBFB9CF EQ PUSH3 0xC7 JUMPI DUP1 PUSH4 0x805D09AB EQ PUSH3 0xFD JUMPI DUP1 PUSH4 0x8CB84E18 EQ PUSH3 0x133 JUMPI DUP1 PUSH4 0xF6D62ECE EQ PUSH3 0x169 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x87 SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x9C SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xAF PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xDF SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xF4 SWAP2 SWAP1 PUSH3 0x802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x115 SWAP2 SWAP1 PUSH3 0x81F JUMP JUMPDEST PUSH3 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x12A SWAP2 SWAP1 PUSH3 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x14B SWAP2 SWAP1 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x160 SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x181 SWAP2 SWAP1 PUSH3 0x943 JUMP JUMPDEST PUSH3 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x196 SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x1BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x221 DUP5 DUP5 PUSH3 0x4EB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH3 0x254 JUMPI DUP2 SWAP3 POP POP POP PUSH3 0x416 JUMP JUMPDEST DUP4 PUSH1 0x0 SHL PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x28C SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x2DF SWAP1 PUSH3 0x66F JUMP JUMPDEST PUSH3 0x2EC SWAP3 SWAP2 SWAP1 PUSH3 0xA0F JUMP JUMPDEST DUP2 SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE2 SWAP1 POP DUP1 ISZERO DUP1 ISZERO PUSH3 0x30D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0x4DF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH3 0x494 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E5 DUP3 PUSH1 0x0 SHL PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH3 0x507 SWAP1 PUSH3 0x66F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD DUP2 SUB DUP3 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND PUSH1 0x40 MSTORE POP PUSH32 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH3 0x54F SWAP2 SWAP1 PUSH3 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0xC4D66DE8 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5A7 SWAP3 SWAP2 SWAP1 PUSH3 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x5C9 SWAP3 SWAP2 SWAP1 PUSH3 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH3 0x62D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x63C DUP4 DUP4 ADDRESS PUSH3 0x644 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH1 0x40 DUP3 ADD MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP2 MSTORE PUSH1 0xB DUP2 ADD PUSH1 0xFF DUP2 MSTORE8 PUSH1 0x55 DUP2 KECCAK256 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6E5 DUP1 PUSH3 0xAAE DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AF DUP3 PUSH3 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C1 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP2 EQ PUSH3 0x6CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x6E1 DUP2 PUSH3 0x6B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FC DUP2 PUSH3 0x6E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x71C DUP2 PUSH3 0x6F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x73C JUMPI PUSH3 0x73B PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x74C DUP6 DUP3 DUP7 ADD PUSH3 0x6D0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x75F DUP6 DUP3 DUP7 ADD PUSH3 0x70B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x774 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x791 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x769 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7C2 PUSH3 0x7BC PUSH3 0x7B6 DUP5 PUSH3 0x682 JUMP JUMPDEST PUSH3 0x797 JUMP JUMPDEST PUSH3 0x682 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D6 DUP3 PUSH3 0x7A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7EA DUP3 PUSH3 0x7C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7FC DUP2 PUSH3 0x7DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x819 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x7F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x838 JUMPI PUSH3 0x837 PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x848 DUP5 DUP3 DUP6 ADD PUSH3 0x6D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x888 DUP2 PUSH3 0x6A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x89C DUP4 DUP4 PUSH3 0x87D JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8C2 DUP3 PUSH3 0x851 JUMP JUMPDEST PUSH3 0x8CE DUP2 DUP6 PUSH3 0x85C JUMP JUMPDEST SWAP4 POP PUSH3 0x8DB DUP4 PUSH3 0x86D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x912 JUMPI DUP2 MLOAD PUSH3 0x8F6 DUP9 DUP3 PUSH3 0x88E JUMP JUMPDEST SWAP8 POP PUSH3 0x903 DUP4 PUSH3 0x8A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x8DF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x93B DUP2 DUP5 PUSH3 0x8B5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x95C JUMPI PUSH3 0x95B PUSH3 0x67D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x96C DUP5 DUP3 DUP6 ADD PUSH3 0x70B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x9B1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x994 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9DB DUP3 PUSH3 0x975 JUMP JUMPDEST PUSH3 0x9E7 DUP2 DUP6 PUSH3 0x980 JUMP JUMPDEST SWAP4 POP PUSH3 0x9F9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x991 JUMP JUMPDEST PUSH3 0xA04 DUP2 PUSH3 0x9BD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0xA26 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x769 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xA3A DUP2 DUP5 PUSH3 0x9CE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA5B DUP3 PUSH3 0x975 JUMP JUMPDEST PUSH3 0xA67 DUP2 DUP6 PUSH3 0xA43 JUMP JUMPDEST SWAP4 POP PUSH3 0xA79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x991 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA93 DUP3 DUP6 PUSH3 0xA4E JUMP JUMPDEST SWAP2 POP PUSH3 0xAA1 DUP3 DUP5 PUSH3 0xA4E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x6E5 CODESIZE SUB DUP1 PUSH2 0x6E5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH2 0x35 DUP3 DUP3 PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x4B DUP3 PUSH2 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xAE JUMPI PUSH2 0xA8 DUP3 DUP3 PUSH2 0x194 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xBD JUMP JUMPDEST PUSH2 0xBC PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x11D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x150 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x25B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x214 DUP6 DUP4 DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT ISZERO PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x280 JUMPI PUSH2 0x27B DUP3 PUSH2 0x2FA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2A8 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2EA JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2F3 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x30D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E DUP3 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x373 JUMP JUMPDEST DUP2 EQ PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3AB DUP2 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x404 DUP3 PUSH2 0x3BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x436 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP PUSH2 0x442 DUP3 DUP3 PUSH2 0x3FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x462 JUMPI PUSH2 0x461 PUSH2 0x3CC JUMP JUMPDEST JUMPDEST PUSH2 0x46B DUP3 PUSH2 0x3BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x496 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x47B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B5 PUSH2 0x4B0 DUP5 PUSH2 0x447 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x3B6 JUMP JUMPDEST JUMPDEST PUSH2 0x4DC DUP5 DUP3 DUP6 PUSH2 0x478 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F9 JUMPI PUSH2 0x4F8 PUSH2 0x3B1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x509 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x529 JUMPI PUSH2 0x528 PUSH2 0x349 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x537 DUP6 DUP3 DUP7 ADD PUSH2 0x39C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x564 DUP6 DUP3 DUP7 ADD PUSH2 0x4E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x577 DUP2 PUSH2 0x373 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B9 DUP3 PUSH2 0x598 JUMP JUMPDEST PUSH2 0x5C3 DUP2 DUP6 PUSH2 0x5A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x5D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x478 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP3 DUP5 PUSH2 0x5AE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE1 DUP1 PUSH2 0x604 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x18 PUSH1 0x14 PUSH1 0x1A JUMP JUMPDEST PUSH1 0x27 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 PUSH1 0x4C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 PUSH1 0x0 DUP2 EQ PUSH1 0x47 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x78 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF 0xB0 GASLIMIT CALLDATASIZE PREVRANDAO 0xE0 PUSH16 0xC30C00E319E2A4F2C1A809D39ECA9642 0xAE SWAP14 SWAP8 MOD EXP 0xB8 MUL RETURN EXP PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 BALANCE 0x26 SUB 0xDE DUP14 TSTORE SWAP6 ADDMOD 0xB0 BLOBBASEFEE AND 0xC8 MCOPY DUP2 LOG3 SWAP5 0xF8 0xD8 CODESIZE 0x28 CREATE PUSH22 0xBB42ED0E4D78B9EC8064736F6C634300081800330000 ","sourceMap":"612:2414:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;760:54;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;654:58;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1315:749;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2070:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2357:667;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;719:35;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;654:58::-;;;:::o;1315:749::-;1405:23;1440:12;1455:23;1466:5;1473:4;1455:10;:23::i;:::-;1440:38;;1488:16;1507:4;:16;;;1488:35;;1607:1;1596:8;:12;1592:84;;;1659:4;1624:41;;;;;;1592:84;1780:4;1772:13;;1816:21;1908:5;1860:55;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1749:184;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:272;;1967:17;:24;1985:5;1967:24;;;;;;;;;;;;;;;2005:3;1967:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:18;2052:3;2020:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:634;;1315:749;;;;;:::o;2070:162::-;2159:16;2194:17;:31;2212:12;2194:31;;;;;;;;;;;;;;;2187:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2070:162;;;:::o;2357:667::-;2449:7;2487:530;2535:4;2527:13;;2631:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2736:21;2901:5;2788:149;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2688:275;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2589:396;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2558:445;;;;;;2487:22;:530::i;:::-;2468:549;;2357:667;;;;:::o;719:35::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2190:165:8:-;2273:7;2299:49;2314:4;2320:12;2342:4;2299:14;:49::i;:::-;2292:56;;2190:165;;;;:::o;2598:1772::-;2699:12;2806:4;2800:11;4025:12;4018:4;4013:3;4009:14;4002:36;4074:4;4067;4062:3;4058:14;4051:28;4104:8;4099:3;4092:21;4197:4;4192:3;4188:14;4308:4;4301:5;4293:20;4351:2;4344:5;4334:20;4326:28;;2775:1589;;2598:1772;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:26:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:60::-;2057:3;2078:5;2071:12;;2029:60;;;:::o;2095:142::-;2145:9;2178:53;2196:34;2205:24;2223:5;2205:24;:::i;:::-;2196:34;:::i;:::-;2178:53;:::i;:::-;2165:66;;2095:142;;;:::o;2243:134::-;2301:9;2334:37;2365:5;2334:37;:::i;:::-;2321:50;;2243:134;;;:::o;2383:170::-;2469:9;2502:45;2541:5;2502:45;:::i;:::-;2489:58;;2383:170;;;:::o;2559:203::-;2682:73;2749:5;2682:73;:::i;:::-;2677:3;2670:86;2559:203;;:::o;2768:294::-;2897:4;2935:2;2924:9;2920:18;2912:26;;2948:107;3052:1;3041:9;3037:17;3028:6;2948:107;:::i;:::-;2768:294;;;;:::o;3068:329::-;3127:6;3176:2;3164:9;3155:7;3151:23;3147:32;3144:119;;;3182:79;;:::i;:::-;3144:119;3302:1;3327:53;3372:7;3363:6;3352:9;3348:22;3327:53;:::i;:::-;3317:63;;3273:117;3068:329;;;;:::o;3403:114::-;3470:6;3504:5;3498:12;3488:22;;3403:114;;;:::o;3523:184::-;3622:11;3656:6;3651:3;3644:19;3696:4;3691:3;3687:14;3672:29;;3523:184;;;;:::o;3713:132::-;3780:4;3803:3;3795:11;;3833:4;3828:3;3824:14;3816:22;;3713:132;;;:::o;3851:108::-;3928:24;3946:5;3928:24;:::i;:::-;3923:3;3916:37;3851:108;;:::o;3965:179::-;4034:10;4055:46;4097:3;4089:6;4055:46;:::i;:::-;4133:4;4128:3;4124:14;4110:28;;3965:179;;;;:::o;4150:113::-;4220:4;4252;4247:3;4243:14;4235:22;;4150:113;;;:::o;4299:732::-;4418:3;4447:54;4495:5;4447:54;:::i;:::-;4517:86;4596:6;4591:3;4517:86;:::i;:::-;4510:93;;4627:56;4677:5;4627:56;:::i;:::-;4706:7;4737:1;4722:284;4747:6;4744:1;4741:13;4722:284;;;4823:6;4817:13;4850:63;4909:3;4894:13;4850:63;:::i;:::-;4843:70;;4936:60;4989:6;4936:60;:::i;:::-;4926:70;;4782:224;4769:1;4766;4762:9;4757:14;;4722:284;;;4726:14;5022:3;5015:10;;4423:608;;;4299:732;;;;:::o;5037:373::-;5180:4;5218:2;5207:9;5203:18;5195:26;;5267:9;5261:4;5257:20;5253:1;5242:9;5238:17;5231:47;5295:108;5398:4;5389:6;5295:108;:::i;:::-;5287:116;;5037:373;;;;:::o;5416:329::-;5475:6;5524:2;5512:9;5503:7;5499:23;5495:32;5492:119;;;5530:79;;:::i;:::-;5492:119;5650:1;5675:53;5720:7;5711:6;5700:9;5696:22;5675:53;:::i;:::-;5665:63;;5621:117;5416:329;;;;:::o;5751:98::-;5802:6;5836:5;5830:12;5820:22;;5751:98;;;:::o;5855:168::-;5938:11;5972:6;5967:3;5960:19;6012:4;6007:3;6003:14;5988:29;;5855:168;;;;:::o;6029:246::-;6110:1;6120:113;6134:6;6131:1;6128:13;6120:113;;;6219:1;6214:3;6210:11;6204:18;6200:1;6195:3;6191:11;6184:39;6156:2;6153:1;6149:10;6144:15;;6120:113;;;6267:1;6258:6;6253:3;6249:16;6242:27;6091:184;6029:246;;;:::o;6281:102::-;6322:6;6373:2;6369:7;6364:2;6357:5;6353:14;6349:28;6339:38;;6281:102;;;:::o;6389:373::-;6475:3;6503:38;6535:5;6503:38;:::i;:::-;6557:70;6620:6;6615:3;6557:70;:::i;:::-;6550:77;;6636:65;6694:6;6689:3;6682:4;6675:5;6671:16;6636:65;:::i;:::-;6726:29;6748:6;6726:29;:::i;:::-;6721:3;6717:39;6710:46;;6479:283;6389:373;;;;:::o;6768:419::-;6907:4;6945:2;6934:9;6930:18;6922:26;;6958:71;7026:1;7015:9;7011:17;7002:6;6958:71;:::i;:::-;7076:9;7070:4;7066:20;7061:2;7050:9;7046:18;7039:48;7104:76;7175:4;7166:6;7104:76;:::i;:::-;7096:84;;6768:419;;;;;:::o;7193:147::-;7294:11;7331:3;7316:18;;7193:147;;;;:::o;7346:386::-;7450:3;7478:38;7510:5;7478:38;:::i;:::-;7532:88;7613:6;7608:3;7532:88;:::i;:::-;7525:95;;7629:65;7687:6;7682:3;7675:4;7668:5;7664:16;7629:65;:::i;:::-;7719:6;7714:3;7710:16;7703:23;;7454:278;7346:386;;;;:::o;7738:427::-;7914:3;7936:93;8025:3;8016:6;7936:93;:::i;:::-;7929:100;;8046:93;8135:3;8126:6;8046:93;:::i;:::-;8039:100;;8156:3;8149:10;;7738:427;;;;;:::o"},"methodIdentifiers":{"accountImplementation()":"11464fbe","allDeployedAddress(uint256)":"f6d62ece","createAccount(address,uint256)":"5fbfb9cf","getAccountAddress(address,uint256)":"0d253d76","getAddress(address,uint256)":"8cb84e18","getAllAccountWithOwner(address)":"805d09ab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SmartContractWallet\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDeployedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract SmartContractWallet\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAccountAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"getAllAccountWithOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SmartContractWallet A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SmartWalletFactory.sol\":\"SmartContractWalletFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xbfb6695731de677140fbf76c772ab08c4233a122fb51ac28ac120fc49bbbc4ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f8fded7cc318efa15874b7c6a983fe17a4a955d72d240353a9a4ca1e1b824c\",\"dweb:/ipfs/QmdcmBL9Qo4Tk3Dby4wFYabGyot9JNeLPxpSXZUgUm92BV\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3ffb56bcb175984a10b1167e2eba560876bfe96a435f5d62ffed8b1bb4ebc4c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7db94af56aa20efb57c3f9003eacd884faad04118967d8e35cdffe07790bbdcd\",\"dweb:/ipfs/QmXtAshRWFjcQ1kL7gpC5CiLUZgJ9uzrZyeHp2Sux9ojPF\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x2b9807d194b92f1068d868e9587d27037264a9a067c778486f86ae21c61cbd5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22d71f40aa38a20cf466d8647452a6e3f746353474f8c8af40f03aa8cae38420\",\"dweb:/ipfs/QmQ752Hz5av7YDK8pFojzb5qgeXQvfsdkdwkHVzaXoYAZR\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x2736272f077d1699b8b8bf8be18d1c20e506668fc52b3293da70d17e63794358\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35744475cf48405d7fd6edf6a96c84ef9da3ce844d8dfe3e2e1ffc30edf21d07\",\"dweb:/ipfs/QmUdau9VjVQ7iuRbdTmFSrXP7Hcasd9Cc57LP9thK78bwj\"]},\"account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"contracts/SmartContractWallet.sol\":{\"keccak256\":\"0xfa1f0747df4e4357638cf283ce439ddc4cd3cbfeb46ef27c24866ce43c6a221f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cca1e1afb7965d0ef232e02014cb8e16649788f09b59990e0ba635320334a136\",\"dweb:/ipfs/QmXFtabg6S19jngki77HsGPWftRm4f6R9wvtRh61HuUVBc\"]},\"contracts/SmartWalletFactory.sol\":{\"keccak256\":\"0x7d371e759218dac36f29f06a4fc8462c993d2be428bba916fac850067fe959e4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://58d6bc777b647327cd3b08920d6c105652aec45997a1e2eeca4d4a0fee188c33\",\"dweb:/ipfs/QmYaP2EQXTFtVbACTi2iwkjByuJEEvjYgeFXfaM1C2zjDD\"]}},\"version\":1}"}}}}}